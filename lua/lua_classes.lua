classes = {
    activity_type = {
        cpp_name = "activity_type",
        string_id = "activity_id",
        new = {
        },
        attributes = {
        },
        functions = {
            { name = "id", rval = "const activity_id&", args = { }, const = true, static = false, },
            { name = "rooted", rval = "bool", args = { }, const = true, static = false, },
            { name = "suspendable", rval = "bool", args = { }, const = true, static = false, },
            { name = "stop_phrase", rval = "std::string", args = { }, const = true, static = false, },
            { name = "based_on", rval = "based_on_type", args = { }, const = true, static = false, },
            { name = "no_resume", rval = "bool", args = { }, const = true, static = false, },
            { name = "will_refuel_fires", rval = "bool", args = { }, const = true, static = false, },
            { name = "call_do_turn", rval = "void", args = { "player_activity *", "player *", }, const = true, static = false, },
            { name = "call_finish", rval = "bool", args = { "player_activity *", "player *", }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "check_consistency", rval = "void", args = { }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
        }
    },
    ammunition_type = {
        cpp_name = "ammunition_type",
        string_id = "ammotype",
        new = {
            { },
            { "std::string", },
        },
        attributes = {
        },
        functions = {
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "default_ammotype", rval = "const itype_id&", args = { }, const = true, static = false, },
        }
    },
    bionic = {
        cpp_name = "bionic",
        new = {
            { },
            { "bionic_id", "char", },
        },
        attributes = {
            id = { type = "bionic_id", writable = true, reference = false, static = false, },
            charge = { type = "int", writable = true, reference = false, static = false, },
            invlet = { type = "char", writable = true, reference = false, static = false, },
            powered = { type = "bool", writable = true, reference = false, static = false, },
            ammo_loaded = { type = "itype_id", writable = true, reference = false, static = false, },
            ammo_count = { type = "unsigned int", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "info", rval = "const bionic_data&", args = { }, const = true, static = false, },
            { name = "get_quality", rval = "int", args = { "const quality_id &", }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    bionic_data = {
        cpp_name = "bionic_data",
        string_id = "bionic_id",
        new = {
            { },
        },
        attributes = {
            name = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            power_activate = { type = "int", writable = true, reference = false, static = false, },
            power_deactivate = { type = "int", writable = true, reference = false, static = false, },
            power_over_time = { type = "int", writable = true, reference = false, static = false, },
            charge_time = { type = "int", writable = true, reference = false, static = false, },
            capacity = { type = "int", writable = true, reference = false, static = false, },
            npc_usable = { type = "bool", writable = true, reference = false, static = false, },
            faulty = { type = "bool", writable = true, reference = false, static = false, },
            power_source = { type = "bool", writable = true, reference = false, static = false, },
            activated = { type = "bool", writable = true, reference = false, static = false, },
            toggled = { type = "bool", writable = true, reference = false, static = false, },
            gun_bionic = { type = "bool", writable = true, reference = false, static = false, },
            weapon_bionic = { type = "bool", writable = true, reference = false, static = false, },
            armor_interface = { type = "bool", writable = true, reference = false, static = false, },
            sleep_friendly = { type = "bool", writable = true, reference = false, static = false, },
            occupied_bodyparts = { type = "std::map< body_part, size_t >", writable = true, reference = false, static = false, },
            fake_item = { type = "std::string", writable = true, reference = false, static = false, },
            canceled_mutations = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            included_bionics = { type = "std::vector< bionic_id >", writable = true, reference = false, static = false, },
            upgraded_bionic = { type = "bionic_id", writable = true, reference = false, static = false, },
            available_upgrades = { type = "std::set< bionic_id >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "is_included", rval = "bool", args = { "const bionic_id &", }, const = true, static = false, },
        }
    },
    calendar = {
        cpp_name = "calendar",
        new = {
            { },
            { "const calendar &", },
            { "int", "int", "int", "season_type", "int", },
            { "int", },
        },
        attributes = {
            INDEFINITELY_LONG = { type = "int", writable = false, reference = false, static = true, },
            start = { type = "calendar", writable = true, reference = false, static = true, },
            turn = { type = "calendar", writable = true, reference = false, static = true, },
            initial_season = { type = "season_type", writable = true, reference = false, static = true, },
            before_time_starts = { type = "time_point", writable = false, reference = false, static = true, },
            time_of_cataclysm = { type = "time_point", writable = false, reference = false, static = true, },
        },
        functions = {
            { name = "_op_int", cpp_name = "operator int", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator=", rval = "", args = { "const calendar &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "int", }, const = false, static = false, },
            --{ name = "operator-=", rval = "", args = { "const calendar &", }, const = false, static = false, },
            --{ name = "operator-=", rval = "", args = { "int", }, const = false, static = false, },
            --{ name = "operator+=", rval = "", args = { "const calendar &", }, const = false, static = false, },
            --{ name = "operator+=", rval = "", args = { "int", }, const = false, static = false, },
            --{ name = "operator-", rval = "", args = { "const calendar &", }, const = true, static = false, },
            --{ name = "operator-", rval = "", args = { "int", }, const = true, static = false, },
            --{ name = "operator+", rval = "", args = { "const calendar &", }, const = true, static = false, },
            --{ name = "operator+", rval = "", args = { "int", }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "int", }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "const calendar &", }, const = true, static = false, },
            { name = "increment", rval = "void", args = { }, const = false, static = false, },
            { name = "sunrise", rval = "calendar", args = { }, const = true, static = false, },
            { name = "sunset", rval = "calendar", args = { }, const = true, static = false, },
            { name = "is_night", rval = "bool", args = { }, const = true, static = false, },
            { name = "current_daylight_level", rval = "double", args = { }, const = true, static = false, },
            { name = "sunlight", rval = "float", args = { }, const = true, static = false, },
            { name = "years", rval = "int", args = { }, const = true, static = false, },
            { name = "day_of_year", rval = "int", args = { }, const = true, static = false, },
            { name = "once_every", rval = "bool", args = { "const time_duration &", }, const = false, static = true, },
            { name = "eternal_season", rval = "bool", args = { }, const = false, static = true, },
            { name = "year_length", rval = "time_duration", args = { }, const = false, static = true, },
            { name = "season_length", rval = "time_duration", args = { }, const = false, static = true, },
            { name = "season_ratio", rval = "float", args = { }, const = false, static = true, },
            { name = "season_from_default_ratio", rval = "float", args = { }, const = false, static = true, },
            { name = "name_season", rval = "const std::string", args = { "season_type", }, const = false, static = true, },
        }
    },
    Character = {
        cpp_name = "Character",
        new = {
        },
        attributes = {
            str_max = { type = "int", writable = true, reference = false, static = false, },
            dex_max = { type = "int", writable = true, reference = false, static = false, },
            int_max = { type = "int", writable = true, reference = false, static = false, },
            per_max = { type = "int", writable = true, reference = false, static = false, },
            str_cur = { type = "int", writable = true, reference = false, static = false, },
            dex_cur = { type = "int", writable = true, reference = false, static = false, },
            int_cur = { type = "int", writable = true, reference = false, static = false, },
            per_cur = { type = "int", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            male = { type = "bool", writable = true, reference = false, static = false, },
            worn = { type = "std::list< item >", writable = true, reference = false, static = false, },
            hp_cur = { type = "std::array< int, num_hp_parts >", writable = true, reference = false, static = false, },
            hp_max = { type = "std::array< int, num_hp_parts >", writable = true, reference = false, static = false, },
            damage_bandaged = { type = "std::array< int, num_hp_parts >", writable = true, reference = false, static = false, },
            damage_disinfected = { type = "std::array< int, num_hp_parts >", writable = true, reference = false, static = false, },
            nv_cached = { type = "bool", writable = true, reference = false, static = false, },
            inv = { type = "inventory", writable = true, reference = false, static = false, },
            last_item = { type = "itype_id", writable = true, reference = false, static = false, },
            weapon = { type = "item", writable = true, reference = false, static = false, },
            my_bionics = { type = "pimpl< bionic_collection >", writable = true, reference = false, static = false, },
            fleshy = { type = "std::vector< material_id >", writable = false, reference = false, static = true, },
        },
        functions = {
            { name = "used_weapon", rval = "const item &", args = { }, const = true, static = false, },
            { name = "used_weapon", rval = "item &", args = { }, const = false, static = false, },
            { name = "pour_into", rval = "bool", args = { "item &", "item &", }, const = false, static = false, },
            { name = "pour_into", rval = "bool", args = { "vehicle &", "item &", }, const = false, static = false, },
            { name = "bloodType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "gibType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "is_warm", rval = "bool", args = { }, const = true, static = false, },
            { name = "symbol", rval = "const std::string &", args = { }, const = true, static = false, },
            { name = "get_str", rval = "int", args = { }, const = true, static = false, },
            { name = "get_dex", rval = "int", args = { }, const = true, static = false, },
            { name = "get_per", rval = "int", args = { }, const = true, static = false, },
            { name = "get_int", rval = "int", args = { }, const = true, static = false, },
            { name = "get_str_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_dex_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_per_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_int_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_str_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_dex_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_per_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_int_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "ranged_dex_mod", rval = "int", args = { }, const = true, static = false, },
            { name = "ranged_per_mod", rval = "int", args = { }, const = true, static = false, },
            { name = "set_str_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_dex_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_per_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_int_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_str_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_dex_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_per_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_int_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_healthy", rval = "int", args = { }, const = true, static = false, },
            { name = "get_healthy_mod", rval = "int", args = { }, const = true, static = false, },
            { name = "mod_healthy", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_healthy_mod", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "set_healthy", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_healthy_mod", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_stored_kcal", rval = "int", args = { }, const = true, static = false, },
            { name = "get_healthy_kcal", rval = "int", args = { }, const = true, static = false, },
            { name = "get_kcal_percent", rval = "float", args = { }, const = true, static = false, },
            { name = "get_hunger", rval = "int", args = { }, const = true, static = false, },
            { name = "get_starvation", rval = "int", args = { }, const = true, static = false, },
            { name = "get_thirst", rval = "int", args = { }, const = true, static = false, },
            { name = "get_thirst_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "get_hunger_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "get_fatigue_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "get_fatigue", rval = "int", args = { }, const = true, static = false, },
            { name = "get_sleep_deprivation", rval = "int", args = { }, const = true, static = false, },
            { name = "mod_stored_kcal", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_stored_nutr", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_hunger", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_thirst", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_fatigue", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_sleep_deprivation", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_stored_kcal", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_hunger", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_thirst", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_fatigue", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_sleep_deprivation", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_stat", rval = "void", args = { "const std::string &", "float", }, const = false, static = false, },
            { name = "effective_dispersion", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "get_aim_types", rval = "std::vector< aim_type >", args = { "const item &", }, const = true, static = false, },
            { name = "get_fastest_sight", rval = "std::pair< int, int >", args = { "const item &", "double", }, const = true, static = false, },
            { name = "get_most_accurate_sight", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "aim_speed_skill_modifier", rval = "double", args = { "const skill_id &", }, const = true, static = false, },
            { name = "aim_speed_dex_modifier", rval = "double", args = { }, const = true, static = false, },
            { name = "aim_speed_encumbrance_modifier", rval = "double", args = { }, const = true, static = false, },
            { name = "aim_cap_from_volume", rval = "double", args = { "const item &", }, const = true, static = false, },
            { name = "aim_per_move", rval = "double", args = { "const item &", "double", }, const = true, static = false, },
            { name = "get_dodge_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_hit_base", rval = "float", args = { }, const = true, static = false, },
            { name = "update_health", rval = "void", args = { }, optional_args = { "int", }, const = false, static = false, },
            { name = "reset_bonuses", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_stats", rval = "void", args = { }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = false, },
            { name = "get_random_body_part", rval = "body_part", args = { "bool", }, const = true, static = false, },
            { name = "get_all_body_parts", rval = "std::vector< body_part >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "reset_encumbrance", rval = "void", args = { }, const = false, static = false, },
            { name = "encumb", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_weight", rval = "units::mass", args = { }, const = true, static = false, },
            { name = "get_encumbrance", rval = "std::array< encumbrance_data, num_bp >", args = { }, const = true, static = false, },
            { name = "get_encumbrance", rval = "std::array< encumbrance_data, num_bp >", args = { "const item &", }, const = true, static = false, },
            { name = "extraEncumbrance", rval = "int", args = { "const layer_level", "const int", }, const = true, static = false, },
            { name = "is_wearing_active_power_armor", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_blind", rval = "bool", args = { }, const = true, static = false, },
            { name = "exclusive_flag_coverage", rval = "body_part_set", args = { "const std::string &", }, const = true, static = false, },
            { name = "move_effects", rval = "bool", args = { "bool", }, const = false, static = false, },
            { name = "add_effect", rval = "void", args = { "const efftype_id &", "time_duration", }, optional_args = { "body_part", "bool", "int", "bool", "bool", }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "recalc_hp", rval = "void", args = { }, const = false, static = false, },
            { name = "recalc_sight_limits", rval = "void", args = { }, const = false, static = false, },
            { name = "get_vision_threshold", rval = "float", args = { "float", }, const = true, static = false, },
            { name = "random_good_trait", rval = "trait_id", args = { }, const = false, static = false, },
            { name = "random_bad_trait", rval = "trait_id", args = { }, const = false, static = false, },
            { name = "has_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_base_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_trait_flag", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "trait_by_invlet", rval = "trait_id", args = { "long", }, const = true, static = false, },
            { name = "toggle_trait", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "set_mutation", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "unset_mutation", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "body_window", rval = "hp_part", args = { "const std::string &", "bool", "bool", "int", "int", "int", "float", "float", "float", "float", "float", }, const = true, static = false, },
            { name = "limb_color", rval = "nc_color", args = { "body_part", "bool", "bool", "bool", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            { name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "mutation_effect", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "mutation_loss_effect", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "has_active_mutation", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "mutation_armor", rval = "resistances", args = { "body_part", }, const = true, static = false, },
            { name = "mutation_armor", rval = "float", args = { "body_part", "damage_type", }, const = true, static = false, },
            { name = "mutation_armor", rval = "float", args = { "body_part", "const damage_unit &", }, const = true, static = false, },
            { name = "has_bionic", rval = "bool", args = { "const bionic_id &", }, const = true, static = false, },
            { name = "has_active_bionic", rval = "bool", args = { "const bionic_id &", }, const = true, static = false, },
            { name = "is_worn", rval = "bool", args = { "const item &", }, const = true, static = false, },
            --{ name = "nearby", rval = "std::vector< item_location >", args = { "const std::function< bool(const item *, const item *)> &", }, optional_args = { "int", }, const = true, static = false, },
            --{ name = "remove_worn_items_with", rval = "std::list< item >", args = { "std::function< bool(item &)>", }, const = false, static = false, },
            { name = "i_at", rval = "item &", args = { "int", }, const = false, static = false, },
            { name = "i_at", rval = "const item &", args = { "int", }, const = true, static = false, },
            { name = "get_item_position", rval = "int", args = { "const item *", }, const = true, static = false, },
            { name = "i_add_to_container", rval = "long int", args = { "const item &", "const bool", }, const = false, static = false, },
            { name = "i_add", rval = "item &", args = { "item", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "i_rem", rval = "item", args = { "int", }, const = false, static = false, },
            { name = "i_rem", rval = "item", args = { "const item *", }, const = false, static = false, },
            { name = "i_rem_keep_contents", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "i_add_or_drop", rval = "bool", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "allocated_invlets", rval = "invlets_bitset", args = { }, const = true, static = false, },
            { name = "has_active_item", rval = "bool", args = { "const itype_id &", }, const = true, static = false, },
            { name = "remove_weapon", rval = "item", args = { }, const = false, static = false, },
            { name = "remove_mission_items", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_ammo", rval = "std::vector< const item * >", args = { "const ammotype &", }, const = true, static = false, },
            { name = "find_ammo", rval = "std::vector< item_location >", args = { "const item &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "find_reloadables", rval = "std::vector< item_location >", args = { }, const = false, static = false, },
            { name = "ammo_count_for", rval = "long", args = { "const item &", }, const = false, static = false, },
            { name = "throw_range", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "throwing_dispersion", rval = "int", args = { "const item &", }, optional_args = { "Creature *", "bool", }, const = true, static = false, },
            { name = "throw_dispersion_per_dodge", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "best_nearby_lifting_assist", rval = "int", args = { }, const = true, static = false, },
            { name = "best_nearby_lifting_assist", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "weight_carried", rval = "units::mass", args = { }, const = true, static = false, },
            { name = "volume_carried", rval = "units::volume", args = { }, const = true, static = false, },
            --{ name = "weight_carried_with_tweaks", rval = "units::mass", args = { "const item_tweaks &", }, const = true, static = false, },
            --{ name = "volume_carried_with_tweaks", rval = "units::volume", args = { "const item_tweaks &", }, const = true, static = false, },
            { name = "weight_capacity", rval = "units::mass", args = { }, const = true, static = false, },
            { name = "volume_capacity", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "volume_capacity_reduced_by", rval = "units::volume", args = { "const units::volume &", }, optional_args = { "const std::map< const item *, int > &", }, const = true, static = false, },
            { name = "can_pickVolume", rval = "bool", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "can_pickWeight", rval = "bool", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "can_use", rval = "bool", args = { "const item &", }, optional_args = { "const item &", }, const = true, static = false, },
            { name = "is_armed", rval = "bool", args = { }, const = true, static = false, },
            { name = "drop_invalid_inventory", rval = "void", args = { }, const = false, static = false, },
            { name = "has_artifact_with", rval = "bool", args = { "const art_effect_passive", }, const = true, static = false, },
            { name = "is_wearing", rval = "bool", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_wearing_on_bp", rval = "bool", args = { "const itype_id &", "body_part", }, const = true, static = false, },
            { name = "worn_with_flag", rval = "bool", args = { "const std::string &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "get_skill_level", rval = "int", args = { "const skill_id &", }, const = true, static = false, },
            { name = "get_skill_level", rval = "int", args = { "const skill_id &", "const item &", }, const = true, static = false, },
            { name = "get_all_skills", rval = "const SkillLevelMap &", args = { }, const = true, static = false, },
            { name = "get_skill_level_object", rval = "SkillLevel &", args = { "const skill_id &", }, const = false, static = false, },
            { name = "get_skill_level_object", rval = "const SkillLevel &", args = { "const skill_id &", }, const = true, static = false, },
            { name = "set_skill_level", rval = "void", args = { "const skill_id &", "int", }, const = false, static = false, },
            { name = "mod_skill_level", rval = "void", args = { "const skill_id &", "int", }, const = false, static = false, },
            { name = "meets_skill_requirements", rval = "bool", args = { "const std::map< skill_id, int > &", }, optional_args = { "const item &", }, const = true, static = false, },
            { name = "meets_stat_requirements", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "meets_requirements", rval = "bool", args = { "const item &", }, optional_args = { "const item &", }, const = true, static = false, },
            { name = "enumerate_unmet_requirements", rval = "std::string", args = { "const item &", }, optional_args = { "const item &", }, const = true, static = false, },
            { name = "get_time_died", rval = "time_point", args = { }, const = true, static = false, },
            { name = "set_time_died", rval = "void", args = { "const time_point &", }, const = false, static = false, },
            { name = "normalize", rval = "void", args = { }, const = false, static = false, },
            { name = "die", rval = "void", args = { "Creature *", }, const = false, static = false, },
            { name = "get_name", rval = "std::string", args = { }, const = true, static = false, },
            --{ name = "query_yn", rval = "bool", args = { "typename ...", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "query_yn", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "is_immune_field", rval = "bool", args = { "const field_id", }, const = true, static = false, },
            { name = "has_nv", rval = "bool", args = { }, const = false, static = false, },
            { name = "rest_quality", rval = "float", args = { }, const = true, static = false, },
            { name = "healing_rate", rval = "float", args = { "float", }, const = true, static = false, },
            { name = "healing_rate_medicine", rval = "float", args = { "float", "const body_part", }, const = true, static = false, },
            { name = "mutation_value", rval = "float", args = { "const std::string &", }, const = true, static = false, },
            { name = "get_mutation_social_mods", rval = "const social_modifiers", args = { }, const = true, static = false, },
            { name = "symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "extended_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "empty_skills", rval = "void", args = { }, const = false, static = false, },
            { name = "pick_name", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "get_base_traits", rval = "std::vector< trait_id >", args = { }, const = true, static = false, },
            { name = "get_mutations", rval = "std::vector< trait_id >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "get_vision_modes", rval = "const std::bitset<NUM_VISION_MODES>&", args = { }, const = true, static = false, },
            { name = "empty_traits", rval = "void", args = { }, const = false, static = false, },
            { name = "add_traits", rval = "void", args = { }, const = false, static = false, },
            { name = "on_item_wear", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_item_takeoff", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_worn_item_washed", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "bp_to_hp", rval = "hp_part", args = { "body_part", }, const = false, static = true, },
            { name = "hp_to_bp", rval = "body_part", args = { "hp_part", }, const = false, static = true, },
            { name = "worn_position_to_index", rval = "int", args = { "int", }, const = false, static = true, },
        }
    },
    Creature = {
        cpp_name = "Creature",
        new = {
        },
        attributes = {
            size_map = { type = "std::map< std::string, m_size >", writable = false, reference = false, static = true, },
            cmat_flesh = { type = "std::set< material_id >", writable = false, reference = false, static = true, },
            cmat_fleshnveg = { type = "std::set< material_id >", writable = false, reference = false, static = true, },
            cmat_flammable = { type = "std::set< material_id >", writable = false, reference = false, static = true, },
            cmat_flameres = { type = "std::set< material_id >", writable = false, reference = false, static = true, },
            facing = { type = "FacingDirection", writable = true, reference = false, static = false, },
            moves = { type = "int", writable = true, reference = false, static = false, },
            underwater = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "sees", rval = "bool", args = { "const Creature &", }, const = true, static = false, },
            { name = "sees", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            --{ name = "get_name", rval = "std::string", args = { }, const = true, static = false, },
            --{ name = "disp_name", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            --{ name = "skin_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "is_player", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_npc", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_monster", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_fake", rval = "bool", args = { }, const = true, static = false, },
            { name = "set_fake", rval = "void", args = { "const bool", }, const = false, static = false, },
            { name = "normalize", rval = "void", args = { }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_bonuses", rval = "void", args = { }, const = false, static = false, },
            --{ name = "reset_stats", rval = "void", args = { }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = false, },
            { name = "bleed", rval = "void", args = { }, const = true, static = false, },
            --{ name = "die", rval = "void", args = { "Creature *", }, const = false, static = false, },
            --{ name = "hit_roll", rval = "float", args = { }, const = true, static = false, },
            --{ name = "dodge_roll", rval = "float", args = { }, const = false, static = false, },
            --{ name = "stability_roll", rval = "float", args = { }, const = true, static = false, },
            --{ name = "attitude_to", rval = "Attitude", args = { "const Creature &", }, const = true, static = false, },
            --{ name = "avoid_trap", rval = "bool", args = { "const tripoint &", "const trap &", }, const = true, static = false, },
            --{ name = "sight_range", rval = "int", args = { "int", }, const = true, static = false, },
            --{ name = "power_rating", rval = "float", args = { }, const = true, static = false, },
            --{ name = "speed_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "auto_find_hostile_target", rval = "Creature *", args = { "int", "int &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "ranged_target_size", rval = "double", args = { }, const = true, static = false, },
            --{ name = "block_hit", rval = "bool", args = { "Creature *", "body_part &", "damage_instance &", }, const = false, static = false, },
            --{ name = "absorb_hit", rval = "void", args = { "body_part", "damage_instance &", }, const = false, static = false, },
            --{ name = "knock_back_from", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "deal_melee_attack", rval = "int", args = { "Creature *", "int", }, const = false, static = false, },
            { name = "deal_melee_hit", rval = "void", args = { "Creature *", "int", "bool", "const damage_instance &", "dealt_damage_instance &", }, const = false, static = false, },
            { name = "deal_projectile_attack", rval = "void", args = { "Creature *", "dealt_projectile_attack &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "deal_damage", rval = "dealt_damage_instance", args = { "Creature *", "body_part", "const damage_instance &", }, const = false, static = false, },
            { name = "deal_damage_handle_type", rval = "void", args = { "const damage_unit &", "body_part", "int &", "int &", }, const = false, static = false, },
            --{ name = "apply_damage", rval = "void", args = { "Creature *", "body_part", "int", }, optional_args = { "const bool", }, const = false, static = false, },
            --{ name = "on_dodge", rval = "void", args = { "Creature *", "float", }, const = false, static = false, },
            --{ name = "on_hit", rval = "void", args = { "Creature *", }, optional_args = { "body_part", "float", "dealt_projectile_attack const *const", }, const = false, static = false, },
            { name = "digging", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "is_on_ground", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "is_underwater", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_warm", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "has_weapon", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "is_hallucination", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "is_dead_state", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "is_elec_immune", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "is_immune_effect", rval = "bool", args = { "const efftype_id &", }, const = true, static = false, },
            --{ name = "is_immune_damage", rval = "bool", args = { "const damage_type", }, const = true, static = false, },
            { name = "is_dangerous_fields", rval = "bool", args = { "const field &", }, const = true, static = false, },
            { name = "is_dangerous_field", rval = "bool", args = { "const field_entry &", }, const = true, static = false, },
            { name = "is_immune_field", rval = "bool", args = { "const field_id", }, const = true, static = false, },
            --{ name = "fall_damage_mod", rval = "float", args = { }, const = true, static = false, },
            --{ name = "impact", rval = "int", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "check_dead_state", rval = "void", args = { }, const = false, static = false, },
            --{ name = "posx", rval = "int", args = { }, const = true, static = false, },
            --{ name = "posy", rval = "int", args = { }, const = true, static = false, },
            --{ name = "posz", rval = "int", args = { }, const = true, static = false, },
            --{ name = "pos", rval = "const tripoint&", args = { }, const = true, static = false, },
            --{ name = "setpos", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            --{ name = "move_effects", rval = "bool", args = { "bool", }, const = false, static = false, },
            { name = "add_effect", rval = "void", args = { "const efftype_id &", "time_duration", }, optional_args = { "body_part", "bool", "int", "bool", "bool", }, const = false, static = false, },
            { name = "add_env_effect", rval = "bool", args = { "const efftype_id &", "body_part", "int", "const time_duration &", }, optional_args = { "body_part", "bool", "int", "bool", }, const = false, static = false, },
            { name = "remove_effect", rval = "bool", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = false, static = false, },
            { name = "clear_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "has_effect", rval = "bool", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "get_effect", rval = "const effect &", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "get_effect", rval = "effect &", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = false, static = false, },
            { name = "get_effect_dur", rval = "time_duration", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "get_effect_int", rval = "int", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "resists_effect", rval = "bool", args = { "const effect &", }, const = false, static = false, },
            { name = "set_value", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "remove_value", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "get_value", rval = "std::string", args = { "const std::string &", }, const = true, static = false, },
            { name = "process_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "has_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "mod_pain", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_pain_noresist", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_pain", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_pain", rval = "int", args = { }, const = true, static = false, },
            { name = "get_perceived_pain", rval = "int", args = { }, const = true, static = false, },
            { name = "get_pain_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_moves", rval = "int", args = { }, const = true, static = false, },
            { name = "mod_moves", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_moves", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "in_sleep_state", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_killer", rval = "Creature *", args = { }, const = true, static = false, },
            { name = "get_num_blocks", rval = "int", args = { }, const = true, static = false, },
            { name = "get_num_dodges", rval = "int", args = { }, const = true, static = false, },
            { name = "get_num_blocks_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_num_dodges_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_env_resist", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_cut", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash_base", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_cut_base", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_armor_cut_bonus", rval = "int", args = { }, const = true, static = false, },
            --{ name = "get_armor_type", rval = "int", args = { "damage_type", "body_part", }, const = true, static = false, },
            { name = "get_dodge", rval = "float", args = { }, const = true, static = false, },
            --{ name = "get_melee", rval = "float", args = { }, const = true, static = false, },
            { name = "get_hit", rval = "float", args = { }, const = true, static = false, },
            { name = "get_speed", rval = "int", args = { }, const = true, static = false, },
            --{ name = "get_size", rval = "m_size", args = { }, const = true, static = false, },
            --{ name = "get_hp", rval = "int", args = { "hp_part", }, const = true, static = false, },
            --{ name = "get_hp", rval = "int", args = { }, const = true, static = false, },
            --{ name = "get_hp_max", rval = "int", args = { "hp_part", }, const = true, static = false, },
            --{ name = "get_hp_max", rval = "int", args = { }, const = true, static = false, },
            --{ name = "hp_percentage", rval = "int", args = { }, const = true, static = false, },
            --{ name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            --{ name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            --{ name = "bloodType", rval = "field_id", args = { }, const = true, static = false, },
            --{ name = "gibType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const m_flag", }, const = true, static = false, },
            { name = "uncanny_dodge", rval = "bool", args = { }, const = false, static = false, },
            --{ name = "get_random_body_part", rval = "body_part", args = { }, optional_args = { "bool", }, const = true, static = false, },
            --{ name = "get_all_body_parts", rval = "std::vector<body_part>", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "get_speed_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_speed_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_block_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_bash_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_cut_bonus", rval = "int", args = { }, const = true, static = false, },
            --{ name = "get_dodge_base", rval = "float", args = { }, const = true, static = false, },
            --{ name = "get_hit_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_dodge_bonus", rval = "float", args = { }, const = true, static = false, },
            { name = "get_hit_bonus", rval = "float", args = { }, const = true, static = false, },
            { name = "get_bash_mult", rval = "float", args = { }, const = true, static = false, },
            { name = "get_cut_mult", rval = "float", args = { }, const = true, static = false, },
            { name = "get_melee_quiet", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_grab_resist", rval = "int", args = { }, const = true, static = false, },
            --{ name = "has_grab_break_tec", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_throw_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "mod_stat", rval = "void", args = { "const std::string &", "float", }, const = false, static = false, },
            { name = "set_num_blocks_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_num_dodges_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_armor_bash_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_armor_cut_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_speed_base", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_speed_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_block_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_bash_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_cut_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_speed_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_block_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_bash_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_cut_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_dodge_bonus", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_hit_bonus", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "mod_dodge_bonus", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "mod_hit_bonus", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_bash_mult", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_cut_mult", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_melee_quiet", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "set_grab_resist", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_throw_resist", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "weight_capacity", rval = "units::mass", args = { }, const = true, static = false, },
            --{ name = "get_pathfinding_settings", rval = "const pathfinding_settings&", args = { }, const = true, static = false, },
            --{ name = "get_path_avoid", rval = "std::set<tripoint>", args = { }, const = true, static = false, },
            { name = "draw", rval = "void", args = { "const catacurses::window &", "int", "int", "bool", }, const = true, static = false, },
            { name = "draw", rval = "void", args = { "const catacurses::window &", "const tripoint &", "bool", }, const = true, static = false, },
            --{ name = "print_info", rval = "int", args = { "const catacurses::window &", "int", "int", "int", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_if_player", rval = "void", args = { "typename ...", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_if_player", rval = "void", args = { "typename ...", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_if_player", rval = "void", args = { "typename ...", "const game_message_type", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_if_player", rval = "void", args = { "typename ...", "const game_message_type", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_if_npc", rval = "void", args = { "typename ...", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_if_npc", rval = "void", args = { "typename ...", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_if_npc", rval = "void", args = { "typename ...", "const game_message_type", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_if_npc", rval = "void", args = { "typename ...", "const game_message_type", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_player_or_npc", rval = "void", args = { "typename ...", "const char *const", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_player_or_npc", rval = "void", args = { "typename ...", "const std::string &", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_player_or_npc", rval = "void", args = { "typename ...", "const game_message_type", "const char *const", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_player_or_npc", rval = "void", args = { "typename ...", "const game_message_type", "const std::string &", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_player_or_say", rval = "void", args = { "typename ...", "const char *const", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_player_or_say", rval = "void", args = { "typename ...", "const std::string &", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_player_or_say", rval = "void", args = { "typename ...", "const game_message_type", "const char *const", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_player_or_say", rval = "void", args = { "typename ...", "const game_message_type", "const std::string &", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_memorial_log", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            --{ name = "add_memorial_log", rval = "void", args = { "typename ...", "const char *const", "const char *const", "Args &&...", }, const = false, static = false, },
            --{ name = "add_memorial_log", rval = "void", args = { "typename ...", "const std::string &", "const std::string &", "Args &&...", }, const = false, static = false, },
            --{ name = "extended_description", rval = "std::string", args = { }, const = true, static = false, },
            --{ name = "symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            --{ name = "basic_symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            --{ name = "symbol", rval = "const std::string&", args = { }, const = true, static = false, },
            { name = "is_symbol_highlighted", rval = "bool", args = { }, const = true, static = false, },
            { name = "select_body_part", rval = "body_part", args = { "Creature *", "int", }, const = true, static = false, },
            { name = "get_attitude_ui_data", rval = "const std::pair< std::string, nc_color > &", args = { "Attitude", }, const = false, static = true, },
        }
    },
    effect_type = {
        cpp_name = "effect_type",
        string_id = "efftype_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "efftype_id", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "get_rating", rval = "effect_rating", args = { }, const = true, static = false, },
            { name = "use_name_ints", rval = "bool", args = { }, const = true, static = false, },
            { name = "use_desc_ints", rval = "bool", args = { "bool", }, const = true, static = false, },
            { name = "gain_game_message_type", rval = "game_message_type", args = { }, const = true, static = false, },
            { name = "lose_game_message_type", rval = "game_message_type", args = { }, const = true, static = false, },
            { name = "get_apply_message", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_apply_memorial_log", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_remove_message", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_remove_memorial_log", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_main_parts", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_show_in_info", rval = "bool", args = { }, const = true, static = false, },
            { name = "load_mod_data", rval = "bool", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "load_miss_msgs", rval = "bool", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "load_decay_msgs", rval = "bool", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "register_ma_buff_effect", rval = "void", args = { "const effect_type &", }, const = false, static = true, },
        }
    },
    encumbrance_data = {
        cpp_name = "encumbrance_data",
        new = {
        },
        attributes = {
            encumbrance = { type = "int", writable = true, reference = false, static = false, },
            armor_encumbrance = { type = "int", writable = true, reference = false, static = false, },
            layer_penalty = { type = "int", writable = true, reference = false, static = false, },
            layer_penalty_details = { type = "std::array< layer_details, static_cast< size_t > layer_level::MAX_CLOTHING_LAYER)>", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "layer", rval = "void", args = { "const layer_level", "const int", }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = false, },
            --{ name = "operator==", rval = "", args = { "const encumbrance_data &", }, const = true, static = false, },
        }
    },
    field = {
        cpp_name = "field",
        new = {
            { },
        },
        attributes = {
        },
        functions = {
            { name = "findField", rval = "field_entry *", args = { "const field_id", }, const = false, static = false, },
            { name = "findFieldc", rval = "const field_entry *", args = { "const field_id", }, const = true, static = false, },
            { name = "findField", rval = "const field_entry *", args = { "const field_id", }, const = true, static = false, },
            { name = "addField", rval = "bool", args = { "field_id", }, optional_args = { "int", "const time_duration &", }, const = false, static = false, },
            { name = "removeField", rval = "bool", args = { "field_id", }, const = false, static = false, },
            { name = "removeField", rval = "void", args = { "std::map< field_id, field_entry >::iterator", }, const = false, static = false, },
            { name = "fieldCount", rval = "unsigned int", args = { }, const = true, static = false, },
            { name = "fieldSymbol", rval = "field_id", args = { }, const = true, static = false, },
            { name = "begin", rval = "std::map< field_id, field_entry >::iterator", args = { }, const = false, static = false, },
            { name = "begin", rval = "std::map< field_id, field_entry >::const_iterator", args = { }, const = true, static = false, },
            { name = "end", rval = "std::map< field_id, field_entry >::iterator", args = { }, const = false, static = false, },
            { name = "end", rval = "std::map< field_id, field_entry >::const_iterator", args = { }, const = true, static = false, },
            { name = "move_cost", rval = "int", args = { }, const = true, static = false, },
        }
    },
    field_entry = {
        cpp_name = "field_entry",
        new = {
            { },
            { "const field_id", "const int", "const time_duration &", },
        },
        attributes = {
        },
        functions = {
            { name = "color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "symbol", rval = "char", args = { }, const = true, static = false, },
            { name = "move_cost", rval = "int", args = { }, const = true, static = false, },
            { name = "getFieldType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "getFieldDensity", rval = "int", args = { }, const = true, static = false, },
            { name = "setFieldType", rval = "field_id", args = { "const field_id", }, const = false, static = false, },
            { name = "setFieldDensity", rval = "int", args = { "const int", }, const = false, static = false, },
            { name = "getFieldAge", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "setFieldAge", rval = "time_duration", args = { "const time_duration &", }, const = false, static = false, },
            { name = "mod_age", rval = "time_duration", args = { "const time_duration &", }, const = false, static = false, },
            { name = "is_dangerous", rval = "bool", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "isAlive", rval = "bool", args = { }, const = false, static = false, },
            { name = "decays_on_actualize", rval = "bool", args = { }, const = true, static = false, },
        }
    },
    furn_t = {
        cpp_name = "furn_t",
        string_id = "furn_str_id",
        int_id = "furn_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "furn_str_id", writable = true, reference = false, static = false, },
            open = { type = "furn_str_id", writable = true, reference = false, static = false, },
            close = { type = "furn_str_id", writable = true, reference = false, static = false, },
            crafting_pseudo_item = { type = "std::string", writable = true, reference = false, static = false, },
            keg_capacity = { type = "units::volume", writable = true, reference = false, static = false, },
            comfort = { type = "int", writable = true, reference = false, static = false, },
            floor_bedding_warmth = { type = "int", writable = true, reference = false, static = false, },
            bonus_fire_warmth_feet = { type = "int", writable = true, reference = false, static = false, },
            deployed_item = { type = "itype_id", writable = true, reference = false, static = false, },
            move_str_req = { type = "int", writable = true, reference = false, static = false, },
            workbench = { type = "cata::optional< furn_workbench_info >", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "crafting_pseudo_item_type", rval = "const itype *", args = { }, const = true, static = false, },
            { name = "crafting_ammo_item_type", rval = "const itype *", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "check", rval = "void", args = { }, const = true, static = false, },
            { name = "count", rval = "size_t", args = { }, const = false, static = true, },
        }
    },
    game = {
        cpp_name = "game",
        new = {
            { },
        },
        attributes = {
            m = { type = "map", writable = true, reference = true, static = false, },
            u = { type = "player", writable = true, reference = true, static = false, },
            scent = { type = "scent_map", writable = true, reference = true, static = false, },
            events = { type = "event_manager", writable = true, reference = true, static = false, },
            critter_tracker = { type = "pimpl< Creature_tracker >", writable = true, reference = false, static = false, },
            faction_manager_ptr = { type = "pimpl< faction_manager >", writable = true, reference = false, static = false, },
            new_faction_manager_ptr = { type = "pimpl< new_faction_manager >", writable = true, reference = false, static = false, },
            uquit = { type = "quit_status", writable = true, reference = false, static = false, },
            new_game = { type = "bool", writable = true, reference = false, static = false, },
            temperature = { type = "signed char", writable = true, reference = false, static = false, },
            lightning_active = { type = "bool", writable = true, reference = false, static = false, },
            weather = { type = "weather_type", writable = true, reference = false, static = false, },
            winddirection = { type = "int", writable = true, reference = false, static = false, },
            windspeed = { type = "int", writable = true, reference = false, static = false, },
            weather_precise = { type = "pimpl< w_point >", writable = true, reference = false, static = false, },
            scen = { type = "scenario", writable = false, reference = true, static = false, },
            coming_to_stairs = { type = "std::vector< monster >", writable = true, reference = false, static = false, },
            monstairz = { type = "int", writable = true, reference = false, static = false, },
            ter_view_x = { type = "int", writable = true, reference = false, static = false, },
            ter_view_y = { type = "int", writable = true, reference = false, static = false, },
            ter_view_z = { type = "int", writable = true, reference = false, static = false, },
            w_terrain = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_overmap = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_omlegend = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_minimap = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_pixel_minimap = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_panel_adm_ptr = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_panel_adm = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_blackspace = { type = "catacurses::window", writable = true, reference = false, static = false, },
            driving_view_offset = { type = "point", writable = true, reference = false, static = false, },
            debug_pathfinding = { type = "bool", writable = true, reference = false, static = false, },
            displaying_scent = { type = "bool", writable = true, reference = false, static = false, },
            show_panel_adm = { type = "bool", writable = true, reference = false, static = false, },
            right_sidebar = { type = "bool", writable = true, reference = false, static = false, },
            reinitmap = { type = "bool", writable = true, reference = false, static = false, },
            fullscreen = { type = "bool", writable = true, reference = false, static = false, },
            was_fullscreen = { type = "bool", writable = true, reference = false, static = false, },
            pixel_minimap_option = { type = "int", writable = true, reference = false, static = false, },
            safe_mode = { type = "safe_mode_type", writable = true, reference = false, static = false, },
            turnssincelastmon = { type = "int", writable = true, reference = false, static = false, },
            wind_direction_override = { type = "cata::optional< int >", writable = true, reference = false, static = false, },
            windspeed_override = { type = "cata::optional< int >", writable = true, reference = false, static = false, },
            weather_override = { type = "weather_type", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "handle_all_liquid", rval = "void", args = { "item", "int", }, const = false, static = false, },
            { name = "consume_liquid", rval = "bool", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "handle_liquid_from_ground", rval = "bool", args = { "std::list< item >::iterator", "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "handle_liquid_from_container", rval = "bool", args = { "std::list< item >::iterator", "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "handle_liquid_from_container", rval = "bool", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "handle_liquid", rval = "bool", args = { "item &", }, optional_args = { "item *", "int", "const tripoint *", "const vehicle *", "const int", "const monster *", }, const = false, static = false, },
            { name = "get_liquid_target", rval = "bool", args = { "item &", "item *const", "const int", "const tripoint *", "const vehicle *const", "const monster *const", "liquid_dest_opt &", }, const = false, static = false, },
            { name = "perform_liquid_transfer", rval = "bool", args = { "item &", "const tripoint *", "const vehicle *const", "const int", "const monster *const", "liquid_dest_opt &", }, const = false, static = false, },
            { name = "load_static_data", rval = "void", args = { }, const = false, static = false, },
            { name = "load_core_data", rval = "void", args = { "loading_ui &", }, const = false, static = false, },
            { name = "is_core_data_loaded", rval = "bool", args = { }, const = true, static = false, },
            { name = "check_mod_data", rval = "bool", args = { "const std::vector< mod_id > &", "loading_ui &", }, const = false, static = false, },
            { name = "load_world_modfiles", rval = "void", args = { "loading_ui &", }, const = false, static = false, },
            { name = "get_player_base_save_path", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_world_base_save_path", rval = "std::string", args = { }, const = true, static = false, },
            { name = "load_packs", rval = "bool", args = { "const std::string &", "const std::vector< mod_id > &", "loading_ui &", }, const = false, static = false, },
            { name = "init_ui", rval = "void", args = { }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "setup", rval = "void", args = { }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "std::ostream &", }, const = false, static = false, },
            { name = "unserialize", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "unserialize_master", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "dump_stats", rval = "bool", args = { "const std::string &", "dump_mode", "const std::vector< std::string > &", }, const = false, static = false, },
            { name = "save", rval = "bool", args = { }, const = false, static = false, },
            { name = "list_active_characters", rval = "std::vector< std::string >", args = { }, const = false, static = false, },
            { name = "write_memorial_file", rval = "void", args = { "std::string", }, const = false, static = false, },
            { name = "cleanup_at_end", rval = "bool", args = { }, const = false, static = false, },
            { name = "start_calendar", rval = "void", args = { }, const = false, static = false, },
            { name = "do_turn", rval = "bool", args = { }, const = false, static = false, },
            { name = "draw", rval = "void", args = { }, const = false, static = false, },
            { name = "draw_ter", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "draw_ter", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", "bool", }, const = false, static = false, },
            { name = "draw_panels", rval = "void", args = { }, const = false, static = false, },
            { name = "draw_panels", rval = "void", args = { "size_t", "size_t", }, const = false, static = false, },
            { name = "get_veh_dir_indicator_location", rval = "cata::optional< tripoint >", args = { "bool", }, const = true, static = false, },
            { name = "draw_veh_dir_indicator", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "explosion", rval = "void", args = { "const tripoint &", "float", }, optional_args = { "float", "bool", "int", "float", }, const = false, static = false, },
            { name = "explosion", rval = "void", args = { "const tripoint &", "const explosion_data &", }, const = false, static = false, },
            { name = "do_blast", rval = "void", args = { "const tripoint &", "float", "float", "bool", }, const = false, static = false, },
            { name = "shrapnel", rval = "std::vector< tripoint >", args = { "const tripoint &", "int", "int", "float", }, optional_args = { "int", }, const = false, static = false, },
            { name = "flashbang", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "vertical_move", rval = "void", args = { "int", "bool", }, const = false, static = false, },
            { name = "find_or_make_stairs", rval = "cata::optional< tripoint >", args = { "map &", "int", "bool &", }, const = false, static = false, },
            { name = "vertical_shift", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "vertical_notes", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "use_computer", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "resonance_cascade", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "scrambler_blast", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "emp_blast", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            --{ name = "critter_by_id", rval = "template Creature * game::critter_by_id< Creature", args = { "int", }, optional_args = { "typename T", }, const = false, static = false, },
            --{ name = "critter_at", rval = "T *", args = { "const tripoint &", }, optional_args = { "typename T", "bool", }, const = false, static = false, },
            --{ name = "critter_at", rval = "const T *", args = { "const tripoint &", }, optional_args = { "typename T", "bool", }, const = true, static = false, },
            --{ name = "shared_from", rval = "template std::shared_ptr< npc > game::shared_from< npc", args = { "const T &", }, optional_args = { "typename T", }, const = false, static = false, },
            { name = "summon_mon", rval = "monster *", args = { "const mtype_id &", "const tripoint &", }, const = false, static = false, },
            { name = "add_zombie", rval = "bool", args = { "monster &", }, const = false, static = false, },
            { name = "add_zombie", rval = "bool", args = { "monster &", "bool", }, const = false, static = false, },
            { name = "num_creatures", rval = "size_t", args = { }, const = true, static = false, },
            { name = "update_zombie_pos", rval = "bool", args = { "const monster &", "const tripoint &", }, const = false, static = false, },
            { name = "remove_zombie", rval = "void", args = { "const monster &", }, const = false, static = false, },
            { name = "clear_zombies", rval = "void", args = { }, const = false, static = false, },
            { name = "spawn_hallucination", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "swap_critters", rval = "bool", args = { "Creature &", "Creature &", }, const = false, static = false, },
            --{ name = "all_creatures", rval = "game::Creature_range", args = { }, const = false, static = false, },
            --{ name = "all_monsters", rval = "game::monster_range", args = { }, const = false, static = false, },
            --{ name = "all_npcs", rval = "game::npc_range", args = { }, const = false, static = false, },
            --{ name = "get_creatures_if", rval = "std::vector< Creature * >", args = { "const std::function< bool(const Creature &)> &", }, const = false, static = false, },
            --{ name = "get_npcs_if", rval = "std::vector< npc * >", args = { "const std::function< bool(const npc &)> &", }, const = false, static = false, },
            --{ name = "get_creature_if", rval = "Creature *", args = { "const std::function< bool(const Creature &)> &", }, const = false, static = false, },
            { name = "is_empty", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "is_in_sunlight", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "is_sheltered", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "revive_corpse", rval = "bool", args = { "const tripoint &", "item &", }, const = false, static = false, },
            { name = "save_cyborg", rval = "void", args = { "item *", "const tripoint", "player &", }, const = false, static = false, },
            { name = "plfire_check", rval = "bool", args = { "const targeting_data &", }, const = false, static = false, },
            { name = "plfire", rval = "bool", args = { }, const = false, static = false, },
            { name = "plfire", rval = "bool", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "cancel_activity", rval = "void", args = { }, const = false, static = false, },
            { name = "cancel_activity_query", rval = "bool", args = { "const std::string &", }, const = false, static = false, },
            { name = "cancel_activity_or_ignore_query", rval = "bool", args = { "const distraction_type", "const std::string &", }, const = false, static = false, },
            { name = "moving_vehicle_dismount", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "remoteveh", rval = "vehicle *", args = { }, const = false, static = false, },
            { name = "setremoteveh", rval = "void", args = { "vehicle *", }, const = false, static = false, },
            { name = "assign_mission_id", rval = "int", args = { }, const = false, static = false, },
            { name = "find_npc", rval = "npc *", args = { "int", }, const = false, static = false, },
            { name = "load_npcs", rval = "void", args = { }, const = false, static = false, },
            { name = "unload_npcs", rval = "void", args = { }, const = false, static = false, },
            { name = "reload_npcs", rval = "void", args = { }, const = false, static = false, },
            { name = "kill_count", rval = "int", args = { "const mtype_id &", }, const = false, static = false, },
            { name = "kill_count", rval = "int", args = { "const species_id &", }, const = false, static = false, },
            { name = "increase_kill_count", rval = "void", args = { "const mtype_id &", }, const = false, static = false, },
            { name = "record_npc_kill", rval = "void", args = { "const npc &", }, const = false, static = false, },
            { name = "add_npc_follower", rval = "void", args = { "const int &", }, const = false, static = false, },
            { name = "remove_npc_follower", rval = "void", args = { "const int &", }, const = false, static = false, },
            { name = "get_follower_list", rval = "std::set< int >", args = { }, const = false, static = false, },
            { name = "validate_npc_followers", rval = "void", args = { }, const = false, static = false, },
            { name = "validate_camps", rval = "void", args = { }, const = false, static = false, },
            { name = "get_npc_kill", rval = "std::list< std::string >", args = { }, const = false, static = false, },
            { name = "teleport", rval = "void", args = { }, optional_args = { "player *", "bool", }, const = false, static = false, },
            { name = "plswim", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "catch_a_monster", rval = "void", args = { "std::vector< monster *> &", "const tripoint &", "player *", "const time_duration &", }, const = false, static = false, },
            { name = "get_fishable", rval = "std::vector< monster * >", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "fling_creature", rval = "void", args = { "Creature *", "const int &", "float", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "nuke", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "natural_light_level", rval = "float", args = { "int", }, const = true, static = false, },
            { name = "light_level", rval = "unsigned char", args = { "int", }, const = true, static = false, },
            { name = "reset_light_level", rval = "void", args = { }, const = false, static = false, },
            { name = "assign_npc_id", rval = "int", args = { }, const = false, static = false, },
            { name = "is_hostile_nearby", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "is_hostile_very_close", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "refresh_all", rval = "void", args = { }, const = false, static = false, },
            { name = "update_map", rval = "void", args = { "player &", }, const = false, static = false, },
            { name = "update_map", rval = "point", args = { "int &", "int &", }, const = false, static = false, },
            { name = "update_overmap_seen", rval = "void", args = { }, const = false, static = false, },
            { name = "process_artifact", rval = "void", args = { "item &", "player &", }, const = false, static = false, },
            { name = "add_artifact_messages", rval = "void", args = { "const std::vector< art_effect_passive > &", }, const = false, static = false, },
            { name = "add_artifact_dreams", rval = "void", args = { }, const = false, static = false, },
            { name = "peek", rval = "void", args = { }, const = false, static = false, },
            { name = "peek", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "look_debug", rval = "cata::optional< tripoint >", args = { }, const = false, static = false, },
            { name = "check_zone", rval = "bool", args = { "const zone_type_id &", "const tripoint &", }, const = true, static = false, },
            { name = "check_near_zone", rval = "bool", args = { "const zone_type_id &", "const tripoint &", }, const = true, static = false, },
            { name = "is_zones_manager_open", rval = "bool", args = { }, const = true, static = false, },
            { name = "zones_manager", rval = "void", args = { }, const = false, static = false, },
            { name = "look_around", rval = "cata::optional< tripoint >", args = { }, const = false, static = false, },
            { name = "look_around", rval = "look_around_result", args = { "catacurses::window", "tripoint &", "const tripoint &", "bool", "bool", "bool", }, const = false, static = false, },
            { name = "pre_print_all_tile_info", rval = "void", args = { "const tripoint &", "const catacurses::window &", "int &", "int", "const visibility_variables &", }, const = false, static = false, },
            { name = "print_all_tile_info", rval = "void", args = { "const tripoint &", "const catacurses::window &", "const std::string &", "int", "int &", "int", "bool", "const visibility_variables &", }, const = false, static = false, },
            { name = "extended_description", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "draw_trail_to_square", rval = "void", args = { "const tripoint &", "bool", }, const = false, static = false, },
            { name = "inv_for_filter", rval = "int", args = { "const std::string &", "item_filter", }, optional_args = { "const std::string &", }, const = false, static = false, },
            { name = "inv_for_all", rval = "int", args = { "const std::string &", }, optional_args = { "const std::string &", }, const = false, static = false, },
            { name = "inv_for_flag", rval = "int", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "inv_for_id", rval = "int", args = { "const itype_id &", "const std::string &", }, const = false, static = false, },
            --{ name = "inventory_item_menu", rval = "int", args = { "int", }, optional_args = { "int", "int", "inventory_item_menu_positon", }, const = false, static = false, },
            { name = "inv_map_splice", rval = "item_location", args = { "item_filter", "const std::string &", }, optional_args = { "int", "const std::string &", }, const = false, static = false, },
            { name = "has_gametype", rval = "bool", args = { }, const = true, static = false, },
            { name = "gametype", rval = "special_game_id", args = { }, const = true, static = false, },
            { name = "toggle_fullscreen", rval = "void", args = { }, const = false, static = false, },
            { name = "toggle_pixel_minimap", rval = "void", args = { }, const = false, static = false, },
            { name = "toggle_panel_adm", rval = "void", args = { }, const = false, static = false, },
            { name = "reload_tileset", rval = "void", args = { }, const = false, static = false, },
            { name = "temp_exit_fullscreen", rval = "void", args = { }, const = false, static = false, },
            { name = "reenter_fullscreen", rval = "void", args = { }, const = false, static = false, },
            { name = "zoom_in", rval = "void", args = { }, const = false, static = false, },
            { name = "zoom_out", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_zoom", rval = "void", args = { }, const = false, static = false, },
            { name = "get_moves_since_last_save", rval = "int", args = { }, const = true, static = false, },
            { name = "get_user_action_counter", rval = "int", args = { }, const = true, static = false, },
            { name = "get_temperature", rval = "int", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_levx", rval = "int", args = { }, const = true, static = false, },
            { name = "get_levy", rval = "int", args = { }, const = true, static = false, },
            { name = "get_levz", rval = "int", args = { }, const = true, static = false, },
            { name = "load_map", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_cur_om", rval = "overmap &", args = { }, const = true, static = false, },
            { name = "get_cur_weather_gen", rval = "const weather_generator &", args = { }, const = true, static = false, },
            { name = "allies", rval = "std::vector< npc * >", args = { }, const = false, static = false, },
            { name = "set_driving_view_offset", rval = "void", args = { "const point &", }, const = false, static = false, },
            { name = "calc_driving_offset", rval = "void", args = { }, optional_args = { "vehicle *", }, const = false, static = false, },
            { name = "open_gate", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "knockback", rval = "void", args = { "const tripoint &", "const tripoint &", "int", "int", "int", }, const = false, static = false, },
            { name = "knockback", rval = "void", args = { "std::vector< tripoint > &", "int", "int", "int", }, const = false, static = false, },
            { name = "shockwave", rval = "void", args = { "const tripoint &", "int", "int", "int", "int", "bool", }, const = false, static = false, },
            { name = "draw_explosion", rval = "void", args = { "const tripoint &", "int", "const nc_color &", }, const = false, static = false, },
            { name = "draw_custom_explosion", rval = "void", args = { "const tripoint &", "const std::map< tripoint, nc_color > &", }, const = false, static = false, },
            { name = "draw_bullet", rval = "void", args = { "const tripoint &", "int", "const std::vector< tripoint > &", "char", }, const = false, static = false, },
            { name = "draw_hit_mon", rval = "void", args = { "const tripoint &", "const monster &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "draw_hit_player", rval = "void", args = { "const player &", "int", }, const = false, static = false, },
            { name = "draw_line", rval = "void", args = { "const tripoint &", "const tripoint &", "const std::vector< tripoint > &", }, const = false, static = false, },
            { name = "draw_line", rval = "void", args = { "const tripoint &", "const std::vector< tripoint > &", }, const = false, static = false, },
            { name = "draw_weather", rval = "void", args = { "const weather_printable &", }, const = false, static = false, },
            { name = "draw_sct", rval = "void", args = { }, const = false, static = false, },
            { name = "draw_zones", rval = "void", args = { "const tripoint &", "const tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "draw_critter", rval = "void", args = { "const Creature &", "const tripoint &", }, const = false, static = false, },
            { name = "draw_cursor", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "draw_highlight", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "is_in_viewport", rval = "bool", args = { "const tripoint &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "check_safe_mode_allowed", rval = "bool", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "set_safe_mode", rval = "void", args = { "safe_mode_type", }, const = false, static = false, },
            { name = "exam_vehicle", rval = "void", args = { "vehicle &", }, optional_args = { "int", "int", }, const = false, static = false, },
            { name = "forced_door_closing", rval = "bool", args = { "const tripoint &", "const ter_id &", "int", }, const = false, static = false, },
            { name = "load", rval = "bool", args = { "const std::string &", }, const = false, static = false, },
            { name = "eat", rval = "void", args = { }, optional_args = { "int", }, const = false, static = false, },
            { name = "reload_item", rval = "void", args = { }, const = false, static = false, },
            { name = "reload_weapon", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "place_player", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "place_player_overmap", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "unload", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "unload", rval = "void", args = { }, optional_args = { "int", }, const = false, static = false, },
            { name = "get_seed", rval = "unsigned int", args = { }, const = true, static = false, },
            { name = "set_npcs_dirty", rval = "void", args = { }, const = false, static = false, },
            { name = "set_critter_died", rval = "void", args = { }, const = false, static = false, },
            { name = "mon_info", rval = "void", args = { "const catacurses::window &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "draw_pixel_minimap", rval = "void", args = { "const catacurses::window &", }, const = false, static = false, },
            { name = "quicksave", rval = "void", args = { }, const = false, static = false, },
        }
    },
    gun_mode = {
        cpp_name = "gun_mode",
        string_id = "gun_mode_id",
        new = {
            { },
            { "const std::string &", "item *", "int", "const std::set< std::string > &", },
        },
        attributes = {
            target = { type = "item", writable = true, reference = true, static = false, },
            qty = { type = "int", writable = true, reference = false, static = false, },
            flags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "melee", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "operator bool", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator*", rval = "", args = { }, const = false, static = false, },
            --{ name = "operator*", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator->", rval = "", args = { }, const = false, static = false, },
            --{ name = "operator->", rval = "", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
        }
    },
    item = {
        cpp_name = "item",
        new = {
            { },
            --{ "item &&", },
            { "const item &", },
            { "const itype_id &", },
            { "const itype_id &", "time_point", },
            { "const itype_id &", "time_point", "long", },
            { "const itype *", },
            { "const itype *", "time_point", },
            { "const itype *", "time_point", "long", },
            --{ "const itype_id &", "time_point", "default_charges_tag", },
            --{ "const itype *", "time_point", "default_charges_tag", },
            --{ "const itype_id &", "time_point", "solitary_tag", },
            --{ "const itype *", "time_point", "solitary_tag", },
            { "const recipe *", "long", "std::list< item >", },
        },
        attributes = {
            INFINITE_CHARGES = { type = "long", writable = false, reference = false, static = true, },
            type = { type = "itype", writable = false, reference = true, static = false, },
            contents = { type = "std::list< item >", writable = true, reference = false, static = false, },
            components = { type = "std::list< item >", writable = true, reference = false, static = false, },
            faults = { type = "std::set< fault_id >", writable = true, reference = false, static = false, },
            item_tags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            charges = { type = "long", writable = true, reference = false, static = false, },
            recipe_charges = { type = "int", writable = true, reference = false, static = false, },
            burnt = { type = "int", writable = true, reference = false, static = false, },
            poison = { type = "int", writable = true, reference = false, static = false, },
            frequency = { type = "int", writable = true, reference = false, static = false, },
            note = { type = "int", writable = true, reference = false, static = false, },
            irridation = { type = "int", writable = true, reference = false, static = false, },
            item_counter = { type = "int", writable = true, reference = false, static = false, },
            specific_energy = { type = "int", writable = true, reference = false, static = false, },
            temperature = { type = "int", writable = true, reference = false, static = false, },
            mission_id = { type = "int", writable = true, reference = false, static = false, },
            player_id = { type = "int", writable = true, reference = false, static = false, },
            invlet = { type = "char", writable = true, reference = false, static = false, },
            active = { type = "bool", writable = true, reference = false, static = false, },
            is_favorite = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "make_corpse", rval = "item", args = { }, optional_args = { "const mtype_id &", "time_point", "const std::string &", }, const = false, static = true, },
            { name = "attack_time", rval = "int", args = { }, const = true, static = false, },
            { name = "damage_melee", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "base_damage_melee", rval = "damage_instance", args = { }, const = true, static = false, },
            { name = "base_damage_thrown", rval = "damage_instance", args = { }, const = true, static = false, },
            { name = "is_two_handed", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "is_melee", rval = "bool", args = { "damage_type", }, const = true, static = false, },
            { name = "is_melee", rval = "bool", args = { }, const = true, static = false, },
            { name = "melee_skill", rval = "skill_id", args = { }, const = true, static = false, },
            { name = "is_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_watertight_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_container_empty", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_non_resealable_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_container_full", rval = "bool", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "fill_with", rval = "void", args = { "item &", }, optional_args = { "long", }, const = false, static = false, },
            { name = "get_remaining_capacity_for_liquid", rval = "long", args = { "const item &", }, optional_args = { "bool", "std::string *", }, const = true, static = false, },
            { name = "get_remaining_capacity_for_liquid", rval = "long", args = { "const item &", "const Character &", }, optional_args = { "std::string *", }, const = true, static = false, },
            { name = "get_container_capacity", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_total_capacity", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "put_in", rval = "void", args = { "const item &", }, const = false, static = false, },
            --{ name = "emplace_back", rval = "item&", args = { "typename ...", "Args &&...", }, const = false, static = false, },
            { name = "in_its_container", rval = "item", args = { }, const = true, static = false, },
            { name = "in_container", rval = "item", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_funnel_container", rval = "bool", args = { "units::volume &", }, const = true, static = false, },
            { name = "add_rain_to_container", rval = "void", args = { "bool", }, optional_args = { "int", }, const = false, static = false, },
            { name = "get_random_material", rval = "const material_type &", args = { }, const = true, static = false, },
            { name = "get_base_material", rval = "const material_type &", args = { }, const = true, static = false, },
            { name = "made_of", rval = "const std::vector< material_id > &", args = { }, const = true, static = false, },
            { name = "quality_of", rval = "const std::map< quality_id, int > &", args = { }, const = true, static = false, },
            { name = "made_of_types", rval = "std::vector< const material_type * >", args = { }, const = true, static = false, },
            { name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "only_made_of", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            { name = "contents_made_of", rval = "bool", args = { "const phase_id", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "phase_id", }, const = true, static = false, },
            { name = "made_of_from_type", rval = "bool", args = { "phase_id", }, const = true, static = false, },
            { name = "get_uncraft_components", rval = "std::vector< item_comp >", args = { }, const = true, static = false, },
            { name = "conductive", rval = "bool", args = { }, const = true, static = false, },
            { name = "flammable", rval = "bool", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "reinforceable", rval = "bool", args = { }, const = true, static = false, },
            { name = "bash_resist", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "cut_resist", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "stab_resist", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "acid_resist", rval = "int", args = { }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "fire_resist", rval = "int", args = { }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "can_contain", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "can_contain", rval = "bool", args = { "const itype &", }, const = true, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "int", }, const = false, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "long", }, const = false, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "double", }, const = false, static = false, },
            { name = "get_var", rval = "double", args = { "const std::string &", "double", }, const = true, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "const tripoint &", }, const = false, static = false, },
            { name = "get_var", rval = "tripoint", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "get_var", rval = "std::string", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "get_var", rval = "std::string", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_var", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "erase_var", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "clear_vars", rval = "void", args = { }, const = false, static = false, },
            { name = "has_flag", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_any_flag", rval = "bool", args = { "const std::vector< std::string > &", }, const = true, static = false, },
            { name = "set_flag", rval = "item &", args = { "const std::string &", }, const = false, static = false, },
            { name = "unset_flag", rval = "item &", args = { "const std::string &", }, const = false, static = false, },
            { name = "unset_flags", rval = "void", args = { }, const = false, static = false, },
            { name = "has_property", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "get_property_string", rval = "std::string", args = { "const std::string &", }, optional_args = { "const std::string &", }, const = true, static = false, },
            { name = "get_property_long", rval = "long", args = { "const std::string &", }, optional_args = { "long", }, const = true, static = false, },
            { name = "getlight", rval = "bool", args = { "float &", "int &", "int &", }, const = true, static = false, },
            { name = "getlight_emit", rval = "int", args = { }, const = true, static = false, },
            { name = "is_emissive", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_seed", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_plant_epoch", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "get_plant_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "covers", rval = "bool", args = { "body_part", }, const = true, static = false, },
            { name = "get_covered_body_parts", rval = "body_part_set", args = { }, const = true, static = false, },
            { name = "get_covered_body_parts", rval = "body_part_set", args = { "side", }, const = true, static = false, },
            { name = "is_sided", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_side", rval = "side", args = { }, const = true, static = false, },
            { name = "set_side", rval = "bool", args = { "side", }, const = false, static = false, },
            { name = "swap_side", rval = "bool", args = { }, const = false, static = false, },
            { name = "get_warmth", rval = "int", args = { }, const = true, static = false, },
            { name = "get_thickness", rval = "int", args = { }, const = true, static = false, },
            { name = "get_layer", rval = "layer_level", args = { }, const = true, static = false, },
            { name = "get_coverage", rval = "int", args = { }, const = true, static = false, },
            { name = "get_encumber_when_containing", rval = "int", args = { "const Character &", "const units::volume &", }, const = true, static = false, },
            { name = "get_encumber", rval = "int", args = { "const Character &", }, const = true, static = false, },
            { name = "get_storage", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_env_resist", rval = "int", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "get_base_env_resist_w_filter", rval = "int", args = { }, const = true, static = false, },
            { name = "is_power_armor", rval = "bool", args = { }, const = true, static = false, },
            { name = "find_armor_data", rval = "const islot_armor *", args = { }, const = true, static = false, },
            { name = "is_worn_only_with", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "get_pet_armor_max_vol", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_pet_armor_min_vol", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_pet_armor_bodytype", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_chapters", rval = "int", args = { }, const = true, static = false, },
            { name = "get_remaining_chapters", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "mark_chapter_as_read", rval = "void", args = { "const player &", }, const = false, static = false, },
            { name = "get_available_recipes", rval = "std::vector< std::pair< const recipe *, int > >", args = { "const player &", }, const = true, static = false, },
            { name = "has_technique", rval = "bool", args = { "const matec_id &", }, const = true, static = false, },
            { name = "get_techniques", rval = "std::set< matec_id >", args = { }, const = true, static = false, },
            { name = "add_technique", rval = "void", args = { "const matec_id &", }, const = false, static = false, },
            { name = "is_gunmod", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_gun", rval = "bool", args = { }, const = true, static = false, },
            { name = "ammo_remaining", rval = "long", args = { }, const = true, static = false, },
            { name = "ammo_capacity", rval = "long", args = { }, const = true, static = false, },
            { name = "ammo_capacity", rval = "long", args = { "bool", }, const = true, static = false, },
            { name = "ammo_required", rval = "long", args = { }, const = true, static = false, },
            { name = "ammo_sufficient", rval = "bool", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "ammo_consume", rval = "long", args = { "long", "const tripoint &", }, const = false, static = false, },
            { name = "ammo_data", rval = "const itype *", args = { }, const = true, static = false, },
            { name = "ammo_current", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "ammo_type", rval = "ammotype", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "ammo_default", rval = "itype_id", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "ammo_effects", rval = "std::set< std::string >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "ammo_sort_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "casings_count", rval = "int", args = { }, const = true, static = false, },
            --{ name = "casings_handle", rval = "void", args = { "const std::function< bool(item &)> &", }, const = false, static = false, },
            { name = "magazine_integral", rval = "bool", args = { }, const = true, static = false, },
            { name = "magazine_default", rval = "itype_id", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "magazine_compatible", rval = "std::set< itype_id >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "magazine_current", rval = "item *", args = { }, const = false, static = false, },
            { name = "magazine_current", rval = "const item *", args = { }, const = true, static = false, },
            { name = "magazine_convert", rval = "std::vector< item >", args = { }, const = false, static = false, },
            { name = "gunmods", rval = "std::vector< item * >", args = { }, const = false, static = false, },
            { name = "gunmods", rval = "std::vector< const item * >", args = { }, const = true, static = false, },
            { name = "gunmod_find", rval = "item *", args = { "const itype_id &", }, const = false, static = false, },
            { name = "gunmod_find", rval = "const item *", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_gunmod_compatible", rval = "ret_val< bool >", args = { "const item &", }, const = true, static = false, },
            { name = "gun_all_modes", rval = "std::map< gun_mode_id, gun_mode >", args = { }, const = true, static = false, },
            { name = "gun_get_mode", rval = "gun_mode", args = { "const gun_mode_id &", }, const = true, static = false, },
            { name = "gun_current_mode", rval = "gun_mode", args = { }, const = true, static = false, },
            { name = "gun_get_mode_id", rval = "gun_mode_id", args = { }, const = true, static = false, },
            { name = "gun_set_mode", rval = "bool", args = { "const gun_mode_id &", }, const = false, static = false, },
            { name = "gun_cycle_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "sight_dispersion", rval = "int", args = { }, const = true, static = false, },
            { name = "gun_noise", rval = "item::sound_data", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_silent", rval = "bool", args = { }, const = true, static = false, },
            { name = "gun_range", rval = "int", args = { "const player *", }, const = true, static = false, },
            { name = "gun_range", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "gun_recoil", rval = "int", args = { "const player &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "gun_damage", rval = "damage_instance", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "gun_dispersion", rval = "int", args = { }, optional_args = { "bool", "bool", }, const = true, static = false, },
            { name = "gun_skill", rval = "skill_id", args = { }, const = true, static = false, },
            { name = "gun_type", rval = "gun_type_type", args = { }, const = true, static = false, },
            { name = "get_mod_locations", rval = "std::map< gunmod_location, int >", args = { }, const = true, static = false, },
            { name = "get_free_mod_locations", rval = "int", args = { "const gunmod_location &", }, const = true, static = false, },
            { name = "is_firearm", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_reload_time", rval = "int", args = { }, const = true, static = false, },
            { name = "engine_displacement", rval = "int", args = { }, const = true, static = false, },
            { name = "is_upgrade", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "operator=", rval = "", args = { "item &&", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "const item &", }, const = false, static = false, },
            { name = "convert", rval = "item &", args = { "const itype_id &", }, const = false, static = false, },
            { name = "deactivate", rval = "item &", args = { }, optional_args = { "const Character *", "bool", }, const = false, static = false, },
            { name = "activate", rval = "item &", args = { }, const = false, static = false, },
            { name = "ammo_set", rval = "item &", args = { "const itype_id &", }, optional_args = { "long", }, const = false, static = false, },
            { name = "ammo_unset", rval = "item &", args = { }, const = false, static = false, },
            { name = "set_damage", rval = "item &", args = { "int", }, const = false, static = false, },
            { name = "split", rval = "item", args = { "long", }, const = false, static = false, },
            { name = "get_mtype", rval = "const mtype *", args = { }, const = true, static = false, },
            { name = "set_mtype", rval = "void", args = { "const mtype *", }, const = false, static = false, },
            { name = "is_corpse", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_revive", rval = "bool", args = { }, const = true, static = false, },
            { name = "ready_to_revive", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "color_in_inventory", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "tname", rval = "std::string", args = { }, optional_args = { "unsigned int", "bool", "unsigned int", }, const = true, static = false, },
            { name = "display_money", rval = "std::string", args = { "unsigned int", "unsigned long", }, const = true, static = false, },
            { name = "display_name", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "info", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "info", rval = "std::string", args = { "bool", "std::vector< iteminfo > &", }, const = true, static = false, },
            { name = "info", rval = "std::string", args = { "bool", "std::vector< iteminfo > &", "int", }, const = true, static = false, },
            { name = "info", rval = "std::string", args = { "std::vector< iteminfo > &", }, optional_args = { "const iteminfo_query *", "int", }, const = true, static = false, },
            { name = "simulate_burn", rval = "float", args = { "fire_data &", }, const = true, static = false, },
            { name = "burn", rval = "bool", args = { "fire_data &", }, const = false, static = false, },
            { name = "get_category", rval = "const item_category &", args = { }, const = true, static = false, },
            { name = "reload", rval = "bool", args = { "player &", "item_location", "long", }, const = false, static = false, },
            --{ name = "io", rval = "void", args = { "typename Archive", "Archive &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "load_info", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "symbol", rval = "const std::string &", args = { }, const = true, static = false, },
            { name = "price", rval = "int", args = { "bool", }, const = true, static = false, },
            { name = "stacks_with", rval = "bool", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "merge_charges", rval = "bool", args = { "const item &", }, const = false, static = false, },
            { name = "weight", rval = "units::mass", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "volume", rval = "units::volume", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "base_volume", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "corpse_volume", rval = "units::volume", args = { "const mtype *", }, const = true, static = false, },
            { name = "lift_strength", rval = "int", args = { }, const = true, static = false, },
            { name = "reach_range", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "set_countdown", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "use_charges", rval = "bool", args = { "const itype_id &", "long &", "std::list< item > &", "const tripoint &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "on_drop", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "on_drop", rval = "bool", args = { "const tripoint &", "map &", }, const = false, static = false, },
            { name = "use_amount", rval = "bool", args = { "const itype_id &", "long &", "std::list< item > &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "allow_crafting_component", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_quality", rval = "int", args = { "const quality_id &", }, const = true, static = false, },
            { name = "count_by_charges", rval = "bool", args = { }, const = true, static = false, },
            { name = "count", rval = "long", args = { }, const = true, static = false, },
            { name = "craft_has_charges", rval = "bool", args = { }, const = false, static = false, },
            { name = "mod_charges", rval = "void", args = { "long", }, const = false, static = false, },
            { name = "calc_rot", rval = "void", args = { "time_point", }, const = false, static = false, },
            { name = "calc_rot_while_processing", rval = "void", args = { "time_duration", }, const = false, static = false, },
            { name = "process_temperature_rot", rval = "void", args = { "int", "float", "const tripoint", "player *", }, const = false, static = false, },
            { name = "heat_up", rval = "void", args = { }, const = false, static = false, },
            { name = "cold_up", rval = "void", args = { }, const = false, static = false, },
            { name = "set_item_temperature", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_item_specific_energy", rval = "void", args = { "const float", }, const = false, static = false, },
            { name = "reset_temp_check", rval = "void", args = { }, const = false, static = false, },
            { name = "goes_bad", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_shelf_life", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "get_relative_rot", rval = "double", args = { }, const = true, static = false, },
            { name = "set_relative_rot", rval = "void", args = { "double", }, const = false, static = false, },
            { name = "set_rot", rval = "void", args = { "time_duration", }, const = false, static = false, },
            { name = "spoilage_sort_order", rval = "int", args = { }, const = false, static = false, },
            { name = "is_fresh", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_going_bad", rval = "bool", args = { }, const = true, static = false, },
            { name = "rotten", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_rotten_away", rval = "bool", args = { }, const = true, static = false, },
            { name = "apply_freezerburn", rval = "void", args = { }, const = false, static = false, },
            { name = "get_rot", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "mod_rot", rval = "void", args = { "const time_duration &", }, const = false, static = false, },
            { name = "brewing_time", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "brewing_results", rval = "const std::vector< itype_id > &", args = { }, const = true, static = false, },
            { name = "detonate", rval = "bool", args = { "const tripoint &", "std::vector< item > &", }, const = false, static = false, },
            { name = "will_explode_in_fire", rval = "bool", args = { }, const = true, static = false, },
            { name = "mitigate_damage", rval = "void", args = { "damage_unit &", }, const = true, static = false, },
            { name = "damage_resist", rval = "int", args = { "damage_type", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "chip_resistance", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "damage", rval = "int", args = { }, const = true, static = false, },
            { name = "damage_level", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "min_damage", rval = "int", args = { }, const = true, static = false, },
            { name = "max_damage", rval = "int", args = { }, const = true, static = false, },
            { name = "get_relative_health", rval = "float", args = { }, const = true, static = false, },
            { name = "mod_damage", rval = "bool", args = { "int", "damage_type", }, const = false, static = false, },
            { name = "mod_damage", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "inc_damage", rval = "bool", args = { "const damage_type", }, const = false, static = false, },
            { name = "inc_damage", rval = "bool", args = { }, const = false, static = false, },
            { name = "damage_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "damage_symbol", rval = "std::string", args = { }, const = true, static = false, },
            { name = "repaired_with", rval = "const std::set< itype_id > &", args = { }, const = true, static = false, },
            { name = "already_used_by_player", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "mark_as_used_by_player", rval = "void", args = { "const player &", }, const = false, static = false, },
            { name = "is_filthy", rval = "bool", args = { }, const = true, static = false, },
            { name = "process", rval = "bool", args = { "player *", "const tripoint &", "bool", }, const = false, static = false, },
            { name = "process", rval = "bool", args = { "player *", "const tripoint &", "bool", "int", "float", }, const = false, static = false, },
            { name = "get_cable_target", rval = "cata::optional< tripoint >", args = { "player *", "const tripoint &", }, const = true, static = false, },
            { name = "reset_cable", rval = "void", args = { "player *", }, const = false, static = false, },
            { name = "needs_processing", rval = "bool", args = { }, const = true, static = false, },
            { name = "processing_speed", rval = "int", args = { }, const = true, static = false, },
            { name = "process_artifact", rval = "void", args = { "player *", "const tripoint &", }, const = false, static = false, },
            { name = "destroyed_at_zero_charges", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_null", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_comestible", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_food", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_food_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_med_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_ammo_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_medication", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_bionic", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_magazine", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_ammo_belt", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_bandolier", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_holster", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_ammo", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_pet_armor", rval = "bool", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_armor", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_book", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_map", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_salvageable", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_craft", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_tool", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_tool_reversible", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_artifact", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_bucket", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_bucket_nonempty", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_brewable", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_engine", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_wheel", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_fuel", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_toolmod", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_faulty", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_irremovable", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_unarmed_weapon", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_temperature", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_specific_heat_liquid", rval = "float", args = { }, const = true, static = false, },
            { name = "get_specific_heat_solid", rval = "float", args = { }, const = true, static = false, },
            { name = "get_latent_heat", rval = "float", args = { }, const = true, static = false, },
            { name = "get_freeze_point", rval = "float", args = { }, const = true, static = false, },
            { name = "faults_potential", rval = "std::set< fault_id >", args = { }, const = true, static = false, },
            { name = "wheel_area", rval = "int", args = { }, const = true, static = false, },
            { name = "fuel_energy", rval = "float", args = { }, const = true, static = false, },
            { name = "fuel_pump_terrain", rval = "std::string", args = { }, const = true, static = false, },
            { name = "has_explosion_data", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_explosion_data", rval = "struct fuel_explosion", args = { }, const = false, static = false, },
            { name = "is_reloadable", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_reload_with", rval = "bool", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_reloadable_with", rval = "bool", args = { "const itype_id &", }, const = true, static = false, },
            { name = "can_unload_liquid", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_dangerous", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_tainted", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_soft", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_effect_when_wielded", rval = "bool", args = { "art_effect_passive", }, const = true, static = false, },
            { name = "has_effect_when_worn", rval = "bool", args = { "art_effect_passive", }, const = true, static = false, },
            { name = "has_effect_when_carried", rval = "bool", args = { "art_effect_passive", }, const = true, static = false, },
            { name = "set_snippet", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            --{ name = "operator<", rval = "", args = { "const item &", }, const = true, static = false, },
            { name = "components_to_string", rval = "std::string", args = { }, const = true, static = false, },
            { name = "typeId", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "get_contained", rval = "const item &", args = { }, const = true, static = false, },
            { name = "spill_contents", rval = "bool", args = { "Character &", }, const = false, static = false, },
            { name = "spill_contents", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "can_holster", rval = "bool", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "on_wear", rval = "void", args = { "Character &", }, const = false, static = false, },
            { name = "on_takeoff", rval = "void", args = { "Character &", }, const = false, static = false, },
            { name = "on_wield", rval = "void", args = { "player &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "on_pickup", rval = "void", args = { "Character &", }, const = false, static = false, },
            { name = "on_contents_changed", rval = "void", args = { }, const = false, static = false, },
            { name = "on_damage", rval = "void", args = { "int", "damage_type", }, const = false, static = false, },
            { name = "type_name", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "charges_per_volume", rval = "long", args = { "const units::volume &", }, const = true, static = false, },
            { name = "toolmods", rval = "std::vector< item * >", args = { }, const = false, static = false, },
            { name = "toolmods", rval = "std::vector< const item * >", args = { }, const = true, static = false, },
            { name = "get_use", rval = "const use_function *", args = { "const std::string &", }, const = true, static = false, },
            { name = "get_usable_item", rval = "item *", args = { "const std::string &", }, const = false, static = false, },
            { name = "units_remaining", rval = "int", args = { "const Character &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "units_sufficient", rval = "bool", args = { "const Character &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "has_label", rval = "bool", args = { }, const = true, static = false, },
            { name = "label", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "has_infinite_charges", rval = "bool", args = { }, const = true, static = false, },
            { name = "contextualize_skill", rval = "skill_id", args = { "const skill_id &", }, const = true, static = false, },
            { name = "release_monster", rval = "int", args = { "const tripoint &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "contain_monster", rval = "int", args = { "const tripoint &", }, const = false, static = false, },
            { name = "age", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "set_age", rval = "void", args = { "const time_duration &", }, const = false, static = false, },
            { name = "birthday", rval = "time_point", args = { }, const = true, static = false, },
            { name = "set_birthday", rval = "void", args = { "const time_point &", }, const = false, static = false, },
            { name = "get_gun_ups_drain", rval = "int", args = { }, const = true, static = false, },
            { name = "get_min_str", rval = "int", args = { }, const = true, static = false, },
            { name = "get_making", rval = "const recipe &", args = { }, const = true, static = false, },
            { name = "get_comestible", rval = "const cata::optional< islot_comestible > &", args = { }, const = true, static = false, },
            { name = "set_favorite", rval = "void", args = { "const bool", }, const = false, static = false, },
            { name = "nname", rval = "std::string", args = { "const itype_id &", }, optional_args = { "unsigned int", }, const = false, static = true, },
            { name = "find_type", rval = "const itype *", args = { "const itype_id &", }, const = false, static = true, },
            { name = "count_by_charges", rval = "bool", args = { "const itype_id &", }, const = false, static = true, },
            { name = "type_is_defined", rval = "bool", args = { "const itype_id &", }, const = false, static = true, },
        }
    },
    item_location = {
        cpp_name = "item_location",
        new = {
            { },
            { "const item_location &", },
            --{ "item_location &&", },
            { "Character &", "item *", },
            { "Character &", "std::list< item > *", },
            { "const map_cursor &", "item *", },
            { "const map_cursor &", "std::list< item > *", },
            { "const vehicle_cursor &", "item *", },
            { "const vehicle_cursor &", "std::list< item > *", },
        },
        attributes = {
            nowhere = { type = "item_location", writable = false, reference = false, static = true, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const item_location &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "item_location &&", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "charges_in_stack", rval = "long", args = { "unsigned int", }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "const item_location &", }, const = true, static = false, },
            --{ name = "operator!=", rval = "", args = { "const item_location &", }, const = true, static = false, },
            --{ name = "operator bool", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator*", rval = "", args = { }, const = false, static = false, },
            --{ name = "operator*", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator->", rval = "", args = { }, const = false, static = false, },
            --{ name = "operator->", rval = "", args = { }, const = true, static = false, },
            { name = "where", rval = "item_location::type", args = { }, const = true, static = false, },
            { name = "position", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "describe", rval = "std::string", args = { }, optional_args = { "const Character *", }, const = true, static = false, },
            { name = "obtain", rval = "int", args = { "Character &", }, optional_args = { "long", }, const = false, static = false, },
            { name = "obtain_cost", rval = "int", args = { "const Character &", }, optional_args = { "long", }, const = true, static = false, },
            { name = "remove_item", rval = "void", args = { }, const = false, static = false, },
            { name = "get_item", rval = "item *", args = { }, const = false, static = false, },
            { name = "get_item", rval = "const item *", args = { }, const = true, static = false, },
            { name = "clone", rval = "item_location", args = { }, const = true, static = false, },
            { name = "set_should_stack", rval = "void", args = { "bool", }, const = true, static = false, },
        }
    },
    itype = {
        cpp_name = "itype",
        new = {
            { },
        },
        attributes = {
            container = { type = "cata::optional< islot_container >", writable = true, reference = false, static = false, },
            tool = { type = "cata::optional< islot_tool >", writable = true, reference = false, static = false, },
            comestible = { type = "cata::optional< islot_comestible >", writable = true, reference = false, static = false, },
            brewable = { type = "cata::optional< islot_brewable >", writable = true, reference = false, static = false, },
            armor = { type = "cata::optional< islot_armor >", writable = true, reference = false, static = false, },
            pet_armor = { type = "cata::optional< islot_pet_armor >", writable = true, reference = false, static = false, },
            book = { type = "cata::optional< islot_book >", writable = true, reference = false, static = false, },
            mod = { type = "cata::optional< islot_mod >", writable = true, reference = false, static = false, },
            engine = { type = "cata::optional< islot_engine >", writable = true, reference = false, static = false, },
            wheel = { type = "cata::optional< islot_wheel >", writable = true, reference = false, static = false, },
            fuel = { type = "cata::optional< islot_fuel >", writable = true, reference = false, static = false, },
            gun = { type = "cata::optional< islot_gun >", writable = true, reference = false, static = false, },
            gunmod = { type = "cata::optional< islot_gunmod >", writable = true, reference = false, static = false, },
            magazine = { type = "cata::optional< islot_magazine >", writable = true, reference = false, static = false, },
            bionic = { type = "cata::optional< islot_bionic >", writable = true, reference = false, static = false, },
            ammo = { type = "cata::optional< islot_ammo >", writable = true, reference = false, static = false, },
            seed = { type = "cata::optional< islot_seed >", writable = true, reference = false, static = false, },
            artifact = { type = "cata::optional< islot_artifact >", writable = true, reference = false, static = false, },
            weight = { type = "units::mass", writable = true, reference = false, static = false, },
            volume = { type = "units::volume", writable = true, reference = false, static = false, },
            integral_volume = { type = "units::volume", writable = true, reference = false, static = false, },
            stack_size = { type = "int", writable = true, reference = false, static = false, },
            price = { type = "int", writable = true, reference = false, static = false, },
            price_post = { type = "int", writable = true, reference = false, static = false, },
            looks_like = { type = "std::string", writable = true, reference = false, static = false, },
            snippet_category = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            default_container = { type = "cata::optional< itype_id >", writable = true, reference = false, static = false, },
            qualities = { type = "std::map< quality_id, int >", writable = true, reference = false, static = false, },
            properties = { type = "std::map< std::string, std::string >", writable = true, reference = false, static = false, },
            materials = { type = "std::vector< material_id >", writable = true, reference = false, static = false, },
            use_methods = { type = "std::map< std::string, use_function >", writable = true, reference = false, static = false, },
            drop_action = { type = "use_function", writable = true, reference = false, static = false, },
            emits = { type = "std::set< emit_id >", writable = true, reference = false, static = false, },
            item_tags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            techniques = { type = "std::set< matec_id >", writable = true, reference = false, static = false, },
            min_skills = { type = "std::map< skill_id, int >", writable = true, reference = false, static = false, },
            min_str = { type = "int", writable = true, reference = false, static = false, },
            min_dex = { type = "int", writable = true, reference = false, static = false, },
            min_int = { type = "int", writable = true, reference = false, static = false, },
            min_per = { type = "int", writable = true, reference = false, static = false, },
            phase = { type = "phase_id", writable = true, reference = false, static = false, },
            explosion = { type = "explosion_data", writable = true, reference = false, static = false, },
            explode_in_fire = { type = "bool", writable = true, reference = false, static = false, },
            stackable = { type = "bool", writable = true, reference = false, static = false, },
            countdown_destroy = { type = "bool", writable = true, reference = false, static = false, },
            countdown_interval = { type = "int", writable = true, reference = false, static = false, },
            countdown_action = { type = "use_function", writable = true, reference = false, static = false, },
            rigid = { type = "bool", writable = true, reference = false, static = false, },
            melee = { type = "std::array< int, NUM_DT >", writable = true, reference = false, static = false, },
            thrown_damage = { type = "damage_instance", writable = true, reference = false, static = false, },
            m_to_hit = { type = "int", writable = true, reference = false, static = false, },
            light_emission = { type = "unsigned", writable = true, reference = false, static = false, },
            category = { type = "item_category", writable = false, reference = true, static = false, },
            sym = { type = "std::string", writable = true, reference = false, static = false, },
            color = { type = "nc_color", writable = true, reference = false, static = false, },
            damage_min = { type = "int", writable = true, reference = false, static = false, },
            damage_max = { type = "int", writable = true, reference = false, static = false, },
            repair = { type = "std::set< itype_id >", writable = true, reference = false, static = false, },
            magazines = { type = "std::map< ammotype, std::set< itype_id > >", writable = true, reference = false, static = false, },
            magazine_default = { type = "std::map< ammotype, itype_id >", writable = true, reference = false, static = false, },
            magazine_well = { type = "units::volume", writable = true, reference = false, static = false, },
            layer = { type = "layer_level", writable = true, reference = false, static = false, },
            insulation_factor = { type = "float", writable = true, reference = false, static = false, },
            damage_scale = { type = "int", writable = false, reference = false, static = true, },
        },
        functions = {
            { name = "get_item_type_string", rval = "std::string", args = { }, const = true, static = false, },
            { name = "nname", rval = "std::string", args = { "unsigned int", }, const = true, static = false, },
            { name = "get_id", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "count_by_charges", rval = "bool", args = { }, const = true, static = false, },
            { name = "charges_default", rval = "int", args = { }, const = true, static = false, },
            { name = "charges_to_use", rval = "int", args = { }, const = true, static = false, },
            { name = "maximum_charges", rval = "int", args = { }, const = true, static = false, },
            { name = "charges_per_volume", rval = "long", args = { "const units::volume &", }, const = true, static = false, },
            { name = "has_use", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_use", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "get_use", rval = "const use_function *", args = { "const std::string &", }, const = true, static = false, },
            { name = "invoke", rval = "long", args = { "player &", "item &", "const tripoint &", }, const = true, static = false, },
            { name = "invoke", rval = "long", args = { "player &", "item &", "const tripoint &", "const std::string &", }, const = true, static = false, },
            { name = "tick", rval = "long", args = { "player &", "item &", "const tripoint &", }, const = true, static = false, },
        }
    },
    ma_buff = {
        cpp_name = "ma_buff",
        string_id = "mabuff_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "mabuff_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            reqs = { type = "ma_requirements", writable = true, reference = false, static = false, },
            buff_duration = { type = "time_duration", writable = true, reference = false, static = false, },
            max_stacks = { type = "int", writable = true, reference = false, static = false, },
            dodges_bonus = { type = "int", writable = true, reference = false, static = false, },
            blocks_bonus = { type = "int", writable = true, reference = false, static = false, },
            bonuses = { type = "bonus_container", writable = true, reference = false, static = false, },
            quiet = { type = "bool", writable = true, reference = false, static = false, },
            melee_allowed = { type = "bool", writable = true, reference = false, static = false, },
            throw_immune = { type = "bool", writable = true, reference = false, static = false, },
            strictly_unarmed = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "apply_buff", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "is_valid_player", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "apply_player", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "hit_bonus", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "dodge_bonus", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "speed_bonus", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "block_bonus", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "armor_bonus", rval = "int", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "damage_bonus", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "damage_mult", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "is_throw_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_quiet", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_melee", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_effect_id", rval = "efftype_id", args = { }, const = true, static = false, },
            { name = "get_description", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "from_effect", rval = "const ma_buff *", args = { "const effect &", }, const = false, static = true, },
        }
    },
    ma_technique = {
        cpp_name = "ma_technique",
        string_id = "matec_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "matec_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            goal = { type = "std::string", writable = true, reference = false, static = false, },
            flags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            player_message = { type = "std::string", writable = true, reference = false, static = false, },
            npc_message = { type = "std::string", writable = true, reference = false, static = false, },
            defensive = { type = "bool", writable = true, reference = false, static = false, },
            dummy = { type = "bool", writable = true, reference = false, static = false, },
            crit_tec = { type = "bool", writable = true, reference = false, static = false, },
            reqs = { type = "ma_requirements", writable = true, reference = false, static = false, },
            down_dur = { type = "int", writable = true, reference = false, static = false, },
            stun_dur = { type = "int", writable = true, reference = false, static = false, },
            knockback_dist = { type = "int", writable = true, reference = false, static = false, },
            knockback_spread = { type = "float", writable = true, reference = false, static = false, },
            aoe = { type = "std::string", writable = true, reference = false, static = false, },
            disarms = { type = "bool", writable = true, reference = false, static = false, },
            dodge_counter = { type = "bool", writable = true, reference = false, static = false, },
            block_counter = { type = "bool", writable = true, reference = false, static = false, },
            miss_recovery = { type = "bool", writable = true, reference = false, static = false, },
            grab_break = { type = "bool", writable = true, reference = false, static = false, },
            weighting = { type = "int", writable = true, reference = false, static = false, },
            bonuses = { type = "bonus_container", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "get_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "is_valid_player", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "damage_bonus", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "damage_multiplier", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "move_cost_multiplier", rval = "float", args = { "const player &", }, const = true, static = false, },
            { name = "move_cost_penalty", rval = "float", args = { "const player &", }, const = true, static = false, },
            { name = "armor_penetration", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
        }
    },
    map = {
        cpp_name = "map",
        new = {
            { },
            { "int", },
            { "int", "bool", },
            { "bool", },
        },
        attributes = {
            dirty_vehicle_list = { type = "std::set< vehicle * >", writable = true, reference = true, static = false, },
        },
        functions = {
            { name = "set_transparency_cache_dirty", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "set_outside_cache_dirty", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "set_floor_cache_dirty", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "set_pathfinding_cache_dirty", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "use_amount_square", rval = "std::list< item >", args = { "const tripoint &", "const itype_id &", "long &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "use_amount", rval = "std::list< item >", args = { "const tripoint &", "const int", "const itype_id", "long &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "use_charges", rval = "std::list< item >", args = { "const tripoint &", "const int", "const itype_id", "long &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "drop_everything", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "drop_furniture", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "drop_items", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "drop_vehicle", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "drop_fields", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "map &&", }, const = false, static = false, },
            { name = "set_memory_seen_cache_dirty", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "check_and_set_seen_cache", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "on_vehicle_moved", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "apparent_light_at", rval = "lit_level", args = { "const tripoint &", "const visibility_variables &", }, const = true, static = false, },
            { name = "get_visibility", rval = "visibility_type", args = { "const lit_level", "const visibility_variables &", }, const = true, static = false, },
            { name = "apply_vision_effects", rval = "bool", args = { "const catacurses::window &", "const visibility_type", }, const = true, static = false, },
            { name = "get_wind_blockers", rval = "std::tuple< maptile, maptile, maptile >", args = { "const int &", "const tripoint &", }, const = false, static = false, },
            { name = "draw", rval = "void", args = { "const catacurses::window &", "const tripoint &", }, const = false, static = false, },
            { name = "drawsq", rval = "void", args = { "const catacurses::window &", "player &", "const tripoint &", }, optional_args = { "const bool", "const bool", }, const = true, static = false, },
            { name = "drawsq", rval = "void", args = { "const catacurses::window &", "player &", "const tripoint &", "const bool", "const bool", "const tripoint &", }, optional_args = { "const bool", "const bool", "const bool", }, const = true, static = false, },
            { name = "save", rval = "void", args = { }, const = false, static = false, },
            { name = "load", rval = "void", args = { "const int", "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "shift", rval = "void", args = { "const int", "const int", }, const = false, static = false, },
            { name = "vertical_shift", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "clear_spawns", rval = "void", args = { }, const = false, static = false, },
            { name = "clear_traps", rval = "void", args = { }, const = false, static = false, },
            { name = "maptile_at", rval = "const maptile", args = { "const tripoint &", }, const = true, static = false, },
            { name = "maptile_at", rval = "maptile", args = { "const tripoint &", }, const = false, static = false, },
            { name = "move_cost", rval = "int", args = { "const int", "const int", }, optional_args = { "const vehicle *", }, const = true, static = false, },
            { name = "impassable", rval = "bool", args = { "int", "int", }, const = true, static = false, },
            { name = "passable", rval = "bool", args = { "int", "int", }, const = true, static = false, },
            { name = "move_cost_ter_furn", rval = "int", args = { "const int", "const int", }, const = true, static = false, },
            { name = "move_cost", rval = "int", args = { "const tripoint &", }, optional_args = { "const vehicle *", }, const = true, static = false, },
            { name = "impassable", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "passable", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "move_cost_ter_furn", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "impassable_ter_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "passable_ter_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "combined_movecost", rval = "int", args = { "const tripoint &", "const tripoint &", }, optional_args = { "const vehicle *", "const int", "const bool", }, const = true, static = false, },
            { name = "valid_move", rval = "bool", args = { "const tripoint &", "const tripoint &", }, optional_args = { "const bool", "const bool", }, const = true, static = false, },
            { name = "ranged_target_size", rval = "double", args = { "const tripoint &", }, const = true, static = false, },
            { name = "sees", rval = "bool", args = { "const tripoint &", "const tripoint &", "int", }, const = true, static = false, },
            { name = "obstacle_coverage", rval = "int", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "coverage", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "clear_path", rval = "bool", args = { "const tripoint &", "const tripoint &", "const int", "const int", "const int", }, const = true, static = false, },
            { name = "find_clear_path", rval = "std::vector< tripoint >", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "accessible_items", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_dir_circle", rval = "std::vector< tripoint >", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "route", rval = "std::vector< tripoint >", args = { "const tripoint &", "const tripoint &", "const pathfinding_settings &", }, optional_args = { "const std::set< tripoint > &", }, const = true, static = false, },
            { name = "get_vehicles", rval = "VehicleList", args = { }, const = false, static = false, },
            { name = "add_vehicle_to_cache", rval = "void", args = { "vehicle *", }, const = false, static = false, },
            { name = "update_vehicle_cache", rval = "void", args = { "vehicle *", "int", }, const = false, static = false, },
            { name = "reset_vehicle_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "clear_vehicle_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "clear_vehicle_list", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "update_vehicle_list", rval = "void", args = { "submap *const", "const int", }, const = false, static = false, },
            { name = "check_vehicle_zones", rval = "bool", args = { "const int", }, const = false, static = false, },
            { name = "get_vehicle_zones", rval = "std::vector< zone_data * >", args = { "const int", }, const = false, static = false, },
            { name = "register_vehicle_zone", rval = "void", args = { "vehicle *", "const int", }, const = false, static = false, },
            { name = "deregister_vehicle_zone", rval = "bool", args = { "zone_data &", }, const = false, static = false, },
            { name = "detach_vehicle", rval = "std::unique_ptr< vehicle >", args = { "vehicle *", }, const = false, static = false, },
            { name = "destroy_vehicle", rval = "void", args = { "vehicle *", }, const = false, static = false, },
            { name = "vehmove", rval = "void", args = { }, const = false, static = false, },
            { name = "vehproceed", rval = "bool", args = { }, const = false, static = false, },
            { name = "get_vehicles", rval = "VehicleList", args = { "const tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "veh_at", rval = "optional_vpart_position", args = { "const tripoint &", }, const = true, static = false, },
            { name = "veh_at_internal", rval = "vehicle *", args = { "const tripoint &", "int &", }, const = false, static = false, },
            { name = "veh_at_internal", rval = "const vehicle *", args = { "const tripoint &", "int &", }, const = true, static = false, },
            { name = "board_vehicle", rval = "void", args = { "const tripoint &", "player *", }, const = false, static = false, },
            { name = "unboard_vehicle", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "displace_vehicle", rval = "vehicle *", args = { "tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "displace_water", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "vehicle_wheel_traction", rval = "float", args = { "const vehicle &", }, const = true, static = false, },
            { name = "vehicle_vehicle_collision", rval = "float", args = { "vehicle &", "vehicle &", "const std::vector< veh_collision > &", }, const = false, static = false, },
            { name = "shake_vehicle", rval = "int", args = { "vehicle &", "int", "int", }, const = false, static = false, },
            { name = "move_vehicle", rval = "void", args = { "vehicle &", "const tripoint &", "const tileray &", }, const = false, static = false, },
            { name = "set", rval = "void", args = { "const int", "const int", "const ter_id &", "const furn_id &", }, const = false, static = false, },
            { name = "name", rval = "std::string", args = { "const int", "const int", }, const = false, static = false, },
            { name = "has_furn", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "furn", rval = "furn_id", args = { "const int", "const int", }, const = true, static = false, },
            { name = "furn_set", rval = "void", args = { "const int", "const int", "const furn_id &", }, const = false, static = false, },
            { name = "furnname", rval = "std::string", args = { "const int", "const int", }, const = false, static = false, },
            { name = "set", rval = "void", args = { "const tripoint &", "const ter_id &", "const furn_id &", }, const = false, static = false, },
            { name = "name", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "disp_name", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "obstacle_name", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "has_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "furn", rval = "furn_id", args = { "const tripoint &", }, const = true, static = false, },
            { name = "furn_set", rval = "void", args = { "const tripoint &", "const furn_id &", }, const = false, static = false, },
            { name = "furnname", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "can_move_furniture", rval = "bool", args = { "const tripoint &", }, optional_args = { "player *", }, const = false, static = false, },
            { name = "ter", rval = "ter_id", args = { "const int", "const int", }, const = true, static = false, },
            { name = "ter_set", rval = "bool", args = { "const int", "const int", "const ter_id &", }, const = false, static = false, },
            { name = "tername", rval = "std::string", args = { "const int", "const int", }, const = true, static = false, },
            { name = "ter", rval = "ter_id", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_known_connections", rval = "uint8_t", args = { "const tripoint &", "int", }, const = true, static = false, },
            { name = "get_harvest", rval = "const harvest_id &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_harvest_names", rval = "const std::set< std::string > &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_ter_transforms_into", rval = "ter_id", args = { "const tripoint &", }, const = true, static = false, },
            { name = "ter_set", rval = "bool", args = { "const tripoint &", "const ter_id &", }, const = false, static = false, },
            { name = "tername", rval = "std::string", args = { "const tripoint &", }, const = true, static = false, },
            { name = "has_nearby_fire", rval = "bool", args = { "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "sees_some_items", rval = "bool", args = { "const tripoint &", "const Creature &", }, const = true, static = false, },
            { name = "could_see_items", rval = "bool", args = { "const tripoint &", "const Creature &", }, const = true, static = false, },
            { name = "has_items", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "examine", rval = "void", args = { "Character &", "const tripoint &", }, const = false, static = false, },
            { name = "is_harvestable", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "features", rval = "std::string", args = { "const int", "const int", }, const = false, static = false, },
            { name = "has_flag", rval = "bool", args = { "const std::string &", "const int", "const int", }, const = true, static = false, },
            { name = "can_put_items_ter_furn", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_ter", rval = "bool", args = { "const std::string &", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_furn", rval = "bool", args = { "const std::string &", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "const std::string &", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const ter_bitflags", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_ter", rval = "bool", args = { "const ter_bitflags", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_furn", rval = "bool", args = { "const ter_bitflags", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "const ter_bitflags", "const int", "const int", }, const = true, static = false, },
            { name = "features", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "has_flag", rval = "bool", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "can_put_items", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "can_put_items_ter_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_ter", rval = "bool", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_furn", rval = "bool", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const ter_bitflags", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_ter", rval = "bool", args = { "const ter_bitflags", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_furn", rval = "bool", args = { "const ter_bitflags", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "const ter_bitflags", "const tripoint &", }, const = true, static = false, },
            { name = "is_bashable", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_bashable_ter", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_bashable_furn", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_bashable_ter_furn", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "bash_strength", rval = "int", args = { "const int", "const int", }, const = true, static = false, },
            { name = "bash_resistance", rval = "int", args = { "const int", "const int", }, const = true, static = false, },
            { name = "bash_rating", rval = "int", args = { "const int", "const int", "const int", }, const = true, static = false, },
            { name = "is_bashable", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_bashable_ter", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_bashable_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "is_bashable_ter_furn", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "bash_strength", rval = "int", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "bash_resistance", rval = "int", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "bash_rating", rval = "int", args = { "const int", "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "make_rubble", rval = "void", args = { "const tripoint &", "const furn_id &", "const bool", "const ter_id &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "make_rubble", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "make_rubble", rval = "void", args = { "const tripoint &", "const furn_id &", "const bool", }, const = false, static = false, },
            { name = "is_divable", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_water_shallow_current", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_outside", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_divable", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "is_outside", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "is_water_shallow_current", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "is_last_ter_wall", rval = "bool", args = { "const bool", "const int", "const int", "const int", "const int", "const direction", }, const = true, static = false, },
            { name = "flammable_items_at", rval = "bool", args = { "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "is_flammable", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "random_outdoor_tile", rval = "point", args = { }, const = false, static = false, },
            { name = "draw_line_ter", rval = "void", args = { "const ter_id", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_line_furn", rval = "void", args = { "const furn_id", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_fill_background", rval = "void", args = { "const ter_id", }, const = false, static = false, },
            --{ name = "draw_fill_background", rval = "void", args = { "ter_id(*)()", }, const = false, static = false, },
            { name = "draw_fill_background", rval = "void", args = { "const weighted_int_list< ter_id > &", }, const = false, static = false, },
            { name = "draw_square_ter", rval = "void", args = { "const ter_id", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_square_furn", rval = "void", args = { "const furn_id", "int", "int", "int", "int", }, const = false, static = false, },
            --{ name = "draw_square_ter", rval = "void", args = { "ter_id(*)()", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_square_ter", rval = "void", args = { "const weighted_int_list< ter_id > &", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_rough_circle_ter", rval = "void", args = { "const ter_id", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_rough_circle_furn", rval = "void", args = { "const furn_id", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_circle_ter", rval = "void", args = { "const ter_id", "double", "double", "double", }, const = false, static = false, },
            { name = "draw_circle_ter", rval = "void", args = { "const ter_id", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_circle_furn", rval = "void", args = { "const furn_id", "int", "int", "int", }, const = false, static = false, },
            { name = "add_corpse", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "translate", rval = "void", args = { "const ter_id &", "const ter_id &", }, const = false, static = false, },
            { name = "translate_radius", rval = "void", args = { "const ter_id &", "const ter_id &", "const float", "const tripoint &", }, optional_args = { "const bool", "const bool", }, const = false, static = false, },
            { name = "close_door", rval = "bool", args = { "const tripoint &", "const bool", "const bool", }, const = false, static = false, },
            { name = "open_door", rval = "bool", args = { "const tripoint &", "const bool", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "destroy", rval = "void", args = { "const tripoint &", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "destroy_furn", rval = "void", args = { "const tripoint &", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "crush", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "shoot", rval = "void", args = { "const tripoint &", "projectile &", "const bool", }, const = false, static = false, },
            { name = "collapse_check", rval = "int", args = { "const tripoint &", }, const = false, static = false, },
            { name = "collapse_at", rval = "void", args = { "const tripoint &", "bool", }, const = false, static = false, },
            { name = "smash_items", rval = "void", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "bash", rval = "bash_params", args = { "const tripoint &", "int", }, optional_args = { "bool", "bool", "bool", "const vehicle *", }, const = false, static = false, },
            { name = "hit_with_acid", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "hit_with_fire", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            --{ name = "has_adjacent_furniture_with", rval = "bool", args = { "const tripoint &", "const std::function< bool(const furn_t &)> &", }, const = false, static = false, },
            { name = "mop_spills", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "decay_fields_and_scent", rval = "void", args = { "const time_duration &", }, const = false, static = false, },
            { name = "get_signage", rval = "const std::string", args = { "const tripoint &", }, const = true, static = false, },
            { name = "set_signage", rval = "void", args = { "const tripoint &", "const std::string &", }, const = true, static = false, },
            { name = "delete_signage", rval = "void", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_radiation", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "set_radiation", rval = "void", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "set_radiation", rval = "void", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "adjust_radiation", rval = "void", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "adjust_radiation", rval = "void", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "temperature", rval = "int &", args = { "const tripoint &", }, const = false, static = false, },
            { name = "set_temperature", rval = "void", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "set_temperature", rval = "void", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "process_active_items", rval = "void", args = { }, const = false, static = false, },
            { name = "trigger_rc_items", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "i_at", rval = "map_stack", args = { "int", "int", }, const = false, static = false, },
            { name = "i_clear", rval = "void", args = { "const int", "const int", }, const = false, static = false, },
            { name = "i_rem", rval = "std::list< item >::iterator", args = { "const point &", "std::list< item >::iterator", }, const = false, static = false, },
            { name = "i_rem", rval = "int", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "i_rem", rval = "void", args = { "const int", "const int", "item *", }, const = false, static = false, },
            { name = "spawn_item", rval = "void", args = { "const int", "const int", "const std::string &", }, optional_args = { "const unsigned", "const long", "const time_point &", "const int", }, const = false, static = false, },
            { name = "add_item_or_charges", rval = "item &", args = { "const int", "const int", "item", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "add_item", rval = "void", args = { "const int", "const int", "item", }, const = false, static = false, },
            { name = "spawn_an_item", rval = "void", args = { "const int", "const int", "item", "const long", "const int", }, const = false, static = false, },
            { name = "place_items", rval = "std::vector< item * >", args = { "const items_location &", "const int", "const int", "const int", "const int", "const int", "bool", "const time_point &", }, optional_args = { "int", "int", }, const = false, static = false, },
            { name = "spawn_items", rval = "void", args = { "const int", "const int", "const std::vector< item > &", }, const = false, static = false, },
            { name = "create_anomaly", rval = "void", args = { "const int", "const int", "artifact_natural_property", }, const = false, static = false, },
            { name = "i_at", rval = "map_stack", args = { "const tripoint &", }, const = false, static = false, },
            { name = "water_from", rval = "item", args = { "const tripoint &", }, const = false, static = false, },
            { name = "i_clear", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "i_rem", rval = "std::list< item >::iterator", args = { "const tripoint &", "std::list< item >::iterator", }, const = false, static = false, },
            { name = "i_rem", rval = "int", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "i_rem", rval = "void", args = { "const tripoint &", "const item *", }, const = false, static = false, },
            { name = "spawn_artifact", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "spawn_natural_artifact", rval = "void", args = { "const tripoint &", "const artifact_natural_property", }, const = false, static = false, },
            { name = "spawn_item", rval = "void", args = { "const tripoint &", "const std::string &", }, optional_args = { "const unsigned", "const long", "const time_point &", "const int", }, const = false, static = false, },
            { name = "max_volume", rval = "units::volume", args = { "const tripoint &", }, const = false, static = false, },
            { name = "free_volume", rval = "units::volume", args = { "const tripoint &", }, const = false, static = false, },
            { name = "stored_volume", rval = "units::volume", args = { "const tripoint &", }, const = false, static = false, },
            { name = "add_item_or_charges", rval = "item &", args = { "const tripoint &", "item", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "add_item_at", rval = "item &", args = { "const tripoint &", "std::list< item >::iterator", "item", }, const = false, static = false, },
            { name = "add_item", rval = "item &", args = { "const tripoint &", "item", }, const = false, static = false, },
            { name = "spawn_an_item", rval = "item &", args = { "const tripoint &", "item", "const long", "const int", }, const = false, static = false, },
            { name = "make_active", rval = "void", args = { "item_location &", }, const = false, static = false, },
            { name = "update_lum", rval = "void", args = { "item_location &", "bool", }, const = false, static = false, },
            { name = "get_rc_items", rval = "std::list< std::pair< tripoint, item * > >", args = { }, optional_args = { "int", "int", "int", }, const = false, static = false, },
            { name = "place_items", rval = "std::vector< item * >", args = { "const items_location &", "const int", "const tripoint &", "const tripoint &", "bool", "const time_point &", }, optional_args = { "int", "int", }, const = false, static = false, },
            { name = "put_items_from_loc", rval = "std::vector< item * >", args = { "const items_location &", "const tripoint &", }, optional_args = { "const time_point &", }, const = false, static = false, },
            { name = "spawn_items", rval = "std::vector< item * >", args = { "const tripoint &", "const std::vector< item > &", }, const = false, static = false, },
            { name = "create_anomaly", rval = "void", args = { "const tripoint &", "artifact_natural_property", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "item_from", rval = "item *", args = { "const tripoint &", "const size_t", }, const = false, static = false, },
            { name = "item_from", rval = "item *", args = { "vehicle *", "const int", "const size_t", }, const = false, static = false, },
            { name = "trap_set", rval = "void", args = { "const tripoint &", "const trap_id", }, const = false, static = false, },
            { name = "tr_at", rval = "const trap &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "disarm_trap", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "remove_trap", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "trap_locations", rval = "const std::vector< tripoint > &", args = { "const trap_id", }, const = true, static = false, },
            { name = "create_burnproducts", rval = "void", args = { "const tripoint &", "const item &", "const units::mass &", }, const = false, static = false, },
            { name = "process_fields", rval = "bool", args = { }, const = false, static = false, },
            { name = "process_fields_in_submap", rval = "bool", args = { "submap *const", "const int", "const int", "const int", }, const = false, static = false, },
            { name = "creature_in_field", rval = "void", args = { "Creature &", }, const = false, static = false, },
            { name = "creature_on_trap", rval = "void", args = { "Creature &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "field_at", rval = "const field &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "field_at", rval = "field &", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_field_age", rval = "time_duration", args = { "const tripoint &", "const field_id", }, const = true, static = false, },
            { name = "get_field_strength", rval = "int", args = { "const tripoint &", "const field_id", }, const = true, static = false, },
            { name = "adjust_field_age", rval = "time_duration", args = { "const tripoint &", "const field_id", "const time_duration &", }, const = false, static = false, },
            { name = "adjust_field_strength", rval = "int", args = { "const tripoint &", "const field_id", "const int", }, const = false, static = false, },
            { name = "set_field_age", rval = "time_duration", args = { "const tripoint &", "const field_id", "const time_duration &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "set_field_strength", rval = "int", args = { "const tripoint &", "const field_id", "const int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "get_field", rval = "field_entry *", args = { "const tripoint &", "const field_id", }, const = false, static = false, },
            { name = "add_field", rval = "bool", args = { "const tripoint &", "const field_id", "int", }, optional_args = { "const time_duration &", }, const = false, static = false, },
            { name = "remove_field", rval = "void", args = { "const tripoint &", "const field_id", }, const = false, static = false, },
            { name = "add_splatter", rval = "void", args = { "const field_id", "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "add_splatter_trail", rval = "void", args = { "const field_id", "const tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "add_splash", rval = "void", args = { "const field_id", "const tripoint &", "int", "int", }, const = false, static = false, },
            { name = "propagate_field", rval = "void", args = { "const tripoint &", "const field_id", "int", }, optional_args = { "int", }, const = false, static = false, },
            { name = "emit_field", rval = "void", args = { "const tripoint &", "const emit_id &", }, optional_args = { "float", }, const = false, static = false, },
            { name = "scent_blockers", rval = "void", args = { "std::array< std::array< bool, MAPSIZE_X >, MAPSIZE_Y > &", "std::array< std::array< bool, MAPSIZE_X >, MAPSIZE_Y > &", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "computer_at", rval = "computer *", args = { "const tripoint &", }, const = false, static = false, },
            { name = "add_computer", rval = "computer *", args = { "const tripoint &", "const std::string &", "const int", }, const = false, static = false, },
            { name = "add_camp", rval = "void", args = { "const tripoint &", "const std::string &", }, const = false, static = false, },
            { name = "remove_submap_camp", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "hoist_submap_camp", rval = "basecamp", args = { "const tripoint &", }, const = false, static = false, },
            { name = "has_graffiti_at", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "graffiti_at", rval = "const std::string &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "set_graffiti", rval = "void", args = { "const tripoint &", "const std::string &", }, const = false, static = false, },
            { name = "delete_graffiti", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "climb_difficulty", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "has_floor", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "supports_above", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "has_floor_or_support", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "process_falling", rval = "void", args = { }, const = false, static = false, },
            { name = "generate", rval = "void", args = { "const int", "const int", "const int", "const time_point &", }, const = false, static = false, },
            { name = "place_spawns", rval = "void", args = { "const mongroup_id &", "const int", "const int", "const int", "const int", "const int", "const float", }, optional_args = { "const bool", "const bool", }, const = false, static = false, },
            { name = "place_gas_pump", rval = "void", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "place_gas_pump", rval = "void", args = { "const int", "const int", "const int", "const std::string &", }, const = false, static = false, },
            { name = "place_toilet", rval = "void", args = { "const int", "const int", }, optional_args = { "const int", }, const = false, static = false, },
            { name = "place_vending", rval = "void", args = { "int", "int", "const std::string &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "place_npc", rval = "int", args = { "int", "int", "const string_id< npc_template > &", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "add_spawn", rval = "void", args = { "const mtype_id &", "const int", "const int", "const int", }, optional_args = { "bool", "const int", "const int", "const std::string &", }, const = false, static = false, },
            { name = "add_vehicle", rval = "vehicle *", args = { "const vgroup_id &", "const point &", "const int", }, optional_args = { "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "add_vehicle", rval = "vehicle *", args = { "const vproto_id &", "const int", "const int", "const int", }, optional_args = { "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "build_map_cache", rval = "void", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            --{ name = "build_obstacle_cache", rval = "void", args = { "const tripoint &", "const tripoint &", "fragment_cloud(&)", }, const = false, static = false, },
            { name = "add_vehicle", rval = "vehicle *", args = { "const vgroup_id &", "const tripoint &", "const int", }, optional_args = { "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "add_vehicle", rval = "vehicle *", args = { "const vproto_id &", "const tripoint &", "const int", }, optional_args = { "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "light_transparency", rval = "float", args = { "const tripoint &", }, const = true, static = false, },
            { name = "light_at", rval = "lit_level", args = { "const tripoint &", }, const = true, static = false, },
            { name = "ambient_light_at", rval = "float", args = { "const tripoint &", }, const = true, static = false, },
            { name = "trans", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "pl_sees", rval = "bool", args = { "const tripoint &", "int", }, const = true, static = false, },
            { name = "pl_line_of_sight", rval = "bool", args = { "const tripoint &", "int", }, const = true, static = false, },
            { name = "get_abs_sub", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "getabs", rval = "point", args = { "const int", "const int", }, const = true, static = false, },
            { name = "getabs", rval = "point", args = { "const point &", }, const = true, static = false, },
            { name = "getabs", rval = "tripoint", args = { "const tripoint &", }, const = true, static = false, },
            { name = "getlocal", rval = "point", args = { "const int", "const int", }, const = true, static = false, },
            { name = "getlocal", rval = "point", args = { "const point &", }, const = true, static = false, },
            { name = "getlocal", rval = "tripoint", args = { "const tripoint &", }, const = true, static = false, },
            { name = "inbounds", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "inbounds", rval = "bool", args = { "const point &", }, const = true, static = false, },
            { name = "inbounds_z", rval = "bool", args = { "const int", }, const = true, static = false, },
            { name = "clip_to_bounds", rval = "void", args = { "tripoint &", }, const = true, static = false, },
            { name = "clip_to_bounds", rval = "void", args = { "int &", "int &", }, const = true, static = false, },
            { name = "clip_to_bounds", rval = "void", args = { "int &", "int &", "int &", }, const = true, static = false, },
            { name = "getmapsize", rval = "int", args = { }, const = true, static = false, },
            { name = "has_zlevels", rval = "bool", args = { }, const = true, static = false, },
            { name = "rotate", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "spawn_monsters", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "build_outside_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "build_floor_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "build_floor_caches", rval = "void", args = { }, const = false, static = false, },
            { name = "get_cache_ref", rval = "const level_cache&", args = { "int", }, const = true, static = false, },
            { name = "get_pathfinding_cache_ref", rval = "const pathfinding_cache &", args = { "int", }, const = true, static = false, },
            { name = "update_pathfinding_cache", rval = "void", args = { "int", }, const = true, static = false, },
            { name = "update_visibility_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_visibility_variables_cache", rval = "const visibility_variables &", args = { }, const = true, static = false, },
            { name = "points_in_rectangle", rval = "tripoint_range", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "points_in_radius", rval = "tripoint_range", args = { "const tripoint &", "size_t", }, optional_args = { "size_t", }, const = true, static = false, },
            { name = "get_active_items_in_radius", rval = "std::list< item_location >", args = { "const tripoint &", "int", }, const = true, static = false, },
            { name = "access_cache", rval = "level_cache &", args = { "int", }, const = false, static = false, },
            { name = "access_cache", rval = "const level_cache &", args = { "int", }, const = true, static = false, },
            { name = "need_draw_lower_floor", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "apparent_light_helper", rval = "map::apparent_light_info", args = { "const level_cache &", "const tripoint &", }, const = false, static = true, },
        }
    },
    map_stack = {
        cpp_name = "map_stack",
        new = {
            { "std::list< item > *", "tripoint", "map *", },
        },
        attributes = {
        },
        functions = {
            { name = "erase", rval = "std::list< item >::iterator", args = { "std::list< item >::iterator", }, const = false, static = false, },
            { name = "push_back", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "insert_at", rval = "void", args = { "std::list< item >::iterator", "const item &", }, const = false, static = false, },
            { name = "count_limit", rval = "int", args = { }, const = true, static = false, },
            { name = "max_volume", rval = "units::volume", args = { }, const = true, static = false, },
        }
    },
    martialart = {
        cpp_name = "martialart",
        string_id = "matype_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "matype_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            arm_block = { type = "int", writable = true, reference = false, static = false, },
            leg_block = { type = "int", writable = true, reference = false, static = false, },
            arm_block_with_bio_armor_arms = { type = "bool", writable = true, reference = false, static = false, },
            leg_block_with_bio_armor_legs = { type = "bool", writable = true, reference = false, static = false, },
            techniques = { type = "std::set< matec_id >", writable = true, reference = false, static = false, },
            weapons = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            strictly_unarmed = { type = "bool", writable = true, reference = false, static = false, },
            force_unarmed = { type = "bool", writable = true, reference = false, static = false, },
            static_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            onmove_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            onhit_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            onattack_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            ondodge_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            onblock_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            ongethit_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "apply_static_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_onmove_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_onhit_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_onattack_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_ondodge_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_onblock_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_ongethit_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "has_technique", rval = "bool", args = { "const player &", "const matec_id &", }, const = true, static = false, },
            { name = "has_weapon", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "weapon_valid", rval = "bool", args = { "const item &", }, const = true, static = false, },
        }
    },
    material_type = {
        cpp_name = "material_type",
        string_id = "material_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "material_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "check", rval = "void", args = { }, const = true, static = false, },
            { name = "dam_resist", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "ident", rval = "material_id", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "salvaged_into", rval = "cata::optional< itype_id >", args = { }, const = true, static = false, },
            { name = "repaired_with", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "bash_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "cut_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "bash_dmg_verb", rval = "std::string", args = { }, const = true, static = false, },
            { name = "cut_dmg_verb", rval = "std::string", args = { }, const = true, static = false, },
            { name = "dmg_adj", rval = "std::string", args = { "int", }, const = true, static = false, },
            { name = "acid_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "elec_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "fire_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "chip_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "specific_heat_liquid", rval = "float", args = { }, const = true, static = false, },
            { name = "specific_heat_solid", rval = "float", args = { }, const = true, static = false, },
            { name = "latent_heat", rval = "float", args = { }, const = true, static = false, },
            { name = "freeze_point", rval = "int", args = { }, const = true, static = false, },
            { name = "density", rval = "int", args = { }, const = true, static = false, },
            { name = "edible", rval = "bool", args = { }, const = true, static = false, },
            { name = "soft", rval = "bool", args = { }, const = true, static = false, },
            { name = "reinforces", rval = "bool", args = { }, const = true, static = false, },
            { name = "vitamin", rval = "double", args = { "const vitamin_id &", }, const = true, static = false, },
            { name = "burn_data", rval = "const mat_burn_data &", args = { "size_t", }, const = true, static = false, },
            { name = "burn_products", rval = "const mat_burn_products &", args = { }, const = true, static = false, },
            { name = "compact_accepts", rval = "const material_id_list &", args = { }, const = true, static = false, },
            { name = "compacts_into", rval = "const mat_compacts_into &", args = { }, const = true, static = false, },
        }
    },
    mongroup = {
        cpp_name = "mongroup",
        new = {
            { "const mongroup_id &", "int", "int", "int", "unsigned int", "unsigned int", },
            { "std::string", "tripoint", "unsigned int", "unsigned int", "tripoint", "int", "bool", "bool", "bool", },
            { },
        },
        attributes = {
            type = { type = "mongroup_id", writable = true, reference = false, static = false, },
            pos = { type = "tripoint", writable = true, reference = false, static = false, },
            radius = { type = "unsigned int", writable = true, reference = false, static = false, },
            population = { type = "unsigned int", writable = true, reference = false, static = false, },
            target = { type = "tripoint", writable = true, reference = false, static = false, },
            interest = { type = "int", writable = true, reference = false, static = false, },
            dying = { type = "bool", writable = true, reference = false, static = false, },
            horde = { type = "bool", writable = true, reference = false, static = false, },
            monsters = { type = "std::vector< monster >", writable = true, reference = false, static = false, },
            horde_behaviour = { type = "std::string", writable = true, reference = false, static = false, },
            diffuse = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "is_safe", rval = "bool", args = { }, const = true, static = false, },
            { name = "empty", rval = "bool", args = { }, const = true, static = false, },
            { name = "clear", rval = "void", args = { }, const = false, static = false, },
            { name = "set_target", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "wander", rval = "void", args = { "const overmap &", }, const = false, static = false, },
            { name = "inc_interest", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "dec_interest", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_interest", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "avg_speed", rval = "float", args = { }, const = true, static = false, },
            --{ name = "io", rval = "void", args = { "typename Archive", "Archive &", }, const = false, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "deserialize_legacy", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
        }
    },
    monster = {
        cpp_name = "monster",
        new = {
            { },
            { "const mtype_id &", },
            { "const mtype_id &", "const tripoint &", },
            { "const monster &", },
            --{ "monster &&", },
        },
        attributes = {
            wander_pos = { type = "tripoint", writable = true, reference = false, static = false, },
            wandf = { type = "int", writable = true, reference = false, static = false, },
            inv = { type = "std::vector< item >", writable = true, reference = false, static = false, },
            friendly = { type = "int", writable = true, reference = false, static = false, },
            anger = { type = "int", writable = true, reference = false, static = false, },
            morale = { type = "int", writable = true, reference = false, static = false, },
            faction = { type = "mfaction_id", writable = true, reference = false, static = false, },
            mission_id = { type = "int", writable = true, reference = false, static = false, },
            type = { type = "mtype", writable = false, reference = true, static = false, },
            no_extra_death_drops = { type = "bool", writable = true, reference = false, static = false, },
            no_corpse_quiet = { type = "bool", writable = true, reference = false, static = false, },
            death_drops = { type = "bool", writable = true, reference = false, static = false, },
            made_footstep = { type = "bool", writable = true, reference = false, static = false, },
            unique_name = { type = "std::string", writable = true, reference = false, static = false, },
            hallucination = { type = "bool", writable = true, reference = false, static = false, },
            ignoring = { type = "short", writable = true, reference = false, static = false, },
            lastseen_turn = { type = "cata::optional< time_point >", writable = true, reference = false, static = false, },
            staircount = { type = "int", writable = true, reference = false, static = false, },
            ammo = { type = "std::map< std::string, int >", writable = true, reference = false, static = false, },
            last_updated = { type = "time_point", writable = true, reference = false, static = false, },
            last_baby = { type = "int", writable = true, reference = false, static = false, },
            last_biosig = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const monster &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "monster &&", }, const = false, static = false, },
            { name = "is_monster", rval = "bool", args = { }, const = true, static = false, },
            { name = "poly", rval = "void", args = { "const mtype_id &", }, const = false, static = false, },
            { name = "can_upgrade", rval = "bool", args = { }, const = false, static = false, },
            { name = "hasten_upgrade", rval = "void", args = { }, const = false, static = false, },
            { name = "try_upgrade", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "try_reproduce", rval = "void", args = { }, const = false, static = false, },
            { name = "try_biosignature", rval = "void", args = { }, const = false, static = false, },
            { name = "spawn", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_size", rval = "m_size", args = { }, const = true, static = false, },
            { name = "get_weight", rval = "units::mass", args = { }, const = true, static = false, },
            { name = "get_volume", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { }, const = true, static = false, },
            { name = "hp_percentage", rval = "int", args = { }, const = true, static = false, },
            { name = "get_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "name_with_armor", rval = "std::string", args = { }, const = true, static = false, },
            { name = "disp_name", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "skin_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_HP_Bar", rval = "void", args = { "nc_color &", "std::string &", }, const = true, static = false, },
            { name = "get_attitude", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "print_info", rval = "int", args = { "const catacurses::window &", "int", "int", "int", }, const = true, static = false, },
            { name = "basic_symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "symbol", rval = "const std::string &", args = { }, const = true, static = false, },
            { name = "is_symbol_highlighted", rval = "bool", args = { }, const = true, static = false, },
            { name = "color_with_effects", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "extended_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const m_flag", }, const = true, static = false, },
            { name = "can_see", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_hear", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_submerge", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_drown", rval = "bool", args = { }, const = true, static = false, },
            { name = "digging", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_act", rval = "bool", args = { }, const = true, static = false, },
            { name = "sight_range", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            { name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "phase_id", }, const = true, static = false, },
            { name = "avoid_trap", rval = "bool", args = { "const tripoint &", "const trap &", }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "move_target", rval = "tripoint", args = { }, const = false, static = false, },
            { name = "attack_target", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "shift", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "wander", rval = "bool", args = { }, const = false, static = false, },
            { name = "can_move_to", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "will_reach", rval = "bool", args = { "int", "int", }, const = false, static = false, },
            { name = "turns_to_reach", rval = "int", args = { "int", "int", }, const = false, static = false, },
            { name = "set_dest", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "unset_dest", rval = "void", args = { }, const = false, static = false, },
            { name = "wander_to", rval = "void", args = { "const tripoint &", "int", }, const = false, static = false, },
            { name = "rate_target", rval = "float", args = { "Creature &", "float", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "plan", rval = "void", args = { "const mfactions &", }, const = false, static = false, },
            { name = "move", rval = "void", args = { }, const = false, static = false, },
            { name = "footsteps", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "shove_vehicle", rval = "void", args = { "const tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "scent_move", rval = "tripoint", args = { }, const = false, static = false, },
            { name = "calc_movecost", rval = "int", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "calc_climb_cost", rval = "int", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "is_immune_field", rval = "bool", args = { "const field_id", }, const = true, static = false, },
            { name = "move_to", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", "float", }, const = false, static = false, },
            { name = "attack_at", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "bash_at", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "push_to", rval = "bool", args = { "const tripoint &", "int", "size_t", }, const = false, static = false, },
            { name = "bash_skill", rval = "int", args = { }, const = false, static = false, },
            { name = "bash_estimate", rval = "int", args = { }, const = false, static = false, },
            { name = "group_bash_skill", rval = "int", args = { "const tripoint &", }, const = false, static = false, },
            { name = "stumble", rval = "void", args = { }, const = false, static = false, },
            { name = "knock_back_from", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "is_fleeing", rval = "bool", args = { "player &", }, const = true, static = false, },
            { name = "attitude", rval = "monster_attitude", args = { }, optional_args = { "const Character *", }, const = true, static = false, },
            { name = "attitude_to", rval = "Creature::Attitude", args = { "const Creature &", }, const = true, static = false, },
            { name = "process_triggers", rval = "void", args = { }, const = false, static = false, },
            { name = "is_underwater", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_on_ground", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_warm", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_weapon", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_dead_state", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_elec_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_immune_effect", rval = "bool", args = { "const efftype_id &", }, const = true, static = false, },
            { name = "is_immune_damage", rval = "bool", args = { "const damage_type", }, const = true, static = false, },
            { name = "absorb_hit", rval = "void", args = { "body_part", "damage_instance &", }, const = false, static = false, },
            { name = "block_hit", rval = "bool", args = { "Creature *", "body_part &", "damage_instance &", }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", "float", }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", "bool", }, const = false, static = false, },
            { name = "deal_projectile_attack", rval = "void", args = { "Creature *", "dealt_projectile_attack &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "deal_damage_handle_type", rval = "void", args = { "const damage_unit &", "body_part", "int &", "int &", }, const = false, static = false, },
            { name = "apply_damage", rval = "void", args = { "Creature *", "body_part", "int", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "explode", rval = "void", args = { }, const = false, static = false, },
            { name = "die_in_explosion", rval = "void", args = { "Creature *", }, const = false, static = false, },
            { name = "heal", rval = "int", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "set_hp", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "process_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "move_effects", rval = "bool", args = { "bool", }, const = false, static = false, },
            { name = "add_effect", rval = "void", args = { "const efftype_id &", "time_duration", }, optional_args = { "body_part", "bool", "int", "bool", "bool", }, const = false, static = false, },
            { name = "get_effect_status", rval = "std::string", args = { }, const = true, static = false, },
            { name = "power_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "speed_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "get_worn_armor_val", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "get_armor_cut", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_type", rval = "int", args = { "damage_type", "body_part", }, const = true, static = false, },
            { name = "get_hit_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_dodge_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_dodge", rval = "float", args = { }, const = true, static = false, },
            { name = "get_melee", rval = "float", args = { }, const = true, static = false, },
            { name = "hit_roll", rval = "float", args = { }, const = true, static = false, },
            { name = "dodge_roll", rval = "float", args = { }, const = false, static = false, },
            { name = "get_horde_attraction", rval = "monster_horde_attraction", args = { }, const = false, static = false, },
            { name = "set_horde_attraction", rval = "void", args = { "monster_horde_attraction", }, const = false, static = false, },
            { name = "will_join_horde", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "fall_damage_mod", rval = "float", args = { }, const = true, static = false, },
            { name = "impact", rval = "int", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "has_grab_break_tec", rval = "bool", args = { }, const = true, static = false, },
            { name = "stability_roll", rval = "float", args = { }, const = true, static = false, },
            { name = "on_dodge", rval = "void", args = { "Creature *", "float", }, const = false, static = false, },
            { name = "on_hit", rval = "void", args = { "Creature *", }, optional_args = { "body_part", "float", "dealt_projectile_attack const *const", }, const = false, static = false, },
            { name = "get_random_body_part", rval = "body_part", args = { "bool", }, const = true, static = false, },
            { name = "get_all_body_parts", rval = "std::vector< body_part >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "reset_special", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "reset_special_rng", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "set_special", rval = "void", args = { "const std::string &", "int", }, const = false, static = false, },
            { name = "disable_special", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_bonuses", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_stats", rval = "void", args = { }, const = false, static = false, },
            { name = "die", rval = "void", args = { "Creature *", }, const = false, static = false, },
            { name = "drop_items_on_death", rval = "void", args = { }, const = false, static = false, },
            { name = "make_fungus", rval = "bool", args = { }, const = false, static = false, },
            { name = "make_friendly", rval = "void", args = { }, const = false, static = false, },
            { name = "make_ally", rval = "void", args = { "const monster &", }, const = false, static = false, },
            { name = "add_item", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "hear_sound", rval = "void", args = { "const tripoint &", "int", "int", }, const = false, static = false, },
            { name = "is_hallucination", rval = "bool", args = { }, const = true, static = false, },
            { name = "bloodType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "gibType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "is_dead", rval = "bool", args = { }, const = true, static = false, },
            { name = "setpos", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "pos", rval = "const tripoint &", args = { }, const = true, static = false, },
            { name = "posx", rval = "int", args = { }, const = true, static = false, },
            { name = "posy", rval = "int", args = { }, const = true, static = false, },
            { name = "posz", rval = "int", args = { }, const = true, static = false, },
            { name = "to_item", rval = "item", args = { }, const = true, static = false, },
            { name = "init_from_item", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_unload", rval = "void", args = { }, const = false, static = false, },
            { name = "on_load", rval = "void", args = { }, const = false, static = false, },
            { name = "get_pathfinding_settings", rval = "const pathfinding_settings &", args = { }, const = true, static = false, },
            { name = "get_path_avoid", rval = "std::set< tripoint >", args = { }, const = true, static = false, },
        }
    },
    MonsterGroup = {
        cpp_name = "MonsterGroup",
        string_id = "mongroup_id",
        new = {
        },
        attributes = {
            name = { type = "mongroup_id", writable = true, reference = false, static = false, },
            defaultMonster = { type = "mtype_id", writable = true, reference = false, static = false, },
            monsters = { type = "FreqDef", writable = true, reference = false, static = false, },
            is_animal = { type = "bool", writable = true, reference = false, static = false, },
            replace_monster_group = { type = "bool", writable = true, reference = false, static = false, },
            new_monster_group = { type = "mongroup_id", writable = true, reference = false, static = false, },
            monster_group_time = { type = "time_duration", writable = true, reference = false, static = false, },
            is_safe = { type = "bool", writable = true, reference = false, static = false, },
            freq_total = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "IsMonsterInGroup", rval = "bool", args = { "const mtype_id &", }, const = true, static = false, },
        }
    },
    morale_type_data = {
        cpp_name = "morale_type_data",
        string_id = "morale_type",
        new = {
        },
        attributes = {
            id = { type = "morale_type", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "describe", rval = "std::string", args = { }, optional_args = { "const itype *", }, const = true, static = false, },
            { name = "is_permanent", rval = "bool", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "check", rval = "void", args = { }, const = true, static = false, },
            { name = "load_type", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
            { name = "check_all", rval = "void", args = { }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "convert_legacy", rval = "const morale_type &", args = { "int", }, const = false, static = true, },
        }
    },
    mtype = {
        cpp_name = "mtype",
        string_id = "mtype_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "mtype_id", writable = true, reference = false, static = false, },
            starting_ammo = { type = "std::map< std::string, int >", writable = true, reference = false, static = false, },
            death_drops = { type = "std::string", writable = true, reference = false, static = false, },
            atk_effs = { type = "std::vector< mon_effect_data >", writable = true, reference = false, static = false, },
            species = { type = "std::set< species_id >", writable = true, reference = false, static = false, },
            categories = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            mat = { type = "std::vector< material_id >", writable = true, reference = false, static = false, },
            sym = { type = "std::string", writable = true, reference = false, static = false, },
            looks_like = { type = "std::string", writable = true, reference = false, static = false, },
            default_faction = { type = "mfaction_id", writable = true, reference = false, static = false, },
            bodytype = { type = "bodytype_id", writable = true, reference = false, static = false, },
            color = { type = "nc_color", writable = true, reference = false, static = false, },
            size = { type = "m_size", writable = true, reference = false, static = false, },
            volume = { type = "units::volume", writable = true, reference = false, static = false, },
            weight = { type = "units::mass", writable = true, reference = false, static = false, },
            phase = { type = "phase_id", writable = true, reference = false, static = false, },
            difficulty = { type = "int", writable = true, reference = false, static = false, },
            difficulty_base = { type = "int", writable = true, reference = false, static = false, },
            hp = { type = "int", writable = true, reference = false, static = false, },
            speed = { type = "int", writable = true, reference = false, static = false, },
            agro = { type = "int", writable = true, reference = false, static = false, },
            morale = { type = "int", writable = true, reference = false, static = false, },
            attack_cost = { type = "int", writable = true, reference = false, static = false, },
            melee_skill = { type = "int", writable = true, reference = false, static = false, },
            melee_dice = { type = "int", writable = true, reference = false, static = false, },
            melee_sides = { type = "int", writable = true, reference = false, static = false, },
            sk_dodge = { type = "int", writable = true, reference = false, static = false, },
            armor_bash = { type = "int", writable = true, reference = false, static = false, },
            armor_cut = { type = "int", writable = true, reference = false, static = false, },
            armor_stab = { type = "int", writable = true, reference = false, static = false, },
            armor_acid = { type = "int", writable = true, reference = false, static = false, },
            armor_fire = { type = "int", writable = true, reference = false, static = false, },
            vision_day = { type = "int", writable = true, reference = false, static = false, },
            vision_night = { type = "int", writable = true, reference = false, static = false, },
            melee_damage = { type = "damage_instance", writable = true, reference = false, static = false, },
            harvest = { type = "harvest_id", writable = true, reference = false, static = false, },
            luminance = { type = "float", writable = true, reference = false, static = false, },
            def_chance = { type = "unsigned int", writable = true, reference = false, static = false, },
            special_attacks = { type = "std::map< std::string, mtype_special_attack >", writable = true, reference = false, static = false, },
            special_attacks_names = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            --dies = { type = "std::vector< mon_action_death >", writable = true, reference = false, static = false, },
            --sp_defense = { type = "mon_action_defend", writable = true, reference = false, static = false, },
            half_life = { type = "int", writable = true, reference = false, static = false, },
            age_grow = { type = "int", writable = true, reference = false, static = false, },
            upgrade_into = { type = "mtype_id", writable = true, reference = false, static = false, },
            upgrade_group = { type = "mongroup_id", writable = true, reference = false, static = false, },
            burn_into = { type = "mtype_id", writable = true, reference = false, static = false, },
            baby_timer = { type = "int", writable = true, reference = false, static = false, },
            baby_count = { type = "int", writable = true, reference = false, static = false, },
            baby_monster = { type = "mtype_id", writable = true, reference = false, static = false, },
            baby_egg = { type = "itype_id", writable = true, reference = false, static = false, },
            baby_flags = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            biosig_timer = { type = "int", writable = true, reference = false, static = false, },
            biosig_item = { type = "itype_id", writable = true, reference = false, static = false, },
            bash_skill = { type = "int", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            upgrades = { type = "bool", writable = true, reference = false, static = false, },
            reproduces = { type = "bool", writable = true, reference = false, static = false, },
            biosignatures = { type = "bool", writable = true, reference = false, static = false, },
            revert_to_itype = { type = "itype_id", writable = true, reference = false, static = false, },
            emit_fields = { type = "std::set< emit_id >", writable = true, reference = false, static = false, },
            path_settings = { type = "pathfinding_settings", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "same_species", rval = "bool", args = { "const mtype &", }, const = true, static = false, },
            { name = "nname", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "has_special_attack", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "m_flag", }, const = true, static = false, },
            { name = "set_flag", rval = "void", args = { "m_flag", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            { name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "has_anger_trigger", rval = "bool", args = { "mon_trigger", }, const = true, static = false, },
            { name = "has_fear_trigger", rval = "bool", args = { "mon_trigger", }, const = true, static = false, },
            { name = "has_placate_trigger", rval = "bool", args = { "mon_trigger", }, const = true, static = false, },
            { name = "in_category", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "in_species", rval = "bool", args = { "const species_id &", }, const = true, static = false, },
            { name = "in_species", rval = "bool", args = { "const species_type &", }, const = true, static = false, },
            { name = "bloodType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "gibType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "get_meat_itype", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "get_meat_chunks_count", rval = "int", args = { }, const = true, static = false, },
            { name = "get_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
        }
    },
    mutation_branch = {
        cpp_name = "mutation_branch",
        string_id = "trait_id",
        new = {
        },
        attributes = {
            id = { type = "trait_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            valid = { type = "bool", writable = true, reference = false, static = false, },
            purifiable = { type = "bool", writable = true, reference = false, static = false, },
            threshold = { type = "bool", writable = true, reference = false, static = false, },
            profession = { type = "bool", writable = true, reference = false, static = false, },
            debug = { type = "bool", writable = true, reference = false, static = false, },
            player_display = { type = "bool", writable = true, reference = false, static = false, },
            mixed_effect = { type = "bool", writable = true, reference = false, static = false, },
            startingtrait = { type = "bool", writable = true, reference = false, static = false, },
            activated = { type = "bool", writable = true, reference = false, static = false, },
            starts_active = { type = "bool", writable = true, reference = false, static = false, },
            destroys_gear = { type = "bool", writable = true, reference = false, static = false, },
            allow_soft_gear = { type = "bool", writable = true, reference = false, static = false, },
            fatigue = { type = "bool", writable = true, reference = false, static = false, },
            hunger = { type = "bool", writable = true, reference = false, static = false, },
            thirst = { type = "bool", writable = true, reference = false, static = false, },
            points = { type = "int", writable = true, reference = false, static = false, },
            visibility = { type = "int", writable = true, reference = false, static = false, },
            ugliness = { type = "int", writable = true, reference = false, static = false, },
            cost = { type = "int", writable = true, reference = false, static = false, },
            cooldown = { type = "int", writable = true, reference = false, static = false, },
            bodytemp_min = { type = "int", writable = true, reference = false, static = false, },
            bodytemp_max = { type = "int", writable = true, reference = false, static = false, },
            bodytemp_sleep = { type = "int", writable = true, reference = false, static = false, },
            healing_awake = { type = "float", writable = true, reference = false, static = false, },
            healing_resting = { type = "float", writable = true, reference = false, static = false, },
            hp_modifier = { type = "float", writable = true, reference = false, static = false, },
            hp_modifier_secondary = { type = "float", writable = true, reference = false, static = false, },
            hp_adjustment = { type = "float", writable = true, reference = false, static = false, },
            str_modifier = { type = "float", writable = true, reference = false, static = false, },
            dodge_modifier = { type = "float", writable = true, reference = false, static = false, },
            speed_modifier = { type = "float", writable = true, reference = false, static = false, },
            movecost_modifier = { type = "float", writable = true, reference = false, static = false, },
            movecost_flatground_modifier = { type = "float", writable = true, reference = false, static = false, },
            movecost_obstacle_modifier = { type = "float", writable = true, reference = false, static = false, },
            attackcost_modifier = { type = "float", writable = true, reference = false, static = false, },
            max_stamina_modifier = { type = "float", writable = true, reference = false, static = false, },
            weight_capacity_modifier = { type = "float", writable = true, reference = false, static = false, },
            hearing_modifier = { type = "float", writable = true, reference = false, static = false, },
            noise_modifier = { type = "float", writable = true, reference = false, static = false, },
            stealth_modifier = { type = "float", writable = true, reference = false, static = false, },
            metabolism_modifier = { type = "float", writable = true, reference = false, static = false, },
            thirst_modifier = { type = "float", writable = true, reference = false, static = false, },
            fatigue_modifier = { type = "float", writable = true, reference = false, static = false, },
            fatigue_regen_modifier = { type = "float", writable = true, reference = false, static = false, },
            stamina_regen_modifier = { type = "float", writable = true, reference = false, static = false, },
            overmap_sight = { type = "float", writable = true, reference = false, static = false, },
            overmap_multiplier = { type = "float", writable = true, reference = false, static = false, },
            social_mods = { type = "social_modifiers", writable = true, reference = false, static = false, },
            spawn_item = { type = "itype_id", writable = true, reference = false, static = false, },
            ranged_mutation = { type = "itype_id", writable = true, reference = false, static = false, },
            attacks_granted = { type = "std::vector< mut_attack >", writable = true, reference = false, static = false, },
            vitamin_rates = { type = "std::map< vitamin_id, time_duration >", writable = true, reference = false, static = false, },
            vitamin_absorb_multi = { type = "std::map< material_id, std::map< vitamin_id, double > >", writable = true, reference = false, static = false, },
            prereqs = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            prereqs2 = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            threshreq = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            types = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            cancels = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            replacements = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            additions = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            category = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            flags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            protection = { type = "std::map< body_part, tripoint >", writable = true, reference = false, static = false, },
            encumbrance_always = { type = "std::map< body_part, int >", writable = true, reference = false, static = false, },
            encumbrance_covered = { type = "std::map< body_part, int >", writable = true, reference = false, static = false, },
            restricts_gear = { type = "std::set< body_part >", writable = true, reference = false, static = false, },
            mods = { type = "std::unordered_map< std::pair< bool, std::string >, int >", writable = true, reference = false, static = false, },
            armor = { type = "std::map< body_part, resistances >", writable = true, reference = false, static = false, },
            initial_ma_styles = { type = "std::vector< matype_id >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load_trait_group", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "load_trait_group", rval = "void", args = { "JsonObject &", "const trait_group::Trait_group_tag &", "const std::string &", }, const = false, static = true, },
            { name = "load_trait_group", rval = "void", args = { "JsonArray &", "const trait_group::Trait_group_tag &", "const bool", }, const = false, static = true, },
            { name = "add_entry", rval = "void", args = { "Trait_group &", "JsonObject &", }, const = false, static = true, },
            { name = "get_group", rval = "std::shared_ptr< Trait_group >", args = { "const trait_group::Trait_group_tag &", }, const = false, static = true, },
            { name = "get_all_group_names", rval = "std::vector< trait_group::Trait_group_tag >", args = { }, const = false, static = true, },
            { name = "spawn_item_message", rval = "std::string", args = { }, const = true, static = false, },
            { name = "ranged_mutation_message", rval = "std::string", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "desc", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_display_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "conflicts_with_item", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "damage_resistance", rval = "const resistances &", args = { "body_part", }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "get_name", rval = "std::string", args = { "const trait_id &", }, const = false, static = true, },
            { name = "get_all", rval = "const std::vector< mutation_branch > &", args = { }, const = false, static = true, },
            { name = "reset_all", rval = "void", args = { }, const = false, static = true, },
            { name = "load_trait", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
            { name = "check_consistency", rval = "void", args = { }, const = false, static = true, },
            { name = "load_trait_blacklist", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "trait_is_blacklisted", rval = "bool", args = { "const trait_id &", }, const = false, static = true, },
            { name = "finalize", rval = "void", args = { }, const = false, static = true, },
            { name = "finalize_trait_blacklist", rval = "void", args = { }, const = false, static = true, },
        }
    },
    nc_color = {
        cpp_name = "nc_color",
        new = {
            { },
        },
        attributes = {
        },
        functions = {
            { name = "to_color_pair_index", rval = "int", args = { }, const = true, static = false, },
            { name = "_op_int", cpp_name = "operator int", rval = "", args = { }, const = true, static = false, },
            { name = "bold", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "is_bold", rval = "bool", args = { }, const = true, static = false, },
            { name = "blink", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "is_blink", rval = "bool", args = { }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "from_color_pair_index", rval = "nc_color", args = { "const int", }, const = false, static = true, },
        }
    },
    npc = {
        cpp_name = "npc",
        new = {
            { },
            { "const npc &", },
            --{ "npc &&", },
        },
        attributes = {
            need_data = { type = "std::array< std::pair< std::string, overmap_location_str_id >, npc_need::num_needs >", writable = true, reference = false, static = true, },
            no_goal_point = { type = "tripoint", writable = false, reference = false, static = true, },
            myclass = { type = "npc_class_id", writable = true, reference = false, static = false, },
            idz = { type = "std::string", writable = true, reference = false, static = false, },
            miss_ids = { type = "std::vector< mission_type_id >", writable = true, reference = false, static = false, },
            last_player_seen_pos = { type = "cata::optional< tripoint >", writable = true, reference = false, static = false, },
            last_seen_player_turn = { type = "int", writable = true, reference = false, static = false, },
            wanted_item_pos = { type = "tripoint", writable = true, reference = false, static = false, },
            guard_pos = { type = "tripoint", writable = true, reference = false, static = false, },
            goal = { type = "tripoint", writable = true, reference = false, static = false, },
            omt_path = { type = "std::vector< tripoint >", writable = true, reference = false, static = false, },
            wander_pos = { type = "tripoint", writable = true, reference = false, static = false, },
            wander_time = { type = "int", writable = true, reference = false, static = false, },
            pulp_location = { type = "cata::optional< tripoint >", writable = true, reference = false, static = false, },
            restock = { type = "time_point", writable = true, reference = false, static = false, },
            fetching_item = { type = "bool", writable = true, reference = false, static = false, },
            has_new_items = { type = "bool", writable = true, reference = false, static = false, },
            worst_item_value = { type = "int", writable = true, reference = false, static = false, },
            path = { type = "std::vector< tripoint >", writable = true, reference = false, static = false, },
            fac_id = { type = "string_id< faction >", writable = true, reference = false, static = false, },
            my_fac = { type = "faction", writable = true, reference = true, static = false, },
            companion_mission_role_id = { type = "std::string", writable = true, reference = false, static = false, },
            companion_mission_points = { type = "std::vector< tripoint >", writable = true, reference = false, static = false, },
            companion_mission_time = { type = "time_point", writable = true, reference = false, static = false, },
            companion_mission_time_ret = { type = "time_point", writable = true, reference = false, static = false, },
            companion_mission_inv = { type = "inventory", writable = true, reference = false, static = false, },
            mission = { type = "npc_mission", writable = true, reference = false, static = false, },
            personality = { type = "npc_personality", writable = true, reference = false, static = false, },
            op_of_u = { type = "npc_opinion", writable = true, reference = false, static = false, },
            chatbin = { type = "npc_chatbin", writable = true, reference = false, static = false, },
            patience = { type = "int", writable = true, reference = false, static = false, },
            rules = { type = "npc_follower_rules", writable = true, reference = false, static = false, },
            marked_for_death = { type = "bool", writable = true, reference = false, static = false, },
            hit_by_player = { type = "bool", writable = true, reference = false, static = false, },
            needs = { type = "std::vector< npc_need >", writable = true, reference = false, static = false, },
            last_updated = { type = "time_point", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const npc &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "npc &&", }, const = false, static = false, },
            { name = "is_player", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_npc", rval = "bool", args = { }, const = true, static = false, },
            { name = "load_npc_template", rval = "void", args = { "const string_id< npc_template > &", }, const = false, static = false, },
            { name = "randomize", rval = "void", args = { }, optional_args = { "const npc_class_id &", }, const = false, static = false, },
            { name = "randomize_from_faction", rval = "void", args = { "faction *", }, const = false, static = false, },
            { name = "set_fac", rval = "void", args = { "const string_id< faction > &", }, const = false, static = false, },
            { name = "clear_fac", rval = "void", args = { }, const = false, static = false, },
            { name = "spawn_at_sm", rval = "void", args = { "int", "int", "int", }, const = false, static = false, },
            { name = "spawn_at_precise", rval = "void", args = { "const point &", "const tripoint &", }, const = false, static = false, },
            { name = "place_on_map", rval = "void", args = { }, const = false, static = false, },
            { name = "add_new_mission", rval = "void", args = { "mission *", }, const = false, static = false, },
            { name = "best_skill", rval = "skill_id", args = { }, const = true, static = false, },
            { name = "best_skill_level", rval = "int", args = { }, const = true, static = false, },
            { name = "starting_weapon", rval = "void", args = { "const npc_class_id &", }, const = false, static = false, },
            { name = "load_info", rval = "void", args = { "std::string", }, const = false, static = false, },
            { name = "save_info", rval = "std::string", args = { }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "basic_symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "print_info", rval = "int", args = { "const catacurses::window &", "int", "int", "int", }, const = true, static = false, },
            { name = "opinion_text", rval = "std::string", args = { }, const = true, static = false, },
            { name = "faction_display", rval = "int", args = { "const catacurses::window &", "const int", }, const = true, static = false, },
            { name = "form_opinion", rval = "void", args = { "const player &", }, const = false, static = false, },
            { name = "pick_talk_topic", rval = "std::string", args = { "const player &", }, const = false, static = false, },
            { name = "character_danger", rval = "float", args = { "const Character &", }, const = true, static = false, },
            { name = "vehicle_danger", rval = "float", args = { "int", }, const = true, static = false, },
            { name = "turned_hostile", rval = "bool", args = { }, const = true, static = false, },
            { name = "hostile_anger_level", rval = "int", args = { }, const = true, static = false, },
            { name = "make_angry", rval = "void", args = { }, const = false, static = false, },
            { name = "on_attacked", rval = "void", args = { "const Creature &", }, const = false, static = false, },
            { name = "assigned_missions_value", rval = "int", args = { }, const = false, static = false, },
            { name = "skills_offered_to", rval = "std::vector< skill_id >", args = { "const player &", }, const = true, static = false, },
            { name = "styles_offered_to", rval = "std::vector< matype_id >", args = { "const player &", }, const = true, static = false, },
            { name = "get_faction_ver", rval = "int", args = { }, const = true, static = false, },
            { name = "set_faction_ver", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "is_enemy", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_following", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_obeying", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "is_friendly", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "is_leader", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_walking_with", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_ally", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "is_player_ally", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_stationary", rval = "bool", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_guarding", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_patrolling", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_assigned_to_camp", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_player_activity", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_travelling", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_minion", rval = "bool", args = { }, const = true, static = false, },
            { name = "guaranteed_hostile", rval = "bool", args = { }, const = true, static = false, },
            { name = "attitude_to", rval = "Creature::Attitude", args = { "const Creature &", }, const = true, static = false, },
            { name = "get_monster_faction", rval = "mfaction_id", args = { }, const = true, static = false, },
            { name = "follow_distance", rval = "int", args = { }, const = true, static = false, },
            { name = "talk_to_u", rval = "void", args = { }, optional_args = { "bool", "bool", }, const = false, static = false, },
            { name = "shop_restock", rval = "void", args = { }, const = false, static = false, },
            { name = "minimum_item_value", rval = "int", args = { }, const = true, static = false, },
            { name = "update_worst_item_value", rval = "void", args = { }, const = false, static = false, },
            { name = "value", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "value", rval = "int", args = { "const item &", "int", }, const = true, static = false, },
            { name = "wear_if_wanted", rval = "bool", args = { "const item &", }, const = false, static = false, },
            { name = "stow_item", rval = "void", args = { "item &", }, const = false, static = false, },
            { name = "wield", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "adjust_worn", rval = "bool", args = { }, const = false, static = false, },
            { name = "has_healing_item", rval = "bool", args = { "healing_options", }, const = false, static = false, },
            { name = "has_healing_options", rval = "healing_options", args = { }, const = false, static = false, },
            { name = "has_healing_options", rval = "healing_options", args = { "healing_options", }, const = false, static = false, },
            { name = "get_healing_item", rval = "item &", args = { "healing_options", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "has_painkiller", rval = "bool", args = { }, const = false, static = false, },
            { name = "took_painkiller", rval = "bool", args = { }, const = true, static = false, },
            { name = "use_painkiller", rval = "void", args = { }, const = false, static = false, },
            { name = "activate_item", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "will_accept_from_player", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "wants_to_sell", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "wants_to_sell", rval = "bool", args = { "const item &", "int", "int", }, const = true, static = false, },
            { name = "wants_to_buy", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "wants_to_buy", rval = "bool", args = { "const item &", "int", "int", }, const = true, static = false, },
            { name = "regen_ai_cache", rval = "void", args = { }, const = false, static = false, },
            { name = "current_target", rval = "const Creature *", args = { }, const = true, static = false, },
            { name = "current_target", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "current_ally", rval = "const Creature *", args = { }, const = true, static = false, },
            { name = "current_ally", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "good_escape_direction", rval = "tripoint", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "danger_assessment", rval = "float", args = { }, const = false, static = false, },
            { name = "average_damage_dealt", rval = "float", args = { }, const = false, static = false, },
            { name = "need_heal", rval = "bool", args = { "const player &", }, const = false, static = false, },
            { name = "bravery_check", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "emergency", rval = "bool", args = { }, const = true, static = false, },
            { name = "emergency", rval = "bool", args = { "float", }, const = true, static = false, },
            { name = "is_active", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "say", rval = "void", args = { "typename ...", "const char *const", "Args &&...", }, const = true, static = false, },
            { name = "say", rval = "void", args = { "const std::string &", }, optional_args = { "const int", }, const = true, static = false, },
            { name = "decide_needs", rval = "void", args = { }, const = false, static = false, },
            { name = "die", rval = "void", args = { "Creature *", }, const = false, static = false, },
            { name = "is_dead", rval = "bool", args = { }, const = true, static = false, },
            { name = "smash_ability", rval = "int", args = { }, const = true, static = false, },
            { name = "complain_about", rval = "bool", args = { "const std::string &", "const time_duration &", "const std::string &", }, optional_args = { "const bool", "const int", }, const = false, static = false, },
            { name = "warn_about", rval = "void", args = { "const std::string &", }, optional_args = { "const time_duration &", "const std::string &", }, const = false, static = false, },
            { name = "complain", rval = "bool", args = { }, const = false, static = false, },
            { name = "handle_sound", rval = "void", args = { "int", "const std::string &", "int", "const tripoint &", }, const = false, static = false, },
            { name = "shift", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "move", rval = "void", args = { }, const = false, static = false, },
            { name = "execute_action", rval = "void", args = { "npc_action", }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "evaluate_enemy", rval = "float", args = { "const Creature &", }, const = true, static = false, },
            { name = "assess_danger", rval = "void", args = { }, const = false, static = false, },
            { name = "method_of_fleeing", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "method_of_attack", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "address_needs", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "address_needs", rval = "npc_action", args = { "float", }, const = false, static = false, },
            { name = "address_player", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "long_term_goal_action", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "scan_new_items", rval = "bool", args = { }, const = false, static = false, },
            { name = "wield_better_weapon", rval = "bool", args = { }, const = false, static = false, },
            { name = "confidence_mult", rval = "double", args = { }, const = true, static = false, },
            { name = "confident_shoot_range", rval = "int", args = { "const item &", "int", }, const = true, static = false, },
            { name = "confident_gun_mode_range", rval = "int", args = { "const gun_mode &", "int", }, const = true, static = false, },
            { name = "confident_throw_range", rval = "int", args = { "const item &", "Creature *", }, const = true, static = false, },
            { name = "wont_hit_friend", rval = "bool", args = { "const tripoint &", "const item &", "bool", }, const = true, static = false, },
            { name = "enough_time_to_reload", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "can_reload_current", rval = "bool", args = { }, const = false, static = false, },
            { name = "find_reloadable", rval = "const item &", args = { }, const = true, static = false, },
            { name = "find_reloadable", rval = "item &", args = { }, const = false, static = false, },
            { name = "find_usable_ammo", rval = "item_location", args = { "const item &", }, const = false, static = false, },
            { name = "find_usable_ammo", rval = "const item_location", args = { "const item &", }, const = true, static = false, },
            --{ name = "dispose_item", rval = "bool", args = { "item_location &&", }, optional_args = { "const std::string &", }, const = false, static = false, },
            { name = "aim", rval = "void", args = { }, const = false, static = false, },
            { name = "do_reload", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "update_path", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", "bool", }, const = false, static = false, },
            { name = "can_open_door", rval = "bool", args = { "const tripoint &", "const bool", }, const = true, static = false, },
            { name = "can_move_to", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "move_to", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", "std::set< tripoint > *", }, const = false, static = false, },
            { name = "move_to_next", rval = "void", args = { }, const = false, static = false, },
            { name = "avoid_friendly_fire", rval = "void", args = { }, const = false, static = false, },
            { name = "escape_explosion", rval = "void", args = { }, const = false, static = false, },
            { name = "move_away_from", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", "std::set< tripoint > *", }, const = false, static = false, },
            { name = "move_away_from", rval = "void", args = { "const std::vector< sphere > &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "move_pause", rval = "void", args = { }, const = false, static = false, },
            { name = "get_pathfinding_settings", rval = "const pathfinding_settings &", args = { }, const = true, static = false, },
            { name = "get_pathfinding_settings", rval = "const pathfinding_settings &", args = { "bool", }, const = true, static = false, },
            { name = "get_path_avoid", rval = "std::set< tripoint >", args = { }, const = true, static = false, },
            { name = "find_item", rval = "void", args = { }, const = false, static = false, },
            { name = "pick_up_item", rval = "void", args = { }, const = false, static = false, },
            { name = "drop_items", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "pick_up_item_map", rval = "std::list< item >", args = { "const tripoint &", }, const = false, static = false, },
            { name = "pick_up_item_vehicle", rval = "std::list< item >", args = { "vehicle &", "int", }, const = false, static = false, },
            { name = "has_item_whitelist", rval = "bool", args = { }, const = true, static = false, },
            { name = "item_name_whitelisted", rval = "bool", args = { "const std::string &", }, const = false, static = false, },
            { name = "item_whitelisted", rval = "bool", args = { "const item &", }, const = false, static = false, },
            { name = "find_corpse_to_pulp", rval = "bool", args = { }, const = false, static = false, },
            { name = "do_pulp", rval = "bool", args = { }, const = false, static = false, },
            { name = "do_player_activity", rval = "bool", args = { }, const = false, static = false, },
            { name = "alt_attack", rval = "bool", args = { }, const = false, static = false, },
            { name = "heal_player", rval = "void", args = { "player &", }, const = false, static = false, },
            { name = "heal_self", rval = "void", args = { }, const = false, static = false, },
            { name = "mug_player", rval = "void", args = { "player &", }, const = false, static = false, },
            { name = "look_for_player", rval = "void", args = { "const player &", }, const = false, static = false, },
            { name = "saw_player_recently", rval = "bool", args = { }, const = true, static = false, },
            { name = "consume_food", rval = "bool", args = { }, const = false, static = false, },
            { name = "has_omt_destination", rval = "bool", args = { }, const = true, static = false, },
            { name = "set_omt_destination", rval = "void", args = { }, const = false, static = false, },
            { name = "go_to_omt_destination", rval = "void", args = { }, const = false, static = false, },
            { name = "reach_omt_destination", rval = "void", args = { }, const = false, static = false, },
            { name = "guard_current_pos", rval = "void", args = { }, const = false, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            { name = "add_memorial_log", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "query_yn", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "extended_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "hp_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "speed_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "setpos", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "travel_overmap", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_attitude", rval = "npc_attitude", args = { }, const = true, static = false, },
            { name = "set_attitude", rval = "void", args = { "npc_attitude", }, const = false, static = false, },
            { name = "global_square_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "on_unload", rval = "void", args = { }, const = false, static = false, },
            { name = "on_load", rval = "void", args = { }, const = false, static = false, },
            { name = "set_companion_mission", rval = "void", args = { "npc &", "const std::string &", }, const = false, static = false, },
            { name = "set_companion_mission", rval = "void", args = { "const tripoint &", "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "set_companion_mission", rval = "void", args = { "const tripoint &", "const std::string &", "const std::string &", "const tripoint &", }, const = false, static = false, },
            { name = "reset_companion_mission", rval = "void", args = { }, const = false, static = false, },
            { name = "get_mission_destination", rval = "cata::optional< tripoint >", args = { }, const = true, static = false, },
            { name = "has_companion_mission", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_companion_mission", rval = "npc_companion_mission", args = { }, const = true, static = false, },
            { name = "get_attitude_group", rval = "attitude_group", args = { "npc_attitude", }, const = true, static = false, },
            { name = "get_need_str_id", rval = "std::string", args = { "const npc_need &", }, const = false, static = true, },
            { name = "get_location_for", rval = "overmap_location_str_id", args = { "const npc_need &", }, const = false, static = true, },
        }
    },
    npc_companion_mission = {
        cpp_name = "npc_companion_mission",
        new = {
        },
        attributes = {
            mission_id = { type = "std::string", writable = true, reference = false, static = false, },
            position = { type = "tripoint", writable = true, reference = false, static = false, },
            role_id = { type = "std::string", writable = true, reference = false, static = false, },
            destination = { type = "cata::optional< tripoint >", writable = true, reference = false, static = false, },
        },
        functions = {
        }
    },
    npc_opinion = {
        cpp_name = "npc_opinion",
        new = {
            { },
            { "int", "int", "int", "int", "int", },
        },
        attributes = {
            trust = { type = "int", writable = true, reference = false, static = false, },
            fear = { type = "int", writable = true, reference = false, static = false, },
            value = { type = "int", writable = true, reference = false, static = false, },
            anger = { type = "int", writable = true, reference = false, static = false, },
            owed = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator+=", rval = "", args = { "const npc_opinion &", }, const = false, static = false, },
            --{ name = "operator+", rval = "", args = { "const npc_opinion &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    npc_personality = {
        cpp_name = "npc_personality",
        new = {
            { },
        },
        attributes = {
            aggression = { type = "signed char", writable = true, reference = false, static = false, },
            bravery = { type = "signed char", writable = true, reference = false, static = false, },
            collector = { type = "signed char", writable = true, reference = false, static = false, },
            altruism = { type = "signed char", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    npc_template = {
        cpp_name = "npc_template",
        new = {
            { },
        },
        attributes = {
            guy = { type = "npc", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "check_consistency", rval = "void", args = { }, const = false, static = true, },
        }
    },
    overmap = {
        cpp_name = "overmap",
        new = {
            { "const overmap &", },
            --{ "overmap &&", },
            { "int", "int", },
        },
        attributes = {
            invalid_tripoint = { type = "tripoint", writable = false, reference = false, static = true, },
            radios = { type = "std::vector< radio_tower >", writable = true, reference = false, static = false, },
            vehicles = { type = "std::map< int, om_vehicle >", writable = true, reference = false, static = false, },
            camps = { type = "std::vector< basecamp >", writable = true, reference = false, static = false, },
            cities = { type = "std::vector< city >", writable = true, reference = false, static = false, },
            roads_out = { type = "std::vector< city >", writable = true, reference = false, static = false, },
            monster_map = { type = "std::unordered_multimap< tripoint, monster >", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const overmap &", }, const = false, static = false, },
            { name = "populate", rval = "void", args = { "overmap_special_batch &", }, const = false, static = false, },
            { name = "populate", rval = "void", args = { }, const = false, static = false, },
            { name = "pos", rval = "const point&", args = { }, const = true, static = false, },
            { name = "save", rval = "void", args = { }, const = true, static = false, },
            { name = "find_random_omt", rval = "tripoint", args = { "const std::string &", }, const = true, static = false, },
            { name = "find_terrain", rval = "std::vector< point >", args = { "const std::string &", "int", }, const = false, static = false, },
            { name = "ter", rval = "oter_id &", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "ter", rval = "oter_id &", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_ter", rval = "const oter_id", args = { "const int", "const int", "const int", }, const = true, static = false, },
            { name = "get_ter", rval = "const oter_id", args = { "const tripoint &", }, const = true, static = false, },
            { name = "seen", rval = "bool &", args = { "int", "int", "int", }, const = false, static = false, },
            { name = "explored", rval = "bool &", args = { "int", "int", "int", }, const = false, static = false, },
            { name = "is_explored", rval = "bool", args = { "const int", "const int", "const int", }, const = true, static = false, },
            { name = "has_note", rval = "bool", args = { "int", "int", "int", }, const = true, static = false, },
            { name = "note", rval = "const std::string &", args = { "int", "int", "int", }, const = true, static = false, },
            { name = "add_note", rval = "void", args = { "int", "int", "int", "std::string", }, const = false, static = false, },
            { name = "delete_note", rval = "void", args = { "int", "int", "int", }, const = false, static = false, },
            { name = "scent_at", rval = "const scent_trace &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "set_scent", rval = "void", args = { "const tripoint &", "const scent_trace &", }, const = false, static = false, },
            { name = "find_notes", rval = "std::vector< point >", args = { "const int", "const std::string &", }, const = false, static = false, },
            { name = "is_omt_generated", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "global_base_point", rval = "point", args = { }, const = true, static = false, },
            { name = "get_settings", rval = "const regional_settings&", args = { }, const = true, static = false, },
            { name = "clear_mon_groups", rval = "void", args = { }, const = false, static = false, },
            { name = "mongroup_check", rval = "bool", args = { "const mongroup &", }, const = true, static = false, },
            { name = "monster_check", rval = "bool", args = { "const std::pair< tripoint, monster > &", }, const = true, static = false, },
            { name = "find_camp", rval = "cata::optional< basecamp * >", args = { "const int", "const int", }, const = false, static = false, },
            { name = "insert_npc", rval = "void", args = { "std::shared_ptr< npc >", }, const = false, static = false, },
            { name = "erase_npc", rval = "std::shared_ptr< npc >", args = { "const int", }, const = false, static = false, },
            --{ name = "for_each_npc", rval = "void", args = { "const std::function< void(npc &)> &", }, const = false, static = false, },
            --{ name = "for_each_npc", rval = "void", args = { "const std::function< void(const npc &)> &", }, const = true, static = false, },
            { name = "find_npc", rval = "std::shared_ptr< npc >", args = { "int", }, const = true, static = false, },
            { name = "get_npcs", rval = "const std::vector<std::shared_ptr<npc> >&", args = { }, const = true, static = false, },
            --{ name = "get_npcs", rval = "std::vector< std::shared_ptr< npc > >", args = { "const std::function< bool(const npc &)> &", }, const = true, static = false, },
            { name = "unserialize", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "unserialize_view", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "std::ostream &", }, const = true, static = false, },
            { name = "serialize_view", rval = "void", args = { "std::ostream &", }, const = true, static = false, },
            { name = "unserialize_legacy", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "unserialize_view_legacy", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "inbounds", rval = "bool", args = { "const tripoint &", }, optional_args = { "int", }, const = false, static = true, },
            { name = "inbounds", rval = "bool", args = { "const point &", }, optional_args = { "int", }, const = false, static = true, },
        }
    },
    player = {
        cpp_name = "player",
        new = {
            { },
            { "const player &", },
            --{ "player &&", },
        },
        attributes = {
            stomach = { type = "stomach_contents", writable = true, reference = false, static = false, },
            guts = { type = "stomach_contents", writable = true, reference = false, static = false, },
            view_offset = { type = "tripoint", writable = true, reference = false, static = false, },
            in_vehicle = { type = "bool", writable = true, reference = false, static = false, },
            controlling_vehicle = { type = "bool", writable = true, reference = false, static = false, },
            grab_point = { type = "tripoint", writable = true, reference = false, static = false, },
            hauling = { type = "bool", writable = true, reference = false, static = false, },
            activity = { type = "player_activity", writable = true, reference = false, static = false, },
            backlog = { type = "std::list< player_activity >", writable = true, reference = false, static = false, },
            volume = { type = "int", writable = true, reference = false, static = false, },
            prof = { type = "profession", writable = false, reference = true, static = false, },
            start_location = { type = "start_location_id", writable = true, reference = false, static = false, },
            mutation_category_level = { type = "std::map< std::string, int >", writable = true, reference = false, static = false, },
            next_climate_control_check = { type = "time_point", writable = true, reference = false, static = false, },
            last_climate_control_ret = { type = "bool", writable = true, reference = false, static = false, },
            power_level = { type = "int", writable = true, reference = false, static = false, },
            max_power_level = { type = "int", writable = true, reference = false, static = false, },
            tank_plut = { type = "int", writable = true, reference = false, static = false, },
            reactor_plut = { type = "int", writable = true, reference = false, static = false, },
            slow_rad = { type = "int", writable = true, reference = false, static = false, },
            oxygen = { type = "int", writable = true, reference = false, static = false, },
            stamina = { type = "int", writable = true, reference = false, static = false, },
            recoil = { type = "double", writable = true, reference = false, static = false, },
            last_target = { type = "std::weak_ptr< Creature >", writable = true, reference = false, static = false, },
            last_target_pos = { type = "cata::optional< tripoint >", writable = true, reference = false, static = false, },
            ammo_location = { type = "item_location", writable = true, reference = false, static = false, },
            scent = { type = "int", writable = true, reference = false, static = false, },
            dodges_left = { type = "int", writable = true, reference = false, static = false, },
            blocks_left = { type = "int", writable = true, reference = false, static = false, },
            stim = { type = "int", writable = true, reference = false, static = false, },
            radiation = { type = "int", writable = true, reference = false, static = false, },
            cash = { type = "unsigned long", writable = true, reference = false, static = false, },
            movecounter = { type = "int", writable = true, reference = false, static = false, },
            death_drops = { type = "bool", writable = true, reference = false, static = false, },
            temp_cur = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            frostbite_timer = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            temp_conv = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            mut_drench = { type = "std::array< std::array< int, NUM_WATER_TOLERANCE >, num_bp >", writable = true, reference = false, static = false, },
            drench_capacity = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            body_wetness = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            focus_pool = { type = "int", writable = true, reference = false, static = false, },
            ma_styles = { type = "std::vector< matype_id >", writable = true, reference = false, static = false, },
            style_selected = { type = "matype_id", writable = true, reference = false, static = false, },
            keep_hands_free = { type = "bool", writable = true, reference = false, static = false, },
            reach_attacking = { type = "bool", writable = true, reference = false, static = false, },
            manual_examine = { type = "bool", writable = true, reference = false, static = false, },
            addictions = { type = "std::vector< addiction >", writable = true, reference = false, static = false, },
            last_craft = { type = "pimpl< craft_command >", writable = true, reference = false, static = false, },
            lastrecipe = { type = "recipe_id", writable = true, reference = false, static = false, },
            last_batch = { type = "int", writable = true, reference = false, static = false, },
            lastconsumed = { type = "itype_id", writable = true, reference = false, static = false, },
            memorial_log = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            follower_ids = { type = "std::set< int >", writable = true, reference = false, static = false, },
            lifetime_stats = { type = "stats", writable = true, reference = false, static = false, },
            camps = { type = "std::set< tripoint >", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const player &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "player &&", }, const = false, static = false, },
            { name = "create", rval = "bool", args = { "character_type", }, optional_args = { "const std::string &", }, const = false, static = false, },
            --{ name = "randomize", rval = "void", args = { "bool", "points_left &", }, optional_args = { "bool", }, const = false, static = false, },
            --{ name = "load_template", rval = "bool", args = { "const std::string &", "points_left &", }, const = false, static = false, },
            { name = "normalize", rval = "void", args = { }, const = false, static = false, },
            { name = "disp_name", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "skin_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "is_player", rval = "bool", args = { }, const = true, static = false, },
            { name = "process_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "hardcoded_effects", rval = "void", args = { "effect &", }, const = false, static = false, },
            { name = "vomit_mod", rval = "double", args = { }, const = false, static = false, },
            { name = "in_sleep_state", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_npc", rval = "bool", args = { }, const = true, static = false, },
            { name = "basic_symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "load_info", rval = "void", args = { "std::string", }, const = false, static = false, },
            { name = "save_info", rval = "std::string", args = { }, const = true, static = false, },
            { name = "visible_mutations", rval = "std::string", args = { "const int", }, const = true, static = false, },
            { name = "short_description_parts", rval = "std::vector< std::string >", args = { }, const = true, static = false, },
            { name = "short_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "print_info", rval = "int", args = { "const catacurses::window &", "int", "int", "int", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "serialize_map_memory", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize_map_memory", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "memorial", rval = "void", args = { "std::ostream &", "const std::string &", }, const = false, static = false, },
            { name = "disp_info", rval = "void", args = { }, const = false, static = false, },
            { name = "disp_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_stats", rval = "void", args = { }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "recalc_speed_bonus", rval = "void", args = { }, const = false, static = false, },
            { name = "action_taken", rval = "void", args = { }, const = false, static = false, },
            { name = "update_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "apply_persistent_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "update_mental_focus", rval = "void", args = { }, const = false, static = false, },
            { name = "calc_focus_equilibrium", rval = "int", args = { }, const = true, static = false, },
            { name = "update_bodytemp", rval = "void", args = { }, const = false, static = false, },
            { name = "bodytemp_color", rval = "nc_color", args = { "int", }, const = true, static = false, },
            { name = "run_cost", rval = "int", args = { "int", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "swim_speed", rval = "int", args = { }, const = true, static = false, },
            { name = "update_body_wetness", rval = "void", args = { "const w_point &", }, const = false, static = false, },
            { name = "update_body", rval = "void", args = { }, const = false, static = false, },
            { name = "update_body", rval = "void", args = { "const time_point &", "const time_point &", }, const = false, static = false, },
            { name = "update_stomach", rval = "void", args = { "const time_point &", "const time_point &", }, const = false, static = false, },
            { name = "update_needs", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "calc_needs_rates", rval = "needs_rates", args = { }, const = false, static = false, },
            { name = "update_vitamins", rval = "void", args = { "const vitamin_id &", }, const = false, static = false, },
            { name = "regen", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "update_stamina", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "check_needs_extremes", rval = "void", args = { }, const = false, static = false, },
            { name = "is_hibernating", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_conflicting_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_opposite_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_lower_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_higher_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_same_type_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "crossed_threshold", rval = "bool", args = { }, const = true, static = false, },
            { name = "purifiable", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "set_highest_cat_level", rval = "void", args = { }, const = false, static = false, },
            { name = "get_highest_category", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_category_dream", rval = "std::string", args = { "const std::string &", "int", }, const = true, static = false, },
            { name = "in_climate_control", rval = "bool", args = { }, const = false, static = false, },
            { name = "introduce_into_anesthesia", rval = "void", args = { "const time_duration &", "player &", "bool", }, const = false, static = false, },
            { name = "has_active_optcloak", rval = "bool", args = { }, const = true, static = false, },
            { name = "add_bionic", rval = "void", args = { "const bionic_id &", }, const = false, static = false, },
            { name = "remove_bionic", rval = "void", args = { "const bionic_id &", }, const = false, static = false, },
            { name = "bionics_adjusted_skill", rval = "float", args = { "const skill_id &", "const skill_id &", "const skill_id &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "install_bionics", rval = "bool", args = { "const itype &", "player &", }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "bionics_install_failure", rval = "void", args = { "player &", "int", "int", "float", }, const = false, static = false, },
            { name = "uninstall_bionic", rval = "bool", args = { "const bionic_id &", "player &", }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "bionics_uninstall_failure", rval = "void", args = { "player &", "int", "int", "float", }, const = false, static = false, },
            { name = "charge_power", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "power_bionics", rval = "void", args = { }, const = false, static = false, },
            { name = "power_mutations", rval = "void", args = { }, const = false, static = false, },
            { name = "activate_bionic", rval = "bool", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "deactivate_bionic", rval = "bool", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "process_bionic", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "remove_random_bionic", rval = "bool", args = { }, const = false, static = false, },
            { name = "clear_bionics", rval = "void", args = { }, const = false, static = false, },
            { name = "num_bionics", rval = "int", args = { }, const = true, static = false, },
            { name = "amount_of_storage_bionics", rval = "std::pair< int, int >", args = { }, const = true, static = false, },
            { name = "bionic_at_index", rval = "bionic &", args = { "int", }, const = false, static = false, },
            { name = "bionic_by_invlet", rval = "bionic *", args = { "long", }, const = false, static = false, },
            { name = "active_light", rval = "float", args = { }, const = true, static = false, },
            { name = "mutation_ok", rval = "bool", args = { "const trait_id &", "bool", "bool", }, const = true, static = false, },
            { name = "mutate", rval = "void", args = { }, const = false, static = false, },
            { name = "mutate_category", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "mutate_towards", rval = "bool", args = { "const trait_id &", }, const = false, static = false, },
            { name = "remove_mutation", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "has_child_flag", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "remove_child_flag", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "pos", rval = "const tripoint &", args = { }, const = true, static = false, },
            { name = "sight_range", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "unimpaired_range", rval = "int", args = { }, const = true, static = false, },
            { name = "overmap_los", rval = "bool", args = { "const tripoint &", "int", }, const = false, static = false, },
            { name = "overmap_sight_range", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "clairvoyance", rval = "int", args = { }, const = true, static = false, },
            { name = "sight_impaired", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_two_arms", rval = "bool", args = { }, const = true, static = false, },
            { name = "handle_melee_wear", rval = "bool", args = { "item &", }, optional_args = { "float", }, const = false, static = false, },
            { name = "unarmed_attack", rval = "bool", args = { }, const = true, static = false, },
            { name = "avoid_trap", rval = "bool", args = { "const tripoint &", "const trap &", }, const = true, static = false, },
            { name = "has_alarm_clock", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_watch", rval = "bool", args = { }, const = true, static = false, },
            { name = "toggle_map_memory", rval = "void", args = { }, const = false, static = false, },
            { name = "should_show_map_memory", rval = "bool", args = { }, const = false, static = false, },
            { name = "memorize_tile", rval = "void", args = { "const tripoint &", "const std::string &", "const int", "const int", }, const = false, static = false, },
            { name = "get_memorized_tile", rval = "memorized_terrain_tile", args = { "const tripoint &", }, const = true, static = false, },
            { name = "memorize_symbol", rval = "void", args = { "const tripoint &", "const long", }, const = false, static = false, },
            { name = "get_memorized_symbol", rval = "long", args = { "const tripoint &", }, const = true, static = false, },
            { name = "max_memorized_tiles", rval = "size_t", args = { }, const = true, static = false, },
            { name = "clear_memorized_tile", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "sees", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "sees", rval = "bool", args = { "const Creature &", }, const = true, static = false, },
            { name = "get_hostile_creatures", rval = "std::vector< Creature * >", args = { "int", }, const = true, static = false, },
            { name = "get_visible_creatures", rval = "std::vector< Creature * >", args = { "int", }, const = true, static = false, },
            { name = "get_targetable_creatures", rval = "std::vector< Creature * >", args = { "int", }, const = true, static = false, },
            { name = "sees_with_infrared", rval = "bool", args = { "const Creature &", }, const = true, static = false, },
            { name = "attitude_to", rval = "Creature::Attitude", args = { "const Creature &", }, const = true, static = false, },
            { name = "pause", rval = "void", args = { }, const = false, static = false, },
            { name = "set_movement_mode", rval = "void", args = { "std::string", }, const = false, static = false, },
            { name = "get_movement_mode", rval = "const std::string", args = { }, const = true, static = false, },
            { name = "cycle_move_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_move_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "toggle_run_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "toggle_crouch_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "get_shout_volume", rval = "int", args = { }, const = true, static = false, },
            { name = "shout", rval = "void", args = { }, optional_args = { "std::string", "bool", }, const = false, static = false, },
            { name = "ma_static_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_onmove_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_onhit_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_onattack_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_ondodge_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_onblock_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_ongethit_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "has_mabuff", rval = "bool", args = { "const mabuff_id &", }, const = true, static = false, },
            { name = "has_martialart", rval = "bool", args = { "const matype_id &", }, const = true, static = false, },
            { name = "add_martialart", rval = "void", args = { "const matype_id &", }, const = false, static = false, },
            { name = "mabuff_tohit_bonus", rval = "float", args = { }, const = true, static = false, },
            { name = "mabuff_dodge_bonus", rval = "float", args = { }, const = true, static = false, },
            { name = "mabuff_block_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "mabuff_speed_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "mabuff_armor_bonus", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "mabuff_damage_mult", rval = "float", args = { "damage_type", }, const = true, static = false, },
            { name = "mabuff_damage_bonus", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "mabuff_attack_cost_penalty", rval = "int", args = { }, const = true, static = false, },
            { name = "mabuff_attack_cost_mult", rval = "float", args = { }, const = true, static = false, },
            { name = "is_throw_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "stability_roll", rval = "float", args = { }, const = true, static = false, },
            { name = "is_quiet", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_melee", rval = "bool", args = { }, const = true, static = false, },
            { name = "digging", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_on_ground", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_dead_state", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_elec_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_immune_effect", rval = "bool", args = { "const efftype_id &", }, const = true, static = false, },
            { name = "is_immune_damage", rval = "bool", args = { "const damage_type", }, const = true, static = false, },
            { name = "is_rad_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_miss_recovery_tec", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "has_grab_break_tec", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_leg_block", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_arm_block", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_limb_block", rval = "bool", args = { }, const = true, static = false, },
            { name = "best_shield", rval = "item &", args = { }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", "bool", "const matec_id &", }, optional_args = { "bool", }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", "bool", }, const = false, static = false, },
            { name = "get_weapon_dispersion", rval = "dispersion_sources", args = { "const item &", }, const = true, static = false, },
            { name = "handle_gun_damage", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "recoil_vehicle", rval = "double", args = { }, const = true, static = false, },
            { name = "recoil_total", rval = "double", args = { }, const = true, static = false, },
            { name = "gun_engagement_moves", rval = "int", args = { "const item &", }, optional_args = { "int", "int", }, const = true, static = false, },
            { name = "fire_gun", rval = "int", args = { "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "fire_gun", rval = "int", args = { "const tripoint &", "int", "item &", }, const = false, static = false, },
            { name = "reach_attack", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "block_hit", rval = "bool", args = { "Creature *", "body_part &", "damage_instance &", }, const = false, static = false, },
            { name = "armor_absorb", rval = "bool", args = { "damage_unit &", "item &", }, const = false, static = false, },
            { name = "bionic_armor_bonus", rval = "float", args = { "body_part", "damage_type", }, const = true, static = false, },
            { name = "passive_absorb_hit", rval = "void", args = { "body_part", "damage_unit &", }, const = true, static = false, },
            { name = "absorb_hit", rval = "void", args = { "body_part", "damage_instance &", }, const = false, static = false, },
            { name = "on_dodge", rval = "void", args = { "Creature *", "float", }, const = false, static = false, },
            { name = "on_hit", rval = "void", args = { "Creature *", }, optional_args = { "body_part", "float", "dealt_projectile_attack const *const", }, const = false, static = false, },
            { name = "on_hurt", rval = "void", args = { "Creature *", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "bonus_damage", rval = "float", args = { "bool", }, const = true, static = false, },
            { name = "get_hit_base", rval = "float", args = { }, const = true, static = false, },
            { name = "hit_roll", rval = "float", args = { }, const = true, static = false, },
            { name = "crit_chance", rval = "double", args = { "float", "float", "const item &", }, const = true, static = false, },
            { name = "scored_crit", rval = "bool", args = { "float", "const item &", }, const = true, static = false, },
            { name = "attack_speed", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "get_hit_weapon", rval = "float", args = { "const item &", }, const = true, static = false, },
            { name = "weapon_value", rval = "double", args = { "const item &", }, optional_args = { "long", }, const = true, static = false, },
            { name = "gun_value", rval = "double", args = { "const item &", }, optional_args = { "long", }, const = true, static = false, },
            { name = "melee_value", rval = "double", args = { "const item &", }, const = true, static = false, },
            { name = "unarmed_value", rval = "double", args = { }, const = true, static = false, },
            { name = "roll_all_damage", rval = "void", args = { "bool", "damage_instance &", "bool", "const item &", }, const = true, static = false, },
            { name = "roll_bash_damage", rval = "void", args = { "bool", "damage_instance &", "bool", "const item &", }, const = true, static = false, },
            { name = "roll_cut_damage", rval = "void", args = { "bool", "damage_instance &", "bool", "const item &", }, const = true, static = false, },
            { name = "roll_stab_damage", rval = "void", args = { "bool", "damage_instance &", "bool", "const item &", }, const = true, static = false, },
            { name = "get_all_techniques", rval = "std::vector< matec_id >", args = { "const item &", }, const = true, static = false, },
            { name = "has_technique", rval = "bool", args = { "const matec_id &", "const item &", }, const = true, static = false, },
            { name = "pick_technique", rval = "matec_id", args = { "Creature &", "const item &", "bool", "bool", "bool", }, const = false, static = false, },
            { name = "perform_technique", rval = "void", args = { "const ma_technique &", "Creature &", "damage_instance &", "int &", }, const = false, static = false, },
            { name = "perform_special_attacks", rval = "void", args = { "Creature &", }, const = false, static = false, },
            { name = "mutation_attacks", rval = "std::vector< special_attack >", args = { "Creature &", }, const = true, static = false, },
            { name = "melee_special_effects", rval = "std::string", args = { "Creature &", "damage_instance &", "item &", }, const = false, static = false, },
            { name = "get_dodge_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_dodge", rval = "float", args = { }, const = true, static = false, },
            { name = "dodge_roll", rval = "float", args = { }, const = false, static = false, },
            { name = "get_melee", rval = "float", args = { }, const = true, static = false, },
            { name = "add_miss_reason", rval = "void", args = { "const std::string &", "unsigned int", }, const = false, static = false, },
            { name = "clear_miss_reasons", rval = "void", args = { }, const = false, static = false, },
            { name = "get_miss_reason", rval = "std::string", args = { }, const = false, static = false, },
            { name = "uncanny_dodge", rval = "bool", args = { }, const = false, static = false, },
            { name = "adjacent_tile", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "climbing_cost", rval = "int", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "throw_item", rval = "dealt_projectile_attack", args = { "const tripoint &", "const item &", }, optional_args = { "const cata::optional< tripoint > &", }, const = false, static = false, },
            { name = "read_speed", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "rust_rate", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "talk_skill", rval = "int", args = { }, const = true, static = false, },
            { name = "intimidation", rval = "int", args = { }, const = true, static = false, },
            { name = "immune_to", rval = "bool", args = { "body_part", "damage_unit", }, const = true, static = false, },
            { name = "deal_damage", rval = "dealt_damage_instance", args = { "Creature *", "body_part", "const damage_instance &", }, const = false, static = false, },
            { name = "reduce_healing_effect", rval = "int", args = { "const efftype_id &", "int", "body_part", }, const = false, static = false, },
            { name = "apply_damage", rval = "void", args = { "Creature *", "body_part", "int", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "mod_pain", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_pain", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_perceived_pain", rval = "int", args = { }, const = true, static = false, },
            { name = "cough", rval = "void", args = { }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "add_pain_msg", rval = "void", args = { "int", "body_part", }, const = true, static = false, },
            { name = "mod_painkiller", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_painkiller", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_painkiller", rval = "int", args = { }, const = true, static = false, },
            { name = "heal", rval = "void", args = { "body_part", "int", }, const = false, static = false, },
            { name = "heal", rval = "void", args = { "hp_part", "int", }, const = false, static = false, },
            { name = "healall", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "hurtall", rval = "void", args = { "int", "Creature *", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "hitall", rval = "int", args = { "int", "int", "Creature *", }, const = false, static = false, },
            { name = "knock_back_from", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "fall_damage_mod", rval = "float", args = { }, const = true, static = false, },
            { name = "impact", rval = "int", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "hp_percentage", rval = "int", args = { }, const = true, static = false, },
            { name = "get_sick", rval = "void", args = { }, const = false, static = false, },
            { name = "get_radio_items", rval = "std::list< item * >", args = { }, const = false, static = false, },
            { name = "get_artifact_items", rval = "std::list< item * >", args = { }, const = false, static = false, },
            { name = "add_addiction", rval = "void", args = { "add_type", "int", }, const = false, static = false, },
            { name = "rem_addiction", rval = "void", args = { "add_type", }, const = false, static = false, },
            { name = "has_addiction", rval = "bool", args = { "add_type", }, const = true, static = false, },
            { name = "addiction_level", rval = "int", args = { "add_type", }, const = true, static = false, },
            { name = "siphon", rval = "void", args = { "vehicle &", "const itype_id &", }, const = false, static = false, },
            { name = "suffer", rval = "void", args = { }, const = false, static = false, },
            { name = "irradiate", rval = "bool", args = { "float", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "mend", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "vomit", rval = "void", args = { }, const = false, static = false, },
            { name = "sound_hallu", rval = "void", args = { }, const = false, static = false, },
            { name = "drench", rval = "void", args = { "int", "const body_part_set &", "bool", }, const = false, static = false, },
            { name = "drench_mut_calc", rval = "void", args = { }, const = false, static = false, },
            { name = "apply_wetness_morale", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "drink_from_hands", rval = "int", args = { "item &", }, const = false, static = false, },
            { name = "consume", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "consume_item", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "allergy_type", rval = "morale_type", args = { "const item &", }, const = true, static = false, },
            { name = "eat", rval = "bool", args = { "item &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "modify_health", rval = "void", args = { "const islot_comestible &", }, const = false, static = false, },
            { name = "modify_stimulation", rval = "void", args = { "const islot_comestible &", }, const = false, static = false, },
            { name = "modify_addiction", rval = "void", args = { "const islot_comestible &", }, const = false, static = false, },
            { name = "modify_morale", rval = "void", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "can_eat", rval = "ret_val< edible_rating >", args = { "const item &", }, const = true, static = false, },
            { name = "will_eat", rval = "ret_val< edible_rating >", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "get_cbm_rechargeable_with", rval = "rechargeable_cbm", args = { "const item &", }, const = true, static = false, },
            { name = "get_acquirable_energy", rval = "int", args = { "const item &", "rechargeable_cbm", }, const = true, static = false, },
            { name = "get_acquirable_energy", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "stomach_capacity", rval = "int", args = { }, const = true, static = false, },
            { name = "kcal_for", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "nutrition_for", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "calories_for", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "fun_for", rval = "std::pair< int, int >", args = { "const item &", }, const = true, static = false, },
            { name = "book_fun_for", rval = "int", args = { "const item &", "const player &", }, const = true, static = false, },
            { name = "get_comestible_from", rval = "item &", args = { "item &", }, const = true, static = false, },
            { name = "get_hunger_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "initialize_stomach_contents", rval = "void", args = { }, const = false, static = false, },
            { name = "vitamins_from", rval = "std::map< vitamin_id, int >", args = { "const item &", }, const = true, static = false, },
            { name = "vitamins_from", rval = "std::map< vitamin_id, int >", args = { "const itype_id &", }, const = true, static = false, },
            { name = "vitamin_rate", rval = "time_duration", args = { "const vitamin_id &", }, const = true, static = false, },
            { name = "vitamin_mod", rval = "int", args = { "const vitamin_id &", "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "vitamins_mod", rval = "void", args = { "const std::map< vitamin_id, int >", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "vitamin_get", rval = "int", args = { "const vitamin_id &", }, const = true, static = false, },
            { name = "vitamin_set", rval = "bool", args = { "const vitamin_id &", "int", }, const = false, static = false, },
            { name = "metabolic_rate_base", rval = "float", args = { }, const = true, static = false, },
            { name = "metabolic_rate", rval = "float", args = { }, const = true, static = false, },
            { name = "consume_effects", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "rooted_message", rval = "void", args = { }, const = true, static = false, },
            { name = "rooted", rval = "void", args = { }, const = false, static = false, },
            { name = "get_lift_assist", rval = "int", args = { }, const = true, static = false, },
            { name = "list_ammo", rval = "bool", args = { "const item &", "std::vector< item::reload_option > &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "select_ammo", rval = "item::reload_option", args = { "const item &", }, optional_args = { "bool", "bool", }, const = true, static = false, },
            { name = "select_ammo", rval = "item::reload_option", args = { "const item &", "std::vector< item::reload_option >", }, const = true, static = false, },
            --{ name = "can_lift", rval = "bool", args = { "typename T", "const T &", }, const = true, static = false, },
            { name = "can_wear", rval = "ret_val< bool >", args = { "const item &", }, const = true, static = false, },
            { name = "can_takeoff", rval = "ret_val< bool >", args = { "const item &", }, optional_args = { "const std::list< item > *", }, const = true, static = false, },
            { name = "can_wield", rval = "ret_val< bool >", args = { "const item &", }, const = true, static = false, },
            { name = "can_unwield", rval = "ret_val< bool >", args = { "const item &", }, const = true, static = false, },
            { name = "can_consume", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "can_estimate_rot", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_wielding", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "wield", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "unwield", rval = "bool", args = { }, const = false, static = false, },
            { name = "pick_style", rval = "bool", args = { }, const = false, static = false, },
            { name = "can_reload", rval = "bool", args = { "const item &", }, optional_args = { "const itype_id &", }, const = true, static = false, },
            --{ name = "dispose_item", rval = "bool", args = { "item_location &&", }, optional_args = { "const std::string &", }, const = false, static = false, },
            --{ name = "mend_item", rval = "void", args = { "item_location &&", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "item_handling_cost", rval = "int", args = { "const item &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "item_store_cost", rval = "int", args = { "const item &", "const item &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "item_reload_cost", rval = "int", args = { "const item &", "const item &", "long", }, const = true, static = false, },
            { name = "item_wear_cost", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "wear", rval = "cata::optional< std::list< item >::iterator >", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "wear", rval = "cata::optional< std::list< item >::iterator >", args = { "item &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "wear_item", rval = "cata::optional< std::list< item >::iterator >", args = { "const item &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "change_side", rval = "bool", args = { "item &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "change_side", rval = "bool", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "get_dependent_worn_items", rval = "std::list< const item * >", args = { "const item &", }, const = true, static = false, },
            { name = "takeoff", rval = "bool", args = { "const item &", }, optional_args = { "std::list< item > *", }, const = false, static = false, },
            { name = "takeoff", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "drop", rval = "void", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "drop", rval = "void", args = { "const std::list< std::pair< int, int >> &", "const tripoint &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "add_or_drop_with_msg", rval = "bool", args = { "item &", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "unload", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "wield_contents", rval = "bool", args = { "item &", }, optional_args = { "int", "bool", "int", }, const = false, static = false, },
            { name = "store", rval = "void", args = { "item &", "item &", }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "sort_armor", rval = "void", args = { }, const = false, static = false, },
            { name = "use", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "use", rval = "void", args = { "item_location", }, const = false, static = false, },
            { name = "use_wielded", rval = "void", args = { }, const = false, static = false, },
            { name = "invoke_item", rval = "bool", args = { "item *", "const tripoint &", }, const = false, static = false, },
            { name = "invoke_item", rval = "bool", args = { "item *", "const std::string &", "const tripoint &", }, const = false, static = false, },
            { name = "invoke_item", rval = "bool", args = { "item *", }, const = false, static = false, },
            { name = "invoke_item", rval = "bool", args = { "item *", "const std::string &", }, const = false, static = false, },
            { name = "reassign_item", rval = "void", args = { "item &", "long", }, const = false, static = false, },
            { name = "consume_charges", rval = "bool", args = { "item &", "long", }, const = false, static = false, },
            { name = "gunmod_remove", rval = "bool", args = { "item &", "item &", }, const = false, static = false, },
            { name = "gunmod_add", rval = "void", args = { "item &", "item &", }, const = false, static = false, },
            { name = "gunmod_installation_odds", rval = "std::pair< int, int >", args = { "const item &", "const item &", }, const = true, static = false, },
            { name = "toolmod_add", rval = "void", args = { "item_location", "item_location", }, const = false, static = false, },
            { name = "get_book_reader", rval = "const player *", args = { "const item &", "std::vector< std::string > &", }, const = true, static = false, },
            { name = "time_to_read", rval = "int", args = { "const item &", "const player &", }, optional_args = { "const player *", }, const = true, static = false, },
            { name = "fun_to_read", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "read", rval = "bool", args = { "int", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "do_read", rval = "void", args = { "item &", }, const = false, static = false, },
            { name = "has_identified", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "try_to_sleep", rval = "void", args = { }, optional_args = { "const time_duration &", }, const = false, static = false, },
            { name = "base_comfort_value", rval = "comfort_level", args = { "const tripoint &", }, const = true, static = false, },
            { name = "sleep_spot", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "can_sleep", rval = "bool", args = { }, const = false, static = false, },
            { name = "fall_asleep", rval = "void", args = { }, const = false, static = false, },
            { name = "fall_asleep", rval = "void", args = { "const time_duration &", }, const = false, static = false, },
            { name = "wake_up", rval = "void", args = { }, const = false, static = false, },
            { name = "is_snuggling", rval = "std::string", args = { }, const = true, static = false, },
            { name = "fine_detail_vision_mod", rval = "float", args = { }, const = true, static = false, },
            { name = "rate_action_use", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_wear", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_change_side", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_eat", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_read", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_takeoff", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_reload", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_unload", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_mend", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_disassemble", rval = "hint_rating", args = { "const item &", }, const = false, static = false, },
            { name = "warmth", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "bonus_item_warmth", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_cut", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash_base", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_cut_base", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_env_resist", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_acid", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_fire", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_type", rval = "int", args = { "damage_type", "body_part", }, const = true, static = false, },
            { name = "wearing_something_on", rval = "bool", args = { "body_part", }, const = true, static = false, },
            { name = "natural_attack_restricted_on", rval = "bool", args = { "body_part", }, const = true, static = false, },
            { name = "is_wearing_shoes", rval = "bool", args = { }, optional_args = { "const side &", }, const = true, static = false, },
            { name = "is_wearing_helmet", rval = "bool", args = { }, const = true, static = false, },
            { name = "head_cloth_encumbrance", rval = "int", args = { }, const = true, static = false, },
            { name = "footwear_factor", rval = "double", args = { }, const = true, static = false, },
            { name = "shoe_type_count", rval = "int", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_wearing_power_armor", rval = "bool", args = { }, optional_args = { "bool *", }, const = true, static = false, },
            { name = "get_wind_resistance", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_pain_penalty", rval = "stat_mod", args = { }, const = true, static = false, },
            { name = "kcal_speed_penalty", rval = "int", args = { }, const = false, static = false, },
            { name = "adjust_for_focus", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "practice", rval = "void", args = { "const skill_id &", "int", }, optional_args = { "int", }, const = false, static = false, },
            { name = "assign_activity", rval = "void", args = { "const activity_id &", }, optional_args = { "int", "int", "int", "const std::string &", }, const = false, static = false, },
            { name = "assign_activity", rval = "void", args = { "const player_activity &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "has_activity", rval = "bool", args = { "const activity_id &", }, const = true, static = false, },
            { name = "cancel_activity", rval = "void", args = { }, const = false, static = false, },
            { name = "resume_backlog_activity", rval = "void", args = { }, const = false, static = false, },
            { name = "get_morale_level", rval = "int", args = { }, const = true, static = false, },
            { name = "add_morale", rval = "void", args = { "morale_type", "int", }, optional_args = { "int", "const time_duration &", "const time_duration &", "bool", "const itype *", }, const = false, static = false, },
            { name = "has_morale", rval = "int", args = { "morale_type", }, const = true, static = false, },
            { name = "rem_morale", rval = "void", args = { "morale_type", }, optional_args = { "const itype *", }, const = false, static = false, },
            { name = "clear_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "has_morale_to_read", rval = "bool", args = { }, const = true, static = false, },
            { name = "check_and_recover_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "on_worn_item_transform", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "weapname", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "power_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "speed_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "all_items_with_flag", rval = "std::vector< const item * >", args = { "const std::string &", }, const = true, static = false, },
            { name = "process_active_items", rval = "void", args = { }, const = false, static = false, },
            { name = "reduce_charges", rval = "item", args = { "int", "long", }, const = false, static = false, },
            { name = "reduce_charges", rval = "item", args = { "item *", "long", }, const = false, static = false, },
            { name = "invlet_to_position", rval = "int", args = { "long", }, const = true, static = false, },
            { name = "can_interface_armor", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_combat_style", rval = "const martialart &", args = { }, const = true, static = false, },
            { name = "inv_dump", rval = "std::vector< item * >", args = { }, const = false, static = false, },
            { name = "place_corpse", rval = "void", args = { }, const = false, static = false, },
            { name = "place_corpse", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "covered_with_flag", rval = "bool", args = { "const std::string &", "const body_part_set &", }, const = true, static = false, },
            { name = "is_waterproof", rval = "bool", args = { "const body_part_set &", }, const = true, static = false, },
            { name = "use_amount", rval = "std::list< item >", args = { "itype_id", "int", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "use_charges_if_avail", rval = "bool", args = { "const itype_id &", "long", }, const = false, static = false, },
            { name = "use_charges", rval = "std::list< item >", args = { "const itype_id &", "long", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "has_charges", rval = "bool", args = { "const itype_id &", "long", }, optional_args = { "const std::function< bool(const item &)> &", }, const = true, static = false, },
            { name = "amount_worn", rval = "int", args = { "const itype_id &", }, const = true, static = false, },
            { name = "leak_level", rval = "int", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_item_with_flag", rval = "bool", args = { "const std::string &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "has_mission_item", rval = "bool", args = { "int", }, const = true, static = false, },
            { name = "has_gun_for_ammo", rval = "bool", args = { "const ammotype &", }, const = true, static = false, },
            { name = "has_magazine_for_ammo", rval = "bool", args = { "const ammotype &", }, const = true, static = false, },
            { name = "has_weapon", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_recipe", rval = "int", args = { "const recipe *", "const inventory &", "const std::vector< npc *> &", }, const = true, static = false, },
            { name = "knows_recipe", rval = "bool", args = { "const recipe *", }, const = true, static = false, },
            { name = "learn_recipe", rval = "void", args = { "const recipe *", }, const = false, static = false, },
            { name = "exceeds_recipe_requirements", rval = "int", args = { "const recipe &", }, const = true, static = false, },
            { name = "has_recipe_requirements", rval = "bool", args = { "const recipe &", }, const = true, static = false, },
            { name = "can_decomp_learn", rval = "bool", args = { "const recipe &", }, const = true, static = false, },
            { name = "studied_all_recipes", rval = "bool", args = { "const itype &", }, const = true, static = false, },
            { name = "get_learned_recipes", rval = "const recipe_subset &", args = { }, const = true, static = false, },
            { name = "get_recipes_from_books", rval = "const recipe_subset", args = { "const inventory &", }, const = true, static = false, },
            { name = "get_available_recipes", rval = "const recipe_subset", args = { "const inventory &", }, optional_args = { "const std::vector< npc *> *", }, const = true, static = false, },
            { name = "get_books_for_recipe", rval = "const std::set< itype_id >", args = { "const inventory &", "const recipe *", }, const = true, static = false, },
            { name = "morale_crafting_speed_multiplier", rval = "float", args = { "const recipe &", }, const = true, static = false, },
            { name = "lighting_craft_speed_multiplier", rval = "float", args = { "const recipe &", }, const = true, static = false, },
            { name = "crafting_speed_multiplier", rval = "float", args = { "const recipe &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "crafting_speed_multiplier", rval = "float", args = { "const item &", "const tripoint &", }, const = true, static = false, },
            { name = "available_assistant_count", rval = "int", args = { "const recipe &", }, const = true, static = false, },
            { name = "base_time_to_craft", rval = "int", args = { "const recipe &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "expected_time_to_craft", rval = "int", args = { "const recipe &", }, optional_args = { "int", "bool", }, const = true, static = false, },
            { name = "get_eligible_containers_for_crafting", rval = "std::vector< const item * >", args = { }, const = true, static = false, },
            { name = "check_eligible_containers_for_crafting", rval = "bool", args = { "const recipe &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "has_morale_to_craft", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_make", rval = "bool", args = { "const recipe *", }, optional_args = { "int", }, const = false, static = false, },
            { name = "making_would_work", rval = "bool", args = { "const recipe_id &", "int", }, const = false, static = false, },
            { name = "craft", rval = "void", args = { }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "recraft", rval = "void", args = { }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "long_craft", rval = "void", args = { }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "make_craft", rval = "void", args = { "const recipe_id &", "int", }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "make_all_craft", rval = "void", args = { "const recipe_id &", "int", }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "start_craft", rval = "void", args = { "craft_command &", "const tripoint &", }, const = false, static = false, },
            { name = "complete_craft", rval = "void", args = { "item &", }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "can_continue_craft", rval = "bool", args = { "const item &", }, const = false, static = false, },
            { name = "get_crafting_helpers", rval = "std::vector< npc * >", args = { }, const = true, static = false, },
            { name = "get_num_crafting_helpers", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "craft_skill_gain", rval = "void", args = { "const item &", "const int &", }, const = false, static = false, },
            { name = "can_disassemble", rval = "ret_val< bool >", args = { "const item &", "const inventory &", }, const = true, static = false, },
            { name = "disassemble", rval = "bool", args = { }, const = false, static = false, },
            { name = "disassemble", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "disassemble", rval = "bool", args = { "item &", "int", "bool", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "disassemble_all", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "complete_disassemble", rval = "void", args = { }, const = false, static = false, },
            { name = "complete_disassemble", rval = "void", args = { "int", "const tripoint &", "bool", "const recipe &", }, const = false, static = false, },
            { name = "crafting_inventory", rval = "const inventory &", args = { }, const = false, static = false, },
            { name = "invalidate_crafting_inventory", rval = "void", args = { }, const = false, static = false, },
            { name = "select_item_component", rval = "comp_selection< item_comp >", args = { "const std::vector< item_comp > &", "int", "inventory &", }, optional_args = { "bool", "const std::function< bool(const item &)> &", "bool", }, const = false, static = false, },
            { name = "consume_items", rval = "std::list< item >", args = { "const comp_selection< item_comp > &", "int", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "consume_items", rval = "std::list< item >", args = { "map &", "const comp_selection< item_comp > &", "int", }, optional_args = { "const std::function< bool(const item &)> &", "tripoint", "int", }, const = false, static = false, },
            { name = "consume_items", rval = "std::list< item >", args = { "const std::vector< item_comp > &", }, optional_args = { "int", "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "select_tool_component", rval = "comp_selection< tool_comp >", args = { "const std::vector< tool_comp > &", "int", "inventory &", }, optional_args = { "const std::string &", "bool", "bool", }, const = false, static = false, },
            { name = "consume_tools", rval = "void", args = { "const comp_selection< tool_comp > &", "int", }, const = false, static = false, },
            { name = "consume_tools", rval = "void", args = { "map &", "const comp_selection< tool_comp > &", "int", }, optional_args = { "tripoint", "int", }, const = false, static = false, },
            { name = "consume_tools", rval = "void", args = { "const std::vector< tool_comp > &", }, optional_args = { "int", "const std::string &", }, const = false, static = false, },
            { name = "set_destination", rval = "void", args = { "const std::vector< tripoint > &", }, optional_args = { "const player_activity &", }, const = false, static = false, },
            { name = "clear_destination", rval = "void", args = { }, const = false, static = false, },
            { name = "has_destination", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_destination_activity", rval = "bool", args = { }, const = true, static = false, },
            { name = "start_destination_activity", rval = "void", args = { }, const = false, static = false, },
            { name = "get_auto_move_route", rval = "std::vector< tripoint > &", args = { }, const = false, static = false, },
            { name = "get_next_auto_move_direction", rval = "action_id", args = { }, const = false, static = false, },
            { name = "defer_move", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "shift_destination", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "grab", rval = "void", args = { "object_type", }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_grab_type", rval = "object_type", args = { }, const = true, static = false, },
            { name = "start_hauling", rval = "void", args = { }, const = false, static = false, },
            { name = "stop_hauling", rval = "void", args = { }, const = false, static = false, },
            { name = "is_hauling", rval = "bool", args = { }, const = true, static = false, },
            { name = "global_square_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "global_sm_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "global_omt_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "posx", rval = "int", args = { }, const = true, static = false, },
            { name = "posy", rval = "int", args = { }, const = true, static = false, },
            { name = "posz", rval = "int", args = { }, const = true, static = false, },
            { name = "setx", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "sety", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "setz", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "setpos", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "temp_equalizer", rval = "void", args = { "body_part", "body_part", }, const = false, static = false, },
            { name = "make_craft_with_command", rval = "void", args = { "const recipe_id &", "int", }, optional_args = { "bool", "const tripoint &", }, const = false, static = false, },
            { name = "get_used_bionics_slots", rval = "int", args = { "const body_part", }, const = true, static = false, },
            { name = "get_total_bionics_slots", rval = "int", args = { "const body_part", }, const = true, static = false, },
            { name = "get_free_bionics_slots", rval = "int", args = { "const body_part", }, const = true, static = false, },
            { name = "bionic_installation_issues", rval = "std::map< body_part, int >", args = { "const bionic_id &", }, const = false, static = false, },
            { name = "dump_memorial", rval = "std::string", args = { }, const = true, static = false, },
            { name = "add_memorial_log", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "load_memorial_file", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "mod_stat", rval = "void", args = { "const std::string &", "float", }, const = false, static = false, },
            { name = "getID", rval = "int", args = { }, const = true, static = false, },
            { name = "setID", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "is_underwater", rval = "bool", args = { }, const = true, static = false, },
            { name = "set_underwater", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "is_hallucination", rval = "bool", args = { }, const = true, static = false, },
            { name = "environmental_revert_effect", rval = "void", args = { }, const = false, static = false, },
            { name = "is_invisible", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_deaf", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_hear", rval = "bool", args = { "const tripoint &", "const int", }, const = true, static = false, },
            { name = "hearing_ability", rval = "float", args = { }, const = true, static = false, },
            { name = "visibility", rval = "int", args = { }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "get_size", rval = "m_size", args = { }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { }, const = true, static = false, },
            { name = "get_stamina_max", rval = "int", args = { }, const = true, static = false, },
            { name = "burn_move_stamina", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "knows_trap", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "add_known_trap", rval = "void", args = { "const tripoint &", "const trap &", }, const = false, static = false, },
            { name = "search_surroundings", rval = "void", args = { }, const = false, static = false, },
            { name = "do_skill_rust", rval = "void", args = { }, const = false, static = false, },
            { name = "get_overlay_ids", rval = "std::vector< std::string >", args = { }, const = true, static = false, },
            { name = "spores", rval = "void", args = { }, const = false, static = false, },
            { name = "blossoms", rval = "void", args = { }, const = false, static = false, },
            { name = "get_active_missions", rval = "std::vector< mission * >", args = { }, const = true, static = false, },
            { name = "get_completed_missions", rval = "std::vector< mission * >", args = { }, const = true, static = false, },
            { name = "get_failed_missions", rval = "std::vector< mission * >", args = { }, const = true, static = false, },
            { name = "get_active_mission", rval = "mission *", args = { }, const = true, static = false, },
            { name = "get_active_mission_target", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "set_active_mission", rval = "void", args = { "mission &", }, const = false, static = false, },
            { name = "on_mission_assignment", rval = "void", args = { "mission &", }, const = false, static = false, },
            { name = "on_mission_finished", rval = "void", args = { "mission &", }, const = false, static = false, },
            { name = "on_mutation_gain", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "on_mutation_loss", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "on_stat_change", rval = "void", args = { "const std::string &", "int", }, const = false, static = false, },
            { name = "on_item_wear", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_item_takeoff", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_worn_item_washed", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_effect_int_change", rval = "void", args = { "const efftype_id &", "int", }, optional_args = { "body_part", }, const = false, static = false, },
            { name = "print_encumbrance", rval = "void", args = { "const catacurses::window &", }, optional_args = { "int", "item *", }, const = true, static = false, },
            { name = "print_health", rval = "void", args = { }, const = true, static = false, },
            { name = "query_yn", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_enough_charges", rval = "bool", args = { "const item &", "bool", }, const = true, static = false, },
            { name = "get_pathfinding_settings", rval = "const pathfinding_settings &", args = { }, const = true, static = false, },
            { name = "get_path_avoid", rval = "std::set< tripoint >", args = { }, const = true, static = false, },
            { name = "disarm", rval = "void", args = { "npc &", }, const = false, static = false, },
            { name = "steal", rval = "void", args = { "npc &", }, const = false, static = false, },
            { name = "get_targeting_data", rval = "const targeting_data &", args = { }, const = false, static = false, },
            { name = "set_targeting_data", rval = "void", args = { "const targeting_data &", }, const = false, static = false, },
            { name = "thirst_speed_penalty", rval = "int", args = { "int", }, const = false, static = true, },
            --{ name = "operator()", rval = "", args = { "const string_id< profession > &", "const string_id< profession > &", }, const = false, static = false, },
            --{ name = "operator()", rval = "", args = { "const scenario *", "const scenario *", }, const = false, static = false, },
        }
    },
    player_activity = {
        cpp_name = "player_activity",
        new = {
            { },
            { "activity_id", },
            { "activity_id", "int", },
            { "activity_id", "int", "int", },
            { "activity_id", "int", "int", "int", },
            { "activity_id", "int", "int", "int", "const std::string &", },
            --{ "player_activity &&", },
            { "const player_activity &", },
        },
        attributes = {
            moves_total = { type = "int", writable = true, reference = false, static = false, },
            moves_left = { type = "int", writable = true, reference = false, static = false, },
            index = { type = "int", writable = true, reference = false, static = false, },
            position = { type = "int", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            targets = { type = "std::vector< item_location >", writable = true, reference = false, static = false, },
            values = { type = "std::vector< int >", writable = true, reference = false, static = false, },
            str_values = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            coords = { type = "std::vector< tripoint >", writable = true, reference = false, static = false, },
            monsters = { type = "std::vector< std::weak_ptr< monster > >", writable = true, reference = false, static = false, },
            placement = { type = "tripoint", writable = true, reference = false, static = false, },
            auto_resume = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "player_activity &&", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "const player_activity &", }, const = false, static = false, },
            --{ name = "operator bool", rval = "", args = { }, const = true, static = false, },
            { name = "is_null", rval = "bool", args = { }, const = true, static = false, },
            { name = "set_to_null", rval = "void", args = { }, const = false, static = false, },
            { name = "id", rval = "const activity_id&", args = { }, const = true, static = false, },
            { name = "rooted", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_stop_phrase", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_value", rval = "int", args = { "size_t", }, optional_args = { "int", }, const = true, static = false, },
            { name = "get_str_value", rval = "std::string", args = { "size_t", }, optional_args = { "const std::string &", }, const = true, static = false, },
            { name = "is_suspendable", rval = "bool", args = { }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "deserialize_legacy_type", rval = "void", args = { "int", "activity_id &", }, const = false, static = false, },
            { name = "do_turn", rval = "void", args = { "player &", }, const = false, static = false, },
            { name = "can_resume_with", rval = "bool", args = { "const player_activity &", "const Character &", }, const = true, static = false, },
            { name = "is_distraction_ignored", rval = "bool", args = { "distraction_type", }, const = true, static = false, },
            { name = "ignore_distraction", rval = "void", args = { "distraction_type", }, const = false, static = false, },
            { name = "allow_distractions", rval = "void", args = { }, const = false, static = false, },
            { name = "inherit_distractions", rval = "void", args = { "const player_activity &", }, const = false, static = false, },
        }
    },
    point = {
        cpp_name = "point",
        new = {
            { },
            { "int", "int", },
        },
        attributes = {
            x = { type = "int", writable = true, reference = false, static = false, },
            y = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator+", rval = "", args = { "const point &", }, const = true, static = false, },
            --{ name = "operator+=", rval = "", args = { "const point &", }, const = false, static = false, },
            --{ name = "operator-", rval = "", args = { "const point &", }, const = true, static = false, },
            --{ name = "operator-=", rval = "", args = { "const point &", }, const = false, static = false, },
        }
    },
    quality = {
        cpp_name = "quality",
        string_id = "quality_id",
        new = {
        },
        attributes = {
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            id = { type = "quality_id", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            usages = { type = "std::vector< std::pair< int, std::string > >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "load_static", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
        }
    },
    recipe = {
        cpp_name = "recipe",
        string_id = "recipe_id",
        new = {
            { },
        },
        attributes = {
            obsolete = { type = "bool", writable = true, reference = false, static = false, },
            category = { type = "std::string", writable = true, reference = false, static = false, },
            subcategory = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            time = { type = "int", writable = true, reference = false, static = false, },
            difficulty = { type = "int", writable = true, reference = false, static = false, },
            never_learn = { type = "bool", writable = true, reference = false, static = false, },
            byproducts = { type = "std::map< itype_id, int >", writable = true, reference = false, static = false, },
            skill_used = { type = "skill_id", writable = true, reference = false, static = false, },
            required_skills = { type = "std::map< skill_id, int >", writable = true, reference = false, static = false, },
            autolearn_requirements = { type = "std::map< skill_id, int >", writable = true, reference = false, static = false, },
            learn_by_disassembly = { type = "std::map< skill_id, int >", writable = true, reference = false, static = false, },
            booksets = { type = "std::map< itype_id, int >", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator bool", rval = "", args = { }, const = true, static = false, },
            { name = "result", rval = "const itype_id&", args = { }, const = true, static = false, },
            { name = "requirements", rval = "const requirement_data&", args = { }, const = true, static = false, },
            { name = "ident", rval = "const recipe_id&", args = { }, const = true, static = false, },
            { name = "is_blacklisted", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_component_filter", rval = "const std::function< bool(const item &)>", args = { }, const = true, static = false, },
            { name = "disassembly_requirements", rval = "requirement_data", args = { }, const = true, static = false, },
            { name = "result_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "required_skills_string", rval = "std::string", args = { "const Character *", "bool", }, const = true, static = false, },
            { name = "required_skills_string", rval = "std::string", args = { "const Character *", }, const = true, static = false, },
            { name = "batch_savings_string", rval = "std::string", args = { }, const = true, static = false, },
            { name = "create_result", rval = "item", args = { }, const = true, static = false, },
            { name = "create_results", rval = "std::vector< item >", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "create_byproducts", rval = "std::vector< item >", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "has_byproducts", rval = "bool", args = { }, const = true, static = false, },
            { name = "batch_time", rval = "int", args = { "int", "float", "size_t", }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "is_reversible", rval = "bool", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "finalize", rval = "void", args = { }, const = false, static = false, },
            { name = "get_consistency_error", rval = "std::string", args = { }, const = true, static = false, },
            { name = "is_blueprint", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_blueprint", rval = "std::string", args = { }, const = true, static = false, },
            { name = "hot_result", rval = "bool", args = { }, const = true, static = false, },
        }
    },
    Skill = {
        cpp_name = "Skill",
        string_id = "skill_id",
        new = {
            { },
            { "skill_id", "std::string", "std::string", "std::set< std::string >", },
        },
        attributes = {
            skills = { type = "std::vector< Skill >", writable = true, reference = false, static = true, },
        },
        functions = {
            { name = "load_skill", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "from_legacy_int", rval = "skill_id", args = { "int", }, const = false, static = true, },
            { name = "random_skill", rval = "skill_id", args = { }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            --{ name = "get_skills_sorted_by", rval = "std::vector< const Skill * >", args = { "std::function< bool(const Skill &, const Skill &)>", }, const = false, static = true, },
            { name = "ident", rval = "const skill_id&", args = { }, const = true, static = false, },
            { name = "name", rval = "const std::string&", args = { }, const = true, static = false, },
            { name = "description", rval = "const std::string&", args = { }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "const Skill &", }, const = true, static = false, },
            --{ name = "operator<", rval = "", args = { "const Skill &", }, const = true, static = false, },
            --{ name = "operator!=", rval = "", args = { "const Skill &", }, const = true, static = false, },
            { name = "is_combat_skill", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_contextual_skill", rval = "bool", args = { }, const = true, static = false, },
        }
    },
    species_type = {
        cpp_name = "species_type",
        string_id = "species_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "species_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            flags = { type = "enum_bitset< m_flag >", writable = true, reference = false, static = false, },
            anger = { type = "enum_bitset< mon_trigger >", writable = true, reference = false, static = false, },
            fear = { type = "enum_bitset< mon_trigger >", writable = true, reference = false, static = false, },
            placate = { type = "enum_bitset< mon_trigger >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
        }
    },
    start_location = {
        cpp_name = "start_location",
        string_id = "start_location_id",
        new = {
            { },
        },
        attributes = {
        },
        functions = {
            { name = "ident", rval = "const string_id< start_location > &", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "target", rval = "std::string", args = { }, const = true, static = false, },
            { name = "flags", rval = "const std::set< std::string > &", args = { }, const = true, static = false, },
            { name = "find_player_initial_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "prepare_map", rval = "void", args = { "const tripoint &", }, const = true, static = false, },
            { name = "place_player", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "burn", rval = "void", args = { "const tripoint &", "const size_t", "const int", }, const = true, static = false, },
            { name = "add_map_special", rval = "void", args = { "const tripoint &", "const std::string &", }, const = true, static = false, },
            { name = "handle_heli_crash", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "surround_with_monsters", rval = "void", args = { "const tripoint &", "const mongroup_id &", "float", }, const = true, static = false, },
            { name = "load_location", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "get_all", rval = "const std::vector< start_location > &", args = { }, const = false, static = true, },
        }
    },
    stats = {
        cpp_name = "stats",
        new = {
        },
        attributes = {
            squares_walked = { type = "int", writable = true, reference = false, static = false, },
            damage_taken = { type = "int", writable = true, reference = false, static = false, },
            damage_healed = { type = "int", writable = true, reference = false, static = false, },
            headshots = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    ter_t = {
        cpp_name = "ter_t",
        string_id = "ter_str_id",
        int_id = "ter_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "ter_str_id", writable = true, reference = false, static = false, },
            open = { type = "ter_str_id", writable = true, reference = false, static = false, },
            close = { type = "ter_str_id", writable = true, reference = false, static = false, },
            trap_id_str = { type = "std::string", writable = true, reference = false, static = false, },
            transforms_into = { type = "ter_str_id", writable = true, reference = false, static = false, },
            roof = { type = "ter_str_id", writable = true, reference = false, static = false, },
            trap = { type = "trap_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "check", rval = "void", args = { }, const = true, static = false, },
            { name = "count", rval = "size_t", args = { }, const = false, static = true, },
        }
    },
    time_duration = {
        cpp_name = "time_duration",
        new = {
            { },
            { "const std::nullptr_t", },
        },
        attributes = {
        },
        functions = {
            --{ name = "from_turns", rval = "time_duration", args = { "typename T", "const T", }, const = false, static = true, },
            --{ name = "from_minutes", rval = "time_duration", args = { "typename T", "const T", }, const = false, static = true, },
            --{ name = "from_hours", rval = "time_duration", args = { "typename T", "const T", }, const = false, static = true, },
            --{ name = "from_days", rval = "time_duration", args = { "typename T", "const T", }, const = false, static = true, },
            --{ name = "operator<", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator<=", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator>", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator>=", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator!=", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "read_from_json_string", rval = "time_duration", args = { "JsonIn &", }, const = false, static = true, },
        }
    },
    time_point = {
        cpp_name = "time_point",
        new = {
            { },
            { "const int", },
            { "const calendar &", },
            { "const std::nullptr_t", },
        },
        attributes = {
        },
        functions = {
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "from_turn", rval = "time_point", args = { "const int", }, const = false, static = true, },
        }
    },
    trap = {
        cpp_name = "trap",
        string_id = "trap_str_id",
        int_id = "trap_id",
        new = {
        },
        attributes = {
            id = { type = "trap_str_id", writable = true, reference = false, static = false, },
            loadid = { type = "trap_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            sym = { type = "long", writable = true, reference = false, static = false, },
            color = { type = "nc_color", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "is_funnel", rval = "bool", args = { }, const = true, static = false, },
            { name = "funnel_turns_per_charge", rval = "double", args = { "double", }, const = true, static = false, },
            { name = "get_funnels", rval = "const std::vector< const trap * > &", args = { }, const = false, static = true, },
            { name = "load_trap", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "finalize", rval = "void", args = { }, const = false, static = true, },
            { name = "check_consistency", rval = "void", args = { }, const = false, static = true, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_visibility", rval = "int", args = { }, const = true, static = false, },
            { name = "get_avoidance", rval = "int", args = { }, const = true, static = false, },
            { name = "get_difficulty", rval = "int", args = { }, const = true, static = false, },
            { name = "is_benign", rval = "bool", args = { }, const = true, static = false, },
            { name = "detect_trap", rval = "bool", args = { "const tripoint &", "const player &", }, const = true, static = false, },
            { name = "can_see", rval = "bool", args = { "const tripoint &", "const player &", }, const = true, static = false, },
            { name = "trigger", rval = "void", args = { "const tripoint &", "Creature *", }, const = true, static = false, },
            { name = "triggered_by_item", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "on_disarmed", rval = "void", args = { "map &", "const tripoint &", }, const = true, static = false, },
            { name = "is_3x3_trap", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_null", rval = "bool", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "count", rval = "size_t", args = { }, const = false, static = true, },
        }
    },
    tripoint = {
        cpp_name = "tripoint",
        new = {
            { },
            { "int", "int", "int", },
            { "const point &", "int", },
        },
        attributes = {
            x = { type = "int", writable = true, reference = false, static = false, },
            y = { type = "int", writable = true, reference = false, static = false, },
            z = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator+", rval = "", args = { "const tripoint &", }, const = true, static = false, },
            --{ name = "operator-", rval = "", args = { "const tripoint &", }, const = true, static = false, },
            --{ name = "operator+=", rval = "", args = { "const tripoint &", }, const = false, static = false, },
            --{ name = "operator-", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator+", rval = "", args = { "const point &", }, const = true, static = false, },
            --{ name = "operator-", rval = "", args = { "const point &", }, const = true, static = false, },
            --{ name = "operator+=", rval = "", args = { "const point &", }, const = false, static = false, },
            --{ name = "operator-=", rval = "", args = { "const point &", }, const = false, static = false, },
            --{ name = "operator-=", rval = "", args = { "const tripoint &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    uilist = {
        cpp_name = "uilist",
        new = {
            { },
            { "const std::string &", },
            { "const std::string &", "const std::vector< uilist_entry > &", },
            { "const std::string &", "const std::vector< std::string > &", },
            { "const std::string &", "std::initializer_list< const char *const >", },
            { "int", "int", "int", "const std::string &", "const std::vector< uilist_entry > &", },
            { "int", "int", "int", "const std::string &", "const std::vector< std::string > &", },
            { "int", "int", "int", "const std::string &", "std::initializer_list< const char *const >", },
        },
        attributes = {
            ret = { type = "int", writable = true, reference = false, static = false, },
            selected = { type = "int", writable = true, reference = false, static = false, },
            keypress = { type = "int", writable = true, reference = false, static = false, },
            text = { type = "std::string", writable = true, reference = false, static = false, },
            textformatted = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            input_category = { type = "std::string", writable = true, reference = false, static = false, },
            additional_actions = { type = "std::vector< std::pair< std::string, std::string > >", writable = true, reference = false, static = false, },
            textwidth = { type = "int", writable = true, reference = false, static = false, },
            textalign = { type = "int", writable = true, reference = false, static = false, },
            max_entry_len = { type = "int", writable = true, reference = false, static = false, },
            max_column_len = { type = "int", writable = true, reference = false, static = false, },
            title = { type = "std::string", writable = true, reference = false, static = false, },
            entries = { type = "std::vector< uilist_entry >", writable = true, reference = false, static = false, },
            keymap = { type = "std::map< int, int >", writable = true, reference = false, static = false, },
            desc_enabled = { type = "bool", writable = true, reference = false, static = false, },
            desc_lines = { type = "int", writable = true, reference = false, static = false, },
            border = { type = "bool", writable = true, reference = false, static = false, },
            filtering = { type = "bool", writable = true, reference = false, static = false, },
            filtering_nocase = { type = "bool", writable = true, reference = false, static = false, },
            border_color = { type = "nc_color", writable = true, reference = false, static = false, },
            text_color = { type = "nc_color", writable = true, reference = false, static = false, },
            title_color = { type = "nc_color", writable = true, reference = false, static = false, },
            hilight_color = { type = "nc_color", writable = true, reference = false, static = false, },
            hotkey_color = { type = "nc_color", writable = true, reference = false, static = false, },
            disabled_color = { type = "nc_color", writable = true, reference = false, static = false, },
            pad_left = { type = "int", writable = true, reference = false, static = false, },
            pad_right = { type = "int", writable = true, reference = false, static = false, },
            allow_disabled = { type = "bool", writable = true, reference = false, static = false, },
            allow_anykey = { type = "bool", writable = true, reference = false, static = false, },
            allow_cancel = { type = "bool", writable = true, reference = false, static = false, },
            hilight_disabled = { type = "bool", writable = true, reference = false, static = false, },
            hilight_full = { type = "bool", writable = true, reference = false, static = false, },
            vshift = { type = "int", writable = true, reference = false, static = false, },
            vmax = { type = "int", writable = true, reference = false, static = false, },
            filter = { type = "std::string", writable = true, reference = false, static = false, },
            fentries = { type = "std::vector< int >", writable = true, reference = false, static = false, },
            fselected = { type = "int", writable = true, reference = false, static = false, },
            centered_scroll = { type = "bool", writable = true, reference = false, static = false, },
            scrollbar_auto = { type = "bool", writable = true, reference = false, static = false, },
            scrollbar_nopage_color = { type = "nc_color", writable = true, reference = false, static = false, },
            scrollbar_page_color = { type = "nc_color", writable = true, reference = false, static = false, },
            scrollbar_side = { type = "int", writable = true, reference = false, static = false, },
            callback = { type = "uilist_callback", writable = true, reference = true, static = false, },
        },
        functions = {
            { name = "init", rval = "void", args = { }, const = false, static = false, },
            { name = "setup", rval = "void", args = { }, const = false, static = false, },
            { name = "show", rval = "void", args = { }, const = false, static = false, },
            { name = "scrollby", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "scroll_amount_from_key", rval = "int", args = { "const int", }, const = false, static = false, },
            { name = "scroll_amount_from_action", rval = "int", args = { "const std::string &", }, const = false, static = false, },
            { name = "query", rval = "void", args = { }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "filterlist", rval = "void", args = { }, const = false, static = false, },
            { name = "apply_scrollbar", rval = "void", args = { }, const = false, static = false, },
            { name = "inputfilter", rval = "std::string", args = { }, const = false, static = false, },
            { name = "refresh", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "redraw", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "addentry", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "addentry", rval = "void", args = { "int", "bool", "int", "const std::string &", }, const = false, static = false, },
            --{ name = "addentry", rval = "void", args = { "typename K", "typename ...", "const int", "const bool", "K", "const char *const", "Args &&...", }, const = false, static = false, },
            { name = "addentry_desc", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "addentry_desc", rval = "void", args = { "int", "bool", "int", "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "addentry_col", rval = "void", args = { "int", "bool", "int", "const std::string &", "const std::string &", }, optional_args = { "const std::string &", }, const = false, static = false, },
            { name = "settext", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = false, },
            { name = "_op_int", cpp_name = "operator int", rval = "", args = { }, const = true, static = false, },
        }
    },
    w_point = {
        cpp_name = "w_point",
        new = {
        },
        attributes = {
            temperature = { type = "double", writable = true, reference = false, static = false, },
            humidity = { type = "double", writable = true, reference = false, static = false, },
            pressure = { type = "double", writable = true, reference = false, static = false, },
            windpower = { type = "double", writable = true, reference = false, static = false, },
            wind_desc = { type = "std::string", writable = true, reference = false, static = false, },
            winddirection = { type = "int", writable = true, reference = false, static = false, },
            acidic = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
        }
    },
}
