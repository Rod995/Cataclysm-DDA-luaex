classes = {
    activity_type = {
        cpp_name = "activity_type",
        string_id = "activity_id",
        new = {
        },
        attributes = {
        },
        functions = {
            { name = "id", rval = "const activity_id&", args = { }, const = true, static = false, },
            { name = "rooted", rval = "bool", args = { }, const = true, static = false, },
            { name = "suspendable", rval = "bool", args = { }, const = true, static = false, },
            { name = "stop_phrase", rval = "std::string", args = { }, const = true, static = false, },
            { name = "based_on", rval = "based_on_type", args = { }, const = true, static = false, },
            { name = "no_resume", rval = "bool", args = { }, const = true, static = false, },
            { name = "will_refuel_fires", rval = "bool", args = { }, const = true, static = false, },
            { name = "call_do_turn", rval = "void", args = { "player_activity *", "player *", }, const = true, static = false, },
            { name = "call_finish", rval = "bool", args = { "player_activity *", "player *", }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "check_consistency", rval = "void", args = { }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
        }
    },
    ammunition_type = {
        cpp_name = "ammunition_type",
        string_id = "ammotype",
        new = {
            { },
            { "std::string", },
        },
        attributes = {
        },
        functions = {
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "default_ammotype", rval = "const itype_id&", args = { }, const = true, static = false, },
        }
    },
    bionic = {
        cpp_name = "bionic",
        new = {
            { },
            { "bionic_id", "char", },
        },
        attributes = {
            id = { type = "bionic_id", writable = true, reference = false, static = false, },
            charge = { type = "int", writable = true, reference = false, static = false, },
            invlet = { type = "char", writable = true, reference = false, static = false, },
            powered = { type = "bool", writable = true, reference = false, static = false, },
            ammo_loaded = { type = "itype_id", writable = true, reference = false, static = false, },
            ammo_count = { type = "unsigned int", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "info", rval = "const bionic_data&", args = { }, const = true, static = false, },
            { name = "get_quality", rval = "int", args = { "const quality_id &", }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    bionic_data = {
        cpp_name = "bionic_data",
        string_id = "bionic_id",
        new = {
            { },
        },
        attributes = {
            name = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            power_activate = { type = "int", writable = true, reference = false, static = false, },
            power_deactivate = { type = "int", writable = true, reference = false, static = false, },
            power_over_time = { type = "int", writable = true, reference = false, static = false, },
            charge_time = { type = "int", writable = true, reference = false, static = false, },
            capacity = { type = "int", writable = true, reference = false, static = false, },
            npc_usable = { type = "bool", writable = true, reference = false, static = false, },
            faulty = { type = "bool", writable = true, reference = false, static = false, },
            power_source = { type = "bool", writable = true, reference = false, static = false, },
            activated = { type = "bool", writable = true, reference = false, static = false, },
            toggled = { type = "bool", writable = true, reference = false, static = false, },
            gun_bionic = { type = "bool", writable = true, reference = false, static = false, },
            weapon_bionic = { type = "bool", writable = true, reference = false, static = false, },
            armor_interface = { type = "bool", writable = true, reference = false, static = false, },
            sleep_friendly = { type = "bool", writable = true, reference = false, static = false, },
            occupied_bodyparts = { type = "std::map< body_part, size_t >", writable = true, reference = false, static = false, },
            fake_item = { type = "std::string", writable = true, reference = false, static = false, },
            canceled_mutations = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            included_bionics = { type = "std::vector< bionic_id >", writable = true, reference = false, static = false, },
            upgraded_bionic = { type = "bionic_id", writable = true, reference = false, static = false, },
            available_upgrades = { type = "std::set< bionic_id >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "is_included", rval = "bool", args = { "const bionic_id &", }, const = true, static = false, },
        }
    },
    calendar = {
        cpp_name = "calendar",
        new = {
            { },
            { "const calendar &", },
            { "int", "int", "int", "season_type", "int", },
            { "int", },
        },
        attributes = {
            INDEFINITELY_LONG = { type = "int", writable = false, reference = false, static = true, },
            start = { type = "calendar", writable = true, reference = false, static = true, },
            turn = { type = "calendar", writable = true, reference = false, static = true, },
            initial_season = { type = "season_type", writable = true, reference = false, static = true, },
            before_time_starts = { type = "time_point", writable = false, reference = false, static = true, },
            time_of_cataclysm = { type = "time_point", writable = false, reference = false, static = true, },
        },
        functions = {
            { name = "_op_int", cpp_name = "operator int", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator=", rval = "", args = { "const calendar &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "int", }, const = false, static = false, },
            --{ name = "operator-=", rval = "", args = { "const calendar &", }, const = false, static = false, },
            --{ name = "operator-=", rval = "", args = { "int", }, const = false, static = false, },
            --{ name = "operator+=", rval = "", args = { "const calendar &", }, const = false, static = false, },
            --{ name = "operator+=", rval = "", args = { "int", }, const = false, static = false, },
            --{ name = "operator-", rval = "", args = { "const calendar &", }, const = true, static = false, },
            --{ name = "operator-", rval = "", args = { "int", }, const = true, static = false, },
            --{ name = "operator+", rval = "", args = { "const calendar &", }, const = true, static = false, },
            --{ name = "operator+", rval = "", args = { "int", }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "int", }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "const calendar &", }, const = true, static = false, },
            { name = "increment", rval = "void", args = { }, const = false, static = false, },
            { name = "sunrise", rval = "calendar", args = { }, const = true, static = false, },
            { name = "sunset", rval = "calendar", args = { }, const = true, static = false, },
            { name = "is_night", rval = "bool", args = { }, const = true, static = false, },
            { name = "current_daylight_level", rval = "double", args = { }, const = true, static = false, },
            { name = "sunlight", rval = "float", args = { }, const = true, static = false, },
            { name = "years", rval = "int", args = { }, const = true, static = false, },
            { name = "day_of_year", rval = "int", args = { }, const = true, static = false, },
            { name = "once_every", rval = "bool", args = { "const time_duration &", }, const = false, static = true, },
            { name = "eternal_season", rval = "bool", args = { }, const = false, static = true, },
            { name = "year_length", rval = "time_duration", args = { }, const = false, static = true, },
            { name = "season_length", rval = "time_duration", args = { }, const = false, static = true, },
            { name = "season_ratio", rval = "float", args = { }, const = false, static = true, },
            { name = "season_from_default_ratio", rval = "float", args = { }, const = false, static = true, },
            { name = "name_season", rval = "const std::string", args = { "season_type", }, const = false, static = true, },
        }
    },
    Character = {
        cpp_name = "Character",
        parent = "Creature",
        new = {
        },
        attributes = {
            str_max = { type = "int", writable = true, reference = false, static = false, },
            dex_max = { type = "int", writable = true, reference = false, static = false, },
            int_max = { type = "int", writable = true, reference = false, static = false, },
            per_max = { type = "int", writable = true, reference = false, static = false, },
            str_cur = { type = "int", writable = true, reference = false, static = false, },
            dex_cur = { type = "int", writable = true, reference = false, static = false, },
            int_cur = { type = "int", writable = true, reference = false, static = false, },
            per_cur = { type = "int", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            male = { type = "bool", writable = true, reference = false, static = false, },
            worn = { type = "std::list< item >", writable = true, reference = false, static = false, },
            hp_cur = { type = "std::array< int, num_hp_parts >", writable = true, reference = false, static = false, },
            hp_max = { type = "std::array< int, num_hp_parts >", writable = true, reference = false, static = false, },
            damage_bandaged = { type = "std::array< int, num_hp_parts >", writable = true, reference = false, static = false, },
            damage_disinfected = { type = "std::array< int, num_hp_parts >", writable = true, reference = false, static = false, },
            nv_cached = { type = "bool", writable = true, reference = false, static = false, },
            inv = { type = "inventory", writable = true, reference = false, static = false, },
            last_item = { type = "itype_id", writable = true, reference = false, static = false, },
            weapon = { type = "item", writable = true, reference = false, static = false, },
            my_bionics = { type = "pimpl< bionic_collection >", writable = true, reference = false, static = false, },
            fleshy = { type = "std::vector< material_id >", writable = false, reference = false, static = true, },
        },
        functions = {
            { name = "used_weapon", rval = "const item &", args = { }, const = true, static = false, },
            { name = "used_weapon", rval = "item &", args = { }, const = false, static = false, },
            { name = "pour_into", rval = "bool", args = { "item &", "item &", }, const = false, static = false, },
            { name = "pour_into", rval = "bool", args = { "vehicle &", "item &", }, const = false, static = false, },
            { name = "bloodType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "gibType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "is_warm", rval = "bool", args = { }, const = true, static = false, },
            { name = "symbol", rval = "const std::string &", args = { }, const = true, static = false, },
            { name = "get_str", rval = "int", args = { }, const = true, static = false, },
            { name = "get_dex", rval = "int", args = { }, const = true, static = false, },
            { name = "get_per", rval = "int", args = { }, const = true, static = false, },
            { name = "get_int", rval = "int", args = { }, const = true, static = false, },
            { name = "get_str_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_dex_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_per_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_int_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_str_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_dex_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_per_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_int_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "ranged_dex_mod", rval = "int", args = { }, const = true, static = false, },
            { name = "ranged_per_mod", rval = "int", args = { }, const = true, static = false, },
            { name = "set_str_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_dex_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_per_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_int_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_str_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_dex_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_per_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_int_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_healthy", rval = "int", args = { }, const = true, static = false, },
            { name = "get_healthy_mod", rval = "int", args = { }, const = true, static = false, },
            { name = "mod_healthy", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_healthy_mod", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "set_healthy", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_healthy_mod", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_stored_kcal", rval = "int", args = { }, const = true, static = false, },
            { name = "get_healthy_kcal", rval = "int", args = { }, const = true, static = false, },
            { name = "get_kcal_percent", rval = "float", args = { }, const = true, static = false, },
            { name = "get_hunger", rval = "int", args = { }, const = true, static = false, },
            { name = "get_starvation", rval = "int", args = { }, const = true, static = false, },
            { name = "get_thirst", rval = "int", args = { }, const = true, static = false, },
            { name = "get_thirst_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "get_hunger_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "get_fatigue_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "get_fatigue", rval = "int", args = { }, const = true, static = false, },
            { name = "get_sleep_deprivation", rval = "int", args = { }, const = true, static = false, },
            { name = "mod_stored_kcal", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_stored_nutr", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_hunger", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_thirst", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_fatigue", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_sleep_deprivation", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_stored_kcal", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_hunger", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_thirst", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_fatigue", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_sleep_deprivation", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_stat", rval = "void", args = { "const std::string &", "float", }, const = false, static = false, },
            { name = "effective_dispersion", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "get_aim_types", rval = "std::vector< aim_type >", args = { "const item &", }, const = true, static = false, },
            { name = "get_fastest_sight", rval = "std::pair< int, int >", args = { "const item &", "double", }, const = true, static = false, },
            { name = "get_most_accurate_sight", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "aim_speed_skill_modifier", rval = "double", args = { "const skill_id &", }, const = true, static = false, },
            { name = "aim_speed_dex_modifier", rval = "double", args = { }, const = true, static = false, },
            { name = "aim_speed_encumbrance_modifier", rval = "double", args = { }, const = true, static = false, },
            { name = "aim_cap_from_volume", rval = "double", args = { "const item &", }, const = true, static = false, },
            { name = "aim_per_move", rval = "double", args = { "const item &", "double", }, const = true, static = false, },
            { name = "get_dodge_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_hit_base", rval = "float", args = { }, const = true, static = false, },
            { name = "update_health", rval = "void", args = { }, optional_args = { "int", }, const = false, static = false, },
            { name = "reset_bonuses", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_stats", rval = "void", args = { }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = false, },
            { name = "get_random_body_part", rval = "body_part", args = { "bool", }, const = true, static = false, },
            { name = "get_all_body_parts", rval = "std::vector< body_part >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "reset_encumbrance", rval = "void", args = { }, const = false, static = false, },
            { name = "encumb", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_weight", rval = "units::mass", args = { }, const = true, static = false, },
            { name = "get_encumbrance", rval = "std::array< encumbrance_data, num_bp >", args = { }, const = true, static = false, },
            { name = "get_encumbrance", rval = "std::array< encumbrance_data, num_bp >", args = { "const item &", }, const = true, static = false, },
            { name = "extraEncumbrance", rval = "int", args = { "const layer_level", "const int", }, const = true, static = false, },
            { name = "is_wearing_active_power_armor", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_blind", rval = "bool", args = { }, const = true, static = false, },
            { name = "exclusive_flag_coverage", rval = "body_part_set", args = { "const std::string &", }, const = true, static = false, },
            { name = "move_effects", rval = "bool", args = { "bool", }, const = false, static = false, },
            { name = "add_effect", rval = "void", args = { "const efftype_id &", "time_duration", }, optional_args = { "body_part", "bool", "int", "bool", "bool", }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "recalc_hp", rval = "void", args = { }, const = false, static = false, },
            { name = "recalc_sight_limits", rval = "void", args = { }, const = false, static = false, },
            { name = "get_vision_threshold", rval = "float", args = { "float", }, const = true, static = false, },
            { name = "random_good_trait", rval = "trait_id", args = { }, const = false, static = false, },
            { name = "random_bad_trait", rval = "trait_id", args = { }, const = false, static = false, },
            { name = "has_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_base_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_trait_flag", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "trait_by_invlet", rval = "trait_id", args = { "long", }, const = true, static = false, },
            { name = "toggle_trait", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "set_mutation", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "unset_mutation", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "body_window", rval = "hp_part", args = { "const std::string &", "bool", "bool", "int", "int", "int", "float", "float", "float", "float", "float", }, const = true, static = false, },
            { name = "limb_color", rval = "nc_color", args = { "body_part", "bool", "bool", "bool", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            { name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "mutation_effect", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "mutation_loss_effect", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "has_active_mutation", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "mutation_armor", rval = "resistances", args = { "body_part", }, const = true, static = false, },
            { name = "mutation_armor", rval = "float", args = { "body_part", "damage_type", }, const = true, static = false, },
            { name = "mutation_armor", rval = "float", args = { "body_part", "const damage_unit &", }, const = true, static = false, },
            { name = "has_bionic", rval = "bool", args = { "const bionic_id &", }, const = true, static = false, },
            { name = "has_active_bionic", rval = "bool", args = { "const bionic_id &", }, const = true, static = false, },
            { name = "is_worn", rval = "bool", args = { "const item &", }, const = true, static = false, },
            --{ name = "nearby", rval = "std::vector< item_location >", args = { "const std::function< bool(const item *, const item *)> &", }, optional_args = { "int", }, const = true, static = false, },
            --{ name = "remove_worn_items_with", rval = "std::list< item >", args = { "std::function< bool(item &)>", }, const = false, static = false, },
            { name = "i_at", rval = "item &", args = { "int", }, const = false, static = false, },
            { name = "i_at", rval = "const item &", args = { "int", }, const = true, static = false, },
            { name = "get_item_position", rval = "int", args = { "const item *", }, const = true, static = false, },
            { name = "i_add_to_container", rval = "long int", args = { "const item &", "const bool", }, const = false, static = false, },
            { name = "i_add", rval = "item &", args = { "item", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "i_rem", rval = "item", args = { "int", }, const = false, static = false, },
            { name = "i_rem", rval = "item", args = { "const item *", }, const = false, static = false, },
            { name = "i_rem_keep_contents", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "i_add_or_drop", rval = "bool", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "allocated_invlets", rval = "invlets_bitset", args = { }, const = true, static = false, },
            { name = "has_active_item", rval = "bool", args = { "const itype_id &", }, const = true, static = false, },
            { name = "remove_weapon", rval = "item", args = { }, const = false, static = false, },
            { name = "remove_mission_items", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_ammo", rval = "std::vector< const item * >", args = { "const ammotype &", }, const = true, static = false, },
            { name = "find_ammo", rval = "std::vector< item_location >", args = { "const item &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "find_reloadables", rval = "std::vector< item_location >", args = { }, const = false, static = false, },
            { name = "ammo_count_for", rval = "long", args = { "const item &", }, const = false, static = false, },
            { name = "throw_range", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "throwing_dispersion", rval = "int", args = { "const item &", }, optional_args = { "Creature *", "bool", }, const = true, static = false, },
            { name = "throw_dispersion_per_dodge", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "best_nearby_lifting_assist", rval = "int", args = { }, const = true, static = false, },
            { name = "best_nearby_lifting_assist", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "weight_carried", rval = "units::mass", args = { }, const = true, static = false, },
            { name = "volume_carried", rval = "units::volume", args = { }, const = true, static = false, },
            --{ name = "weight_carried_with_tweaks", rval = "units::mass", args = { "const item_tweaks &", }, const = true, static = false, },
            --{ name = "volume_carried_with_tweaks", rval = "units::volume", args = { "const item_tweaks &", }, const = true, static = false, },
            { name = "weight_capacity", rval = "units::mass", args = { }, const = true, static = false, },
            { name = "volume_capacity", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "volume_capacity_reduced_by", rval = "units::volume", args = { "const units::volume &", }, optional_args = { "const std::map< const item *, int > &", }, const = true, static = false, },
            { name = "can_pickVolume", rval = "bool", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "can_pickWeight", rval = "bool", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "can_use", rval = "bool", args = { "const item &", }, optional_args = { "const item &", }, const = true, static = false, },
            { name = "is_armed", rval = "bool", args = { }, const = true, static = false, },
            { name = "drop_invalid_inventory", rval = "void", args = { }, const = false, static = false, },
            { name = "has_artifact_with", rval = "bool", args = { "const art_effect_passive", }, const = true, static = false, },
            { name = "is_wearing", rval = "bool", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_wearing_on_bp", rval = "bool", args = { "const itype_id &", "body_part", }, const = true, static = false, },
            { name = "worn_with_flag", rval = "bool", args = { "const std::string &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "get_skill_level", rval = "int", args = { "const skill_id &", }, const = true, static = false, },
            { name = "get_skill_level", rval = "int", args = { "const skill_id &", "const item &", }, const = true, static = false, },
            { name = "get_all_skills", rval = "const SkillLevelMap &", args = { }, const = true, static = false, },
            { name = "get_skill_level_object", rval = "SkillLevel &", args = { "const skill_id &", }, const = false, static = false, },
            { name = "get_skill_level_object", rval = "const SkillLevel &", args = { "const skill_id &", }, const = true, static = false, },
            { name = "set_skill_level", rval = "void", args = { "const skill_id &", "int", }, const = false, static = false, },
            { name = "mod_skill_level", rval = "void", args = { "const skill_id &", "int", }, const = false, static = false, },
            { name = "meets_skill_requirements", rval = "bool", args = { "const std::map< skill_id, int > &", }, optional_args = { "const item &", }, const = true, static = false, },
            { name = "meets_stat_requirements", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "meets_requirements", rval = "bool", args = { "const item &", }, optional_args = { "const item &", }, const = true, static = false, },
            { name = "enumerate_unmet_requirements", rval = "std::string", args = { "const item &", }, optional_args = { "const item &", }, const = true, static = false, },
            { name = "get_time_died", rval = "time_point", args = { }, const = true, static = false, },
            { name = "set_time_died", rval = "void", args = { "const time_point &", }, const = false, static = false, },
            { name = "normalize", rval = "void", args = { }, const = false, static = false, },
            { name = "die", rval = "void", args = { "Creature *", }, const = false, static = false, },
            { name = "get_name", rval = "std::string", args = { }, const = true, static = false, },
            --{ name = "query_yn", rval = "bool", args = { "typename ...", "const char *const", "Args &&...", }, const = true, static = false, },
            { name = "query_yn", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "is_immune_field", rval = "bool", args = { "const field_id", }, const = true, static = false, },
            { name = "has_nv", rval = "bool", args = { }, const = false, static = false, },
            { name = "rest_quality", rval = "float", args = { }, const = true, static = false, },
            { name = "healing_rate", rval = "float", args = { "float", }, const = true, static = false, },
            { name = "healing_rate_medicine", rval = "float", args = { "float", "const body_part", }, const = true, static = false, },
            { name = "mutation_value", rval = "float", args = { "const std::string &", }, const = true, static = false, },
            { name = "get_mutation_social_mods", rval = "const social_modifiers", args = { }, const = true, static = false, },
            { name = "symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "extended_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "empty_skills", rval = "void", args = { }, const = false, static = false, },
            { name = "pick_name", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "get_base_traits", rval = "std::vector< trait_id >", args = { }, const = true, static = false, },
            { name = "get_mutations", rval = "std::vector< trait_id >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "get_vision_modes", rval = "const std::bitset<NUM_VISION_MODES>&", args = { }, const = true, static = false, },
            { name = "empty_traits", rval = "void", args = { }, const = false, static = false, },
            { name = "add_traits", rval = "void", args = { }, const = false, static = false, },
            { name = "on_item_wear", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_item_takeoff", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_worn_item_washed", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "bp_to_hp", rval = "hp_part", args = { "body_part", }, const = false, static = true, },
            { name = "hp_to_bp", rval = "body_part", args = { "hp_part", }, const = false, static = true, },
            { name = "worn_position_to_index", rval = "int", args = { "int", }, const = false, static = true, },
        }
    },
    Creature = {
        cpp_name = "Creature",
        new = {
        },
        attributes = {
            size_map = { type = "std::map< std::string, m_size >", writable = false, reference = false, static = true, },
            cmat_flesh = { type = "std::set< material_id >", writable = false, reference = false, static = true, },
            cmat_fleshnveg = { type = "std::set< material_id >", writable = false, reference = false, static = true, },
            cmat_flammable = { type = "std::set< material_id >", writable = false, reference = false, static = true, },
            cmat_flameres = { type = "std::set< material_id >", writable = false, reference = false, static = true, },
            facing = { type = "FacingDirection", writable = true, reference = false, static = false, },
            moves = { type = "int", writable = true, reference = false, static = false, },
            underwater = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "sees", rval = "bool", args = { "const Creature &", }, const = true, static = false, },
            { name = "sees", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "get_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "disp_name", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "skin_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "is_player", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_npc", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_monster", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_fake", rval = "bool", args = { }, const = true, static = false, },
            { name = "set_fake", rval = "void", args = { "const bool", }, const = false, static = false, },
            { name = "normalize", rval = "void", args = { }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_bonuses", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_stats", rval = "void", args = { }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = false, },
            { name = "bleed", rval = "void", args = { }, const = true, static = false, },
            { name = "die", rval = "void", args = { "Creature *", }, const = false, static = false, },
            { name = "hit_roll", rval = "float", args = { }, const = true, static = false, },
            { name = "dodge_roll", rval = "float", args = { }, const = false, static = false, },
            { name = "stability_roll", rval = "float", args = { }, const = true, static = false, },
            --{ name = "attitude_to", rval = "Attitude", args = { "const Creature &", }, const = true, static = false, },
            { name = "avoid_trap", rval = "bool", args = { "const tripoint &", "const trap &", }, const = true, static = false, },
            { name = "sight_range", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "power_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "speed_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "auto_find_hostile_target", rval = "Creature *", args = { "int", "int &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "ranged_target_size", rval = "double", args = { }, const = true, static = false, },
            { name = "block_hit", rval = "bool", args = { "Creature *", "body_part &", "damage_instance &", }, const = false, static = false, },
            { name = "absorb_hit", rval = "void", args = { "body_part", "damage_instance &", }, const = false, static = false, },
            { name = "knock_back_from", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "deal_melee_attack", rval = "int", args = { "Creature *", "int", }, const = false, static = false, },
            { name = "deal_melee_hit", rval = "void", args = { "Creature *", "int", "bool", "const damage_instance &", "dealt_damage_instance &", }, const = false, static = false, },
            { name = "deal_projectile_attack", rval = "void", args = { "Creature *", "dealt_projectile_attack &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "deal_damage", rval = "dealt_damage_instance", args = { "Creature *", "body_part", "const damage_instance &", }, const = false, static = false, },
            { name = "deal_damage_handle_type", rval = "void", args = { "const damage_unit &", "body_part", "int &", "int &", }, const = false, static = false, },
            { name = "apply_damage", rval = "void", args = { "Creature *", "body_part", "int", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "on_dodge", rval = "void", args = { "Creature *", "float", }, const = false, static = false, },
            { name = "on_hit", rval = "void", args = { "Creature *", }, optional_args = { "body_part", "float", "dealt_projectile_attack const *const", }, const = false, static = false, },
            { name = "digging", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_on_ground", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_underwater", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_warm", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_weapon", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_hallucination", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_dead_state", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_elec_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_immune_effect", rval = "bool", args = { "const efftype_id &", }, const = true, static = false, },
            { name = "is_immune_damage", rval = "bool", args = { "const damage_type", }, const = true, static = false, },
            { name = "is_dangerous_fields", rval = "bool", args = { "const field &", }, const = true, static = false, },
            { name = "is_dangerous_field", rval = "bool", args = { "const field_entry &", }, const = true, static = false, },
            { name = "is_immune_field", rval = "bool", args = { "const field_id", }, const = true, static = false, },
            { name = "fall_damage_mod", rval = "float", args = { }, const = true, static = false, },
            { name = "impact", rval = "int", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "check_dead_state", rval = "void", args = { }, const = false, static = false, },
            { name = "posx", rval = "int", args = { }, const = true, static = false, },
            { name = "posy", rval = "int", args = { }, const = true, static = false, },
            { name = "posz", rval = "int", args = { }, const = true, static = false, },
            { name = "pos", rval = "const tripoint&", args = { }, const = true, static = false, },
            { name = "setpos", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "move_effects", rval = "bool", args = { "bool", }, const = false, static = false, },
            { name = "add_effect", rval = "void", args = { "const efftype_id &", "time_duration", }, optional_args = { "body_part", "bool", "int", "bool", "bool", }, const = false, static = false, },
            { name = "add_env_effect", rval = "bool", args = { "const efftype_id &", "body_part", "int", "const time_duration &", }, optional_args = { "body_part", "bool", "int", "bool", }, const = false, static = false, },
            { name = "remove_effect", rval = "bool", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = false, static = false, },
            { name = "clear_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "has_effect", rval = "bool", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "get_effect", rval = "const effect &", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "get_effect", rval = "effect &", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = false, static = false, },
            { name = "get_effect_dur", rval = "time_duration", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "get_effect_int", rval = "int", args = { "const efftype_id &", }, optional_args = { "body_part", }, const = true, static = false, },
            { name = "resists_effect", rval = "bool", args = { "const effect &", }, const = false, static = false, },
            { name = "set_value", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "remove_value", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "get_value", rval = "std::string", args = { "const std::string &", }, const = true, static = false, },
            { name = "process_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "has_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "mod_pain", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_pain_noresist", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_pain", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_pain", rval = "int", args = { }, const = true, static = false, },
            { name = "get_perceived_pain", rval = "int", args = { }, const = true, static = false, },
            { name = "get_pain_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_moves", rval = "int", args = { }, const = true, static = false, },
            { name = "mod_moves", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_moves", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "in_sleep_state", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_killer", rval = "Creature *", args = { }, const = true, static = false, },
            { name = "get_num_blocks", rval = "int", args = { }, const = true, static = false, },
            { name = "get_num_dodges", rval = "int", args = { }, const = true, static = false, },
            { name = "get_num_blocks_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_num_dodges_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_env_resist", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_cut", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash_base", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_cut_base", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_armor_cut_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_armor_type", rval = "int", args = { "damage_type", "body_part", }, const = true, static = false, },
            { name = "get_dodge", rval = "float", args = { }, const = true, static = false, },
            { name = "get_melee", rval = "float", args = { }, const = true, static = false, },
            { name = "get_hit", rval = "float", args = { }, const = true, static = false, },
            { name = "get_speed", rval = "int", args = { }, const = true, static = false, },
            { name = "get_size", rval = "m_size", args = { }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { }, const = true, static = false, },
            { name = "hp_percentage", rval = "int", args = { }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            { name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "bloodType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "gibType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const m_flag", }, const = true, static = false, },
            { name = "uncanny_dodge", rval = "bool", args = { }, const = false, static = false, },
            { name = "get_random_body_part", rval = "body_part", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "get_all_body_parts", rval = "std::vector<body_part>", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "get_speed_base", rval = "int", args = { }, const = true, static = false, },
            { name = "get_speed_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_block_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_bash_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_cut_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "get_dodge_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_hit_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_dodge_bonus", rval = "float", args = { }, const = true, static = false, },
            { name = "get_hit_bonus", rval = "float", args = { }, const = true, static = false, },
            { name = "get_bash_mult", rval = "float", args = { }, const = true, static = false, },
            { name = "get_cut_mult", rval = "float", args = { }, const = true, static = false, },
            { name = "get_melee_quiet", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_grab_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "has_grab_break_tec", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_throw_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "mod_stat", rval = "void", args = { "const std::string &", "float", }, const = false, static = false, },
            { name = "set_num_blocks_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_num_dodges_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_armor_bash_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_armor_cut_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_speed_base", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_speed_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_block_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_bash_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_cut_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_speed_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_block_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_bash_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "mod_cut_bonus", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_dodge_bonus", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_hit_bonus", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "mod_dodge_bonus", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "mod_hit_bonus", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_bash_mult", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_cut_mult", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_melee_quiet", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "set_grab_resist", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_throw_resist", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "weight_capacity", rval = "units::mass", args = { }, const = true, static = false, },
            { name = "get_pathfinding_settings", rval = "const pathfinding_settings&", args = { }, const = true, static = false, },
            { name = "get_path_avoid", rval = "std::set<tripoint>", args = { }, const = true, static = false, },
            { name = "draw", rval = "void", args = { "const catacurses::window &", "int", "int", "bool", }, const = true, static = false, },
            { name = "draw", rval = "void", args = { "const catacurses::window &", "const tripoint &", "bool", }, const = true, static = false, },
            { name = "print_info", rval = "int", args = { "const catacurses::window &", "int", "int", "int", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_if_player", rval = "void", args = { "typename ...", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_if_player", rval = "void", args = { "typename ...", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_if_player", rval = "void", args = { "typename ...", "const game_message_type", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_if_player", rval = "void", args = { "typename ...", "const game_message_type", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_if_npc", rval = "void", args = { "typename ...", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_if_npc", rval = "void", args = { "typename ...", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_if_npc", rval = "void", args = { "typename ...", "const game_message_type", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_if_npc", rval = "void", args = { "typename ...", "const game_message_type", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_player_or_npc", rval = "void", args = { "typename ...", "const char *const", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_player_or_npc", rval = "void", args = { "typename ...", "const std::string &", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_player_or_npc", rval = "void", args = { "typename ...", "const game_message_type", "const char *const", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_player_or_npc", rval = "void", args = { "typename ...", "const game_message_type", "const std::string &", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_player_or_say", rval = "void", args = { "typename ...", "const char *const", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_player_or_say", rval = "void", args = { "typename ...", "const std::string &", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            --{ name = "add_msg_player_or_say", rval = "void", args = { "typename ...", "const game_message_type", "const char *const", "const char *const", "Args &&...", }, const = true, static = false, },
            --{ name = "add_msg_player_or_say", rval = "void", args = { "typename ...", "const game_message_type", "const std::string &", "const std::string &", "Args &&...", }, const = true, static = false, },
            { name = "add_memorial_log", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            --{ name = "add_memorial_log", rval = "void", args = { "typename ...", "const char *const", "const char *const", "Args &&...", }, const = false, static = false, },
            --{ name = "add_memorial_log", rval = "void", args = { "typename ...", "const std::string &", "const std::string &", "Args &&...", }, const = false, static = false, },
            { name = "extended_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "basic_symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "symbol", rval = "const std::string&", args = { }, const = true, static = false, },
            { name = "is_symbol_highlighted", rval = "bool", args = { }, const = true, static = false, },
            { name = "select_body_part", rval = "body_part", args = { "Creature *", "int", }, const = true, static = false, },
            --{ name = "get_attitude_ui_data", rval = "const std::pair< std::string, nc_color > &", args = { "Attitude", }, const = false, static = true, },
        }
    },
    effect_type = {
        cpp_name = "effect_type",
        string_id = "efftype_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "efftype_id", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "get_rating", rval = "effect_rating", args = { }, const = true, static = false, },
            { name = "use_name_ints", rval = "bool", args = { }, const = true, static = false, },
            { name = "use_desc_ints", rval = "bool", args = { "bool", }, const = true, static = false, },
            { name = "gain_game_message_type", rval = "game_message_type", args = { }, const = true, static = false, },
            { name = "lose_game_message_type", rval = "game_message_type", args = { }, const = true, static = false, },
            { name = "get_apply_message", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_apply_memorial_log", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_remove_message", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_remove_memorial_log", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_main_parts", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_show_in_info", rval = "bool", args = { }, const = true, static = false, },
            { name = "load_mod_data", rval = "bool", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "load_miss_msgs", rval = "bool", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "load_decay_msgs", rval = "bool", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "register_ma_buff_effect", rval = "void", args = { "const effect_type &", }, const = false, static = true, },
        }
    },
    encumbrance_data = {
        cpp_name = "encumbrance_data",
        new = {
        },
        attributes = {
            encumbrance = { type = "int", writable = true, reference = false, static = false, },
            armor_encumbrance = { type = "int", writable = true, reference = false, static = false, },
            layer_penalty = { type = "int", writable = true, reference = false, static = false, },
            layer_penalty_details = { type = "std::array< layer_details, static_cast< size_t > layer_level::MAX_CLOTHING_LAYER)>", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "layer", rval = "void", args = { "const layer_level", "const int", }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = false, },
            --{ name = "operator==", rval = "", args = { "const encumbrance_data &", }, const = true, static = false, },
        }
    },
    field = {
        cpp_name = "field",
        new = {
            { },
        },
        attributes = {
        },
        functions = {
            { name = "findField", rval = "field_entry *", args = { "const field_id", }, const = false, static = false, },
            { name = "findFieldc", rval = "const field_entry *", args = { "const field_id", }, const = true, static = false, },
            { name = "findField", rval = "const field_entry *", args = { "const field_id", }, const = true, static = false, },
            { name = "addField", rval = "bool", args = { "field_id", }, optional_args = { "int", "const time_duration &", }, const = false, static = false, },
            { name = "removeField", rval = "bool", args = { "field_id", }, const = false, static = false, },
            { name = "removeField", rval = "void", args = { "std::map< field_id, field_entry >::iterator", }, const = false, static = false, },
            { name = "fieldCount", rval = "unsigned int", args = { }, const = true, static = false, },
            { name = "fieldSymbol", rval = "field_id", args = { }, const = true, static = false, },
            { name = "begin", rval = "std::map< field_id, field_entry >::iterator", args = { }, const = false, static = false, },
            { name = "begin", rval = "std::map< field_id, field_entry >::const_iterator", args = { }, const = true, static = false, },
            { name = "end", rval = "std::map< field_id, field_entry >::iterator", args = { }, const = false, static = false, },
            { name = "end", rval = "std::map< field_id, field_entry >::const_iterator", args = { }, const = true, static = false, },
            { name = "move_cost", rval = "int", args = { }, const = true, static = false, },
        }
    },
    field_entry = {
        cpp_name = "field_entry",
        new = {
            { },
            { "const field_id", "const int", "const time_duration &", },
        },
        attributes = {
        },
        functions = {
            { name = "color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "symbol", rval = "char", args = { }, const = true, static = false, },
            { name = "move_cost", rval = "int", args = { }, const = true, static = false, },
            { name = "getFieldType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "getFieldDensity", rval = "int", args = { }, const = true, static = false, },
            { name = "setFieldType", rval = "field_id", args = { "const field_id", }, const = false, static = false, },
            { name = "setFieldDensity", rval = "int", args = { "const int", }, const = false, static = false, },
            { name = "getFieldAge", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "setFieldAge", rval = "time_duration", args = { "const time_duration &", }, const = false, static = false, },
            { name = "mod_age", rval = "time_duration", args = { "const time_duration &", }, const = false, static = false, },
            { name = "is_dangerous", rval = "bool", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "isAlive", rval = "bool", args = { }, const = false, static = false, },
            { name = "decays_on_actualize", rval = "bool", args = { }, const = true, static = false, },
        }
    },
    furn_t = {
        cpp_name = "furn_t",
        string_id = "furn_str_id",
        int_id = "furn_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "furn_str_id", writable = true, reference = false, static = false, },
            open = { type = "furn_str_id", writable = true, reference = false, static = false, },
            close = { type = "furn_str_id", writable = true, reference = false, static = false, },
            crafting_pseudo_item = { type = "std::string", writable = true, reference = false, static = false, },
            keg_capacity = { type = "units::volume", writable = true, reference = false, static = false, },
            comfort = { type = "int", writable = true, reference = false, static = false, },
            floor_bedding_warmth = { type = "int", writable = true, reference = false, static = false, },
            bonus_fire_warmth_feet = { type = "int", writable = true, reference = false, static = false, },
            deployed_item = { type = "itype_id", writable = true, reference = false, static = false, },
            move_str_req = { type = "int", writable = true, reference = false, static = false, },
            workbench = { type = "cata::optional< furn_workbench_info >", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "crafting_pseudo_item_type", rval = "const itype *", args = { }, const = true, static = false, },
            { name = "crafting_ammo_item_type", rval = "const itype *", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "check", rval = "void", args = { }, const = true, static = false, },
            { name = "count", rval = "size_t", args = { }, const = false, static = true, },
        }
    },
    gun_mode = {
        cpp_name = "gun_mode",
        string_id = "gun_mode_id",
        new = {
            { },
            { "const std::string &", "item *", "int", "const std::set< std::string > &", },
        },
        attributes = {
            target = { type = "item", writable = true, reference = false, static = false, },
            qty = { type = "int", writable = true, reference = false, static = false, },
            flags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "melee", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "operator bool", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator*", rval = "", args = { }, const = false, static = false, },
            --{ name = "operator*", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator->", rval = "", args = { }, const = false, static = false, },
            --{ name = "operator->", rval = "", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
        }
    },
    item = {
        cpp_name = "item",
        new = {
            { },
            --{ "item &&", },
            { "const item &", },
            { "const itype_id &", },
            { "const itype_id &", "time_point", },
            { "const itype_id &", "time_point", "long", },
            { "const itype *", },
            { "const itype *", "time_point", },
            { "const itype *", "time_point", "long", },
            --{ "const itype_id &", "time_point", "default_charges_tag", },
            --{ "const itype *", "time_point", "default_charges_tag", },
            --{ "const itype_id &", "time_point", "solitary_tag", },
            --{ "const itype *", "time_point", "solitary_tag", },
            { "const recipe *", "long", "std::list< item >", },
        },
        attributes = {
            INFINITE_CHARGES = { type = "long", writable = false, reference = false, static = true, },
            type = { type = "itype", writable = false, reference = false, static = false, },
            contents = { type = "std::list< item >", writable = true, reference = false, static = false, },
            components = { type = "std::list< item >", writable = true, reference = false, static = false, },
            faults = { type = "std::set< fault_id >", writable = true, reference = false, static = false, },
            item_tags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            charges = { type = "long", writable = true, reference = false, static = false, },
            recipe_charges = { type = "int", writable = true, reference = false, static = false, },
            burnt = { type = "int", writable = true, reference = false, static = false, },
            poison = { type = "int", writable = true, reference = false, static = false, },
            frequency = { type = "int", writable = true, reference = false, static = false, },
            note = { type = "int", writable = true, reference = false, static = false, },
            irridation = { type = "int", writable = true, reference = false, static = false, },
            item_counter = { type = "int", writable = true, reference = false, static = false, },
            specific_energy = { type = "int", writable = true, reference = false, static = false, },
            temperature = { type = "int", writable = true, reference = false, static = false, },
            mission_id = { type = "int", writable = true, reference = false, static = false, },
            player_id = { type = "int", writable = true, reference = false, static = false, },
            invlet = { type = "char", writable = true, reference = false, static = false, },
            active = { type = "bool", writable = true, reference = false, static = false, },
            is_favorite = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "make_corpse", rval = "item", args = { }, optional_args = { "const mtype_id &", "time_point", "const std::string &", }, const = false, static = true, },
            { name = "attack_time", rval = "int", args = { }, const = true, static = false, },
            { name = "damage_melee", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "base_damage_melee", rval = "damage_instance", args = { }, const = true, static = false, },
            { name = "base_damage_thrown", rval = "damage_instance", args = { }, const = true, static = false, },
            { name = "is_two_handed", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "is_melee", rval = "bool", args = { "damage_type", }, const = true, static = false, },
            { name = "is_melee", rval = "bool", args = { }, const = true, static = false, },
            { name = "melee_skill", rval = "skill_id", args = { }, const = true, static = false, },
            { name = "is_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_watertight_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_container_empty", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_non_resealable_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_container_full", rval = "bool", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "fill_with", rval = "void", args = { "item &", }, optional_args = { "long", }, const = false, static = false, },
            { name = "get_remaining_capacity_for_liquid", rval = "long", args = { "const item &", }, optional_args = { "bool", "std::string *", }, const = true, static = false, },
            { name = "get_remaining_capacity_for_liquid", rval = "long", args = { "const item &", "const Character &", }, optional_args = { "std::string *", }, const = true, static = false, },
            { name = "get_container_capacity", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_total_capacity", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "put_in", rval = "void", args = { "const item &", }, const = false, static = false, },
            --{ name = "emplace_back", rval = "item&", args = { "typename ...", "Args &&...", }, const = false, static = false, },
            { name = "in_its_container", rval = "item", args = { }, const = true, static = false, },
            { name = "in_container", rval = "item", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_funnel_container", rval = "bool", args = { "units::volume &", }, const = true, static = false, },
            { name = "add_rain_to_container", rval = "void", args = { "bool", }, optional_args = { "int", }, const = false, static = false, },
            { name = "get_random_material", rval = "const material_type &", args = { }, const = true, static = false, },
            { name = "get_base_material", rval = "const material_type &", args = { }, const = true, static = false, },
            { name = "made_of", rval = "const std::vector< material_id > &", args = { }, const = true, static = false, },
            { name = "quality_of", rval = "const std::map< quality_id, int > &", args = { }, const = true, static = false, },
            { name = "made_of_types", rval = "std::vector< const material_type * >", args = { }, const = true, static = false, },
            { name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "only_made_of", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            { name = "contents_made_of", rval = "bool", args = { "const phase_id", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "phase_id", }, const = true, static = false, },
            { name = "made_of_from_type", rval = "bool", args = { "phase_id", }, const = true, static = false, },
            { name = "get_uncraft_components", rval = "std::vector< item_comp >", args = { }, const = true, static = false, },
            { name = "conductive", rval = "bool", args = { }, const = true, static = false, },
            { name = "flammable", rval = "bool", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "reinforceable", rval = "bool", args = { }, const = true, static = false, },
            { name = "bash_resist", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "cut_resist", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "stab_resist", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "acid_resist", rval = "int", args = { }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "fire_resist", rval = "int", args = { }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "can_contain", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "can_contain", rval = "bool", args = { "const itype &", }, const = true, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "int", }, const = false, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "long", }, const = false, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "double", }, const = false, static = false, },
            { name = "get_var", rval = "double", args = { "const std::string &", "double", }, const = true, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "const tripoint &", }, const = false, static = false, },
            { name = "get_var", rval = "tripoint", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "set_var", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "get_var", rval = "std::string", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "get_var", rval = "std::string", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_var", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "erase_var", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "clear_vars", rval = "void", args = { }, const = false, static = false, },
            { name = "has_flag", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_any_flag", rval = "bool", args = { "const std::vector< std::string > &", }, const = true, static = false, },
            { name = "set_flag", rval = "item &", args = { "const std::string &", }, const = false, static = false, },
            { name = "unset_flag", rval = "item &", args = { "const std::string &", }, const = false, static = false, },
            { name = "unset_flags", rval = "void", args = { }, const = false, static = false, },
            { name = "has_property", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "get_property_string", rval = "std::string", args = { "const std::string &", }, optional_args = { "const std::string &", }, const = true, static = false, },
            { name = "get_property_long", rval = "long", args = { "const std::string &", }, optional_args = { "long", }, const = true, static = false, },
            { name = "getlight", rval = "bool", args = { "float &", "int &", "int &", }, const = true, static = false, },
            { name = "getlight_emit", rval = "int", args = { }, const = true, static = false, },
            { name = "is_emissive", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_seed", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_plant_epoch", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "get_plant_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "covers", rval = "bool", args = { "body_part", }, const = true, static = false, },
            { name = "get_covered_body_parts", rval = "body_part_set", args = { }, const = true, static = false, },
            { name = "get_covered_body_parts", rval = "body_part_set", args = { "side", }, const = true, static = false, },
            { name = "is_sided", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_side", rval = "side", args = { }, const = true, static = false, },
            { name = "set_side", rval = "bool", args = { "side", }, const = false, static = false, },
            { name = "swap_side", rval = "bool", args = { }, const = false, static = false, },
            { name = "get_warmth", rval = "int", args = { }, const = true, static = false, },
            { name = "get_thickness", rval = "int", args = { }, const = true, static = false, },
            { name = "get_layer", rval = "layer_level", args = { }, const = true, static = false, },
            { name = "get_coverage", rval = "int", args = { }, const = true, static = false, },
            { name = "get_encumber_when_containing", rval = "int", args = { "const Character &", "const units::volume &", }, const = true, static = false, },
            { name = "get_encumber", rval = "int", args = { "const Character &", }, const = true, static = false, },
            { name = "get_storage", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_env_resist", rval = "int", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "get_base_env_resist_w_filter", rval = "int", args = { }, const = true, static = false, },
            { name = "is_power_armor", rval = "bool", args = { }, const = true, static = false, },
            { name = "find_armor_data", rval = "const islot_armor *", args = { }, const = true, static = false, },
            { name = "is_worn_only_with", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "get_pet_armor_max_vol", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_pet_armor_min_vol", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_pet_armor_bodytype", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_chapters", rval = "int", args = { }, const = true, static = false, },
            { name = "get_remaining_chapters", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "mark_chapter_as_read", rval = "void", args = { "const player &", }, const = false, static = false, },
            { name = "get_available_recipes", rval = "std::vector< std::pair< const recipe *, int > >", args = { "const player &", }, const = true, static = false, },
            { name = "has_technique", rval = "bool", args = { "const matec_id &", }, const = true, static = false, },
            { name = "get_techniques", rval = "std::set< matec_id >", args = { }, const = true, static = false, },
            { name = "add_technique", rval = "void", args = { "const matec_id &", }, const = false, static = false, },
            { name = "is_gunmod", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_gun", rval = "bool", args = { }, const = true, static = false, },
            { name = "ammo_remaining", rval = "long", args = { }, const = true, static = false, },
            { name = "ammo_capacity", rval = "long", args = { }, const = true, static = false, },
            { name = "ammo_capacity", rval = "long", args = { "bool", }, const = true, static = false, },
            { name = "ammo_required", rval = "long", args = { }, const = true, static = false, },
            { name = "ammo_sufficient", rval = "bool", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "ammo_consume", rval = "long", args = { "long", "const tripoint &", }, const = false, static = false, },
            { name = "ammo_data", rval = "const itype *", args = { }, const = true, static = false, },
            { name = "ammo_current", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "ammo_type", rval = "ammotype", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "ammo_default", rval = "itype_id", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "ammo_effects", rval = "std::set< std::string >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "ammo_sort_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "casings_count", rval = "int", args = { }, const = true, static = false, },
            --{ name = "casings_handle", rval = "void", args = { "const std::function< bool(item &)> &", }, const = false, static = false, },
            { name = "magazine_integral", rval = "bool", args = { }, const = true, static = false, },
            { name = "magazine_default", rval = "itype_id", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "magazine_compatible", rval = "std::set< itype_id >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "magazine_current", rval = "item *", args = { }, const = false, static = false, },
            { name = "magazine_current", rval = "const item *", args = { }, const = true, static = false, },
            { name = "magazine_convert", rval = "std::vector< item >", args = { }, const = false, static = false, },
            { name = "gunmods", rval = "std::vector< item * >", args = { }, const = false, static = false, },
            { name = "gunmods", rval = "std::vector< const item * >", args = { }, const = true, static = false, },
            { name = "gunmod_find", rval = "item *", args = { "const itype_id &", }, const = false, static = false, },
            { name = "gunmod_find", rval = "const item *", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_gunmod_compatible", rval = "ret_val< bool >", args = { "const item &", }, const = true, static = false, },
            { name = "gun_all_modes", rval = "std::map< gun_mode_id, gun_mode >", args = { }, const = true, static = false, },
            { name = "gun_get_mode", rval = "gun_mode", args = { "const gun_mode_id &", }, const = true, static = false, },
            { name = "gun_current_mode", rval = "gun_mode", args = { }, const = true, static = false, },
            { name = "gun_get_mode_id", rval = "gun_mode_id", args = { }, const = true, static = false, },
            { name = "gun_set_mode", rval = "bool", args = { "const gun_mode_id &", }, const = false, static = false, },
            { name = "gun_cycle_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "sight_dispersion", rval = "int", args = { }, const = true, static = false, },
            { name = "gun_noise", rval = "item::sound_data", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_silent", rval = "bool", args = { }, const = true, static = false, },
            { name = "gun_range", rval = "int", args = { "const player *", }, const = true, static = false, },
            { name = "gun_range", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "gun_recoil", rval = "int", args = { "const player &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "gun_damage", rval = "damage_instance", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "gun_dispersion", rval = "int", args = { }, optional_args = { "bool", "bool", }, const = true, static = false, },
            { name = "gun_skill", rval = "skill_id", args = { }, const = true, static = false, },
            { name = "gun_type", rval = "gun_type_type", args = { }, const = true, static = false, },
            { name = "get_mod_locations", rval = "std::map< gunmod_location, int >", args = { }, const = true, static = false, },
            { name = "get_free_mod_locations", rval = "int", args = { "const gunmod_location &", }, const = true, static = false, },
            { name = "is_firearm", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_reload_time", rval = "int", args = { }, const = true, static = false, },
            { name = "engine_displacement", rval = "int", args = { }, const = true, static = false, },
            { name = "is_upgrade", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "operator=", rval = "", args = { "item &&", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "const item &", }, const = false, static = false, },
            { name = "convert", rval = "item &", args = { "const itype_id &", }, const = false, static = false, },
            { name = "deactivate", rval = "item &", args = { }, optional_args = { "const Character *", "bool", }, const = false, static = false, },
            { name = "activate", rval = "item &", args = { }, const = false, static = false, },
            { name = "ammo_set", rval = "item &", args = { "const itype_id &", }, optional_args = { "long", }, const = false, static = false, },
            { name = "ammo_unset", rval = "item &", args = { }, const = false, static = false, },
            { name = "set_damage", rval = "item &", args = { "int", }, const = false, static = false, },
            { name = "split", rval = "item", args = { "long", }, const = false, static = false, },
            { name = "get_mtype", rval = "const mtype *", args = { }, const = true, static = false, },
            { name = "set_mtype", rval = "void", args = { "const mtype *", }, const = false, static = false, },
            { name = "is_corpse", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_revive", rval = "bool", args = { }, const = true, static = false, },
            { name = "ready_to_revive", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "color_in_inventory", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "tname", rval = "std::string", args = { }, optional_args = { "unsigned int", "bool", "unsigned int", }, const = true, static = false, },
            { name = "display_money", rval = "std::string", args = { "unsigned int", "unsigned long", }, const = true, static = false, },
            { name = "display_name", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "info", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "info", rval = "std::string", args = { "bool", "std::vector< iteminfo > &", }, const = true, static = false, },
            { name = "info", rval = "std::string", args = { "bool", "std::vector< iteminfo > &", "int", }, const = true, static = false, },
            { name = "info", rval = "std::string", args = { "std::vector< iteminfo > &", }, optional_args = { "const iteminfo_query *", "int", }, const = true, static = false, },
            { name = "simulate_burn", rval = "float", args = { "fire_data &", }, const = true, static = false, },
            { name = "burn", rval = "bool", args = { "fire_data &", }, const = false, static = false, },
            { name = "get_category", rval = "const item_category &", args = { }, const = true, static = false, },
            { name = "reload", rval = "bool", args = { "player &", "item_location", "long", }, const = false, static = false, },
            --{ name = "io", rval = "void", args = { "typename Archive", "Archive &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "load_info", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "symbol", rval = "const std::string &", args = { }, const = true, static = false, },
            { name = "price", rval = "int", args = { "bool", }, const = true, static = false, },
            { name = "stacks_with", rval = "bool", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "merge_charges", rval = "bool", args = { "const item &", }, const = false, static = false, },
            { name = "weight", rval = "units::mass", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "volume", rval = "units::volume", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "base_volume", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "corpse_volume", rval = "units::volume", args = { "const mtype *", }, const = true, static = false, },
            { name = "lift_strength", rval = "int", args = { }, const = true, static = false, },
            { name = "reach_range", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "set_countdown", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "use_charges", rval = "bool", args = { "const itype_id &", "long &", "std::list< item > &", "const tripoint &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "on_drop", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "on_drop", rval = "bool", args = { "const tripoint &", "map &", }, const = false, static = false, },
            { name = "use_amount", rval = "bool", args = { "const itype_id &", "long &", "std::list< item > &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "allow_crafting_component", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_quality", rval = "int", args = { "const quality_id &", }, const = true, static = false, },
            { name = "count_by_charges", rval = "bool", args = { }, const = true, static = false, },
            { name = "count", rval = "long", args = { }, const = true, static = false, },
            { name = "craft_has_charges", rval = "bool", args = { }, const = false, static = false, },
            { name = "mod_charges", rval = "void", args = { "long", }, const = false, static = false, },
            { name = "calc_rot", rval = "void", args = { "time_point", }, const = false, static = false, },
            { name = "calc_rot_while_processing", rval = "void", args = { "time_duration", }, const = false, static = false, },
            { name = "process_temperature_rot", rval = "void", args = { "int", "float", "const tripoint", "player *", }, const = false, static = false, },
            { name = "heat_up", rval = "void", args = { }, const = false, static = false, },
            { name = "cold_up", rval = "void", args = { }, const = false, static = false, },
            { name = "set_item_temperature", rval = "void", args = { "float", }, const = false, static = false, },
            { name = "set_item_specific_energy", rval = "void", args = { "const float", }, const = false, static = false, },
            { name = "reset_temp_check", rval = "void", args = { }, const = false, static = false, },
            { name = "goes_bad", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_shelf_life", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "get_relative_rot", rval = "double", args = { }, const = true, static = false, },
            { name = "set_relative_rot", rval = "void", args = { "double", }, const = false, static = false, },
            { name = "set_rot", rval = "void", args = { "time_duration", }, const = false, static = false, },
            { name = "spoilage_sort_order", rval = "int", args = { }, const = false, static = false, },
            { name = "is_fresh", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_going_bad", rval = "bool", args = { }, const = true, static = false, },
            { name = "rotten", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_rotten_away", rval = "bool", args = { }, const = true, static = false, },
            { name = "apply_freezerburn", rval = "void", args = { }, const = false, static = false, },
            { name = "get_rot", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "mod_rot", rval = "void", args = { "const time_duration &", }, const = false, static = false, },
            { name = "brewing_time", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "brewing_results", rval = "const std::vector< itype_id > &", args = { }, const = true, static = false, },
            { name = "detonate", rval = "bool", args = { "const tripoint &", "std::vector< item > &", }, const = false, static = false, },
            { name = "will_explode_in_fire", rval = "bool", args = { }, const = true, static = false, },
            { name = "mitigate_damage", rval = "void", args = { "damage_unit &", }, const = true, static = false, },
            { name = "damage_resist", rval = "int", args = { "damage_type", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "chip_resistance", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "damage", rval = "int", args = { }, const = true, static = false, },
            { name = "damage_level", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "min_damage", rval = "int", args = { }, const = true, static = false, },
            { name = "max_damage", rval = "int", args = { }, const = true, static = false, },
            { name = "get_relative_health", rval = "float", args = { }, const = true, static = false, },
            { name = "mod_damage", rval = "bool", args = { "int", "damage_type", }, const = false, static = false, },
            { name = "mod_damage", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "inc_damage", rval = "bool", args = { "const damage_type", }, const = false, static = false, },
            { name = "inc_damage", rval = "bool", args = { }, const = false, static = false, },
            { name = "damage_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "damage_symbol", rval = "std::string", args = { }, const = true, static = false, },
            { name = "durability_indicator", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "repaired_with", rval = "const std::set< itype_id > &", args = { }, const = true, static = false, },
            { name = "already_used_by_player", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "mark_as_used_by_player", rval = "void", args = { "const player &", }, const = false, static = false, },
            { name = "is_filthy", rval = "bool", args = { }, const = true, static = false, },
            { name = "process", rval = "bool", args = { "player *", "const tripoint &", "bool", }, const = false, static = false, },
            { name = "process", rval = "bool", args = { "player *", "const tripoint &", "bool", "int", "float", }, const = false, static = false, },
            { name = "get_cable_target", rval = "cata::optional< tripoint >", args = { "player *", "const tripoint &", }, const = true, static = false, },
            { name = "reset_cable", rval = "void", args = { "player *", }, const = false, static = false, },
            { name = "needs_processing", rval = "bool", args = { }, const = true, static = false, },
            { name = "processing_speed", rval = "int", args = { }, const = true, static = false, },
            { name = "process_artifact", rval = "void", args = { "player *", "const tripoint &", }, const = false, static = false, },
            { name = "destroyed_at_zero_charges", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_null", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_comestible", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_food", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_food_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_med_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_ammo_container", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_medication", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_bionic", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_magazine", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_ammo_belt", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_bandolier", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_holster", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_ammo", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_pet_armor", rval = "bool", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_armor", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_book", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_map", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_salvageable", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_craft", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_tool", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_tool_reversible", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_artifact", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_bucket", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_bucket_nonempty", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_brewable", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_engine", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_wheel", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_fuel", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_toolmod", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_faulty", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_irremovable", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_unarmed_weapon", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_temperature", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_specific_heat_liquid", rval = "float", args = { }, const = true, static = false, },
            { name = "get_specific_heat_solid", rval = "float", args = { }, const = true, static = false, },
            { name = "get_latent_heat", rval = "float", args = { }, const = true, static = false, },
            { name = "get_freeze_point", rval = "float", args = { }, const = true, static = false, },
            { name = "faults_potential", rval = "std::set< fault_id >", args = { }, const = true, static = false, },
            { name = "wheel_area", rval = "int", args = { }, const = true, static = false, },
            { name = "fuel_energy", rval = "float", args = { }, const = true, static = false, },
            { name = "fuel_pump_terrain", rval = "std::string", args = { }, const = true, static = false, },
            { name = "has_explosion_data", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_explosion_data", rval = "struct fuel_explosion", args = { }, const = false, static = false, },
            { name = "is_reloadable", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_reload_with", rval = "bool", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_reloadable_with", rval = "bool", args = { "const itype_id &", }, const = true, static = false, },
            { name = "can_unload_liquid", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_dangerous", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_tainted", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_soft", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_effect_when_wielded", rval = "bool", args = { "art_effect_passive", }, const = true, static = false, },
            { name = "has_effect_when_worn", rval = "bool", args = { "art_effect_passive", }, const = true, static = false, },
            { name = "has_effect_when_carried", rval = "bool", args = { "art_effect_passive", }, const = true, static = false, },
            { name = "set_snippet", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            --{ name = "operator<", rval = "", args = { "const item &", }, const = true, static = false, },
            { name = "components_to_string", rval = "std::string", args = { }, const = true, static = false, },
            { name = "typeId", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "get_contained", rval = "const item &", args = { }, const = true, static = false, },
            { name = "spill_contents", rval = "bool", args = { "Character &", }, const = false, static = false, },
            { name = "spill_contents", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "can_holster", rval = "bool", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "on_wear", rval = "void", args = { "Character &", }, const = false, static = false, },
            { name = "on_takeoff", rval = "void", args = { "Character &", }, const = false, static = false, },
            { name = "on_wield", rval = "void", args = { "player &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "on_pickup", rval = "void", args = { "Character &", }, const = false, static = false, },
            { name = "on_contents_changed", rval = "void", args = { }, const = false, static = false, },
            { name = "on_damage", rval = "void", args = { "int", "damage_type", }, const = false, static = false, },
            { name = "type_name", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "charges_per_volume", rval = "long", args = { "const units::volume &", }, const = true, static = false, },
            { name = "toolmods", rval = "std::vector< item * >", args = { }, const = false, static = false, },
            { name = "toolmods", rval = "std::vector< const item * >", args = { }, const = true, static = false, },
            { name = "get_use", rval = "const use_function *", args = { "const std::string &", }, const = true, static = false, },
            { name = "get_usable_item", rval = "item *", args = { "const std::string &", }, const = false, static = false, },
            { name = "units_remaining", rval = "int", args = { "const Character &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "units_sufficient", rval = "bool", args = { "const Character &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "has_label", rval = "bool", args = { }, const = true, static = false, },
            { name = "label", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "has_infinite_charges", rval = "bool", args = { }, const = true, static = false, },
            { name = "contextualize_skill", rval = "skill_id", args = { "const skill_id &", }, const = true, static = false, },
            { name = "release_monster", rval = "int", args = { "const tripoint &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "contain_monster", rval = "int", args = { "const tripoint &", }, const = false, static = false, },
            { name = "age", rval = "time_duration", args = { }, const = true, static = false, },
            { name = "set_age", rval = "void", args = { "const time_duration &", }, const = false, static = false, },
            { name = "birthday", rval = "time_point", args = { }, const = true, static = false, },
            { name = "set_birthday", rval = "void", args = { "const time_point &", }, const = false, static = false, },
            { name = "get_gun_ups_drain", rval = "int", args = { }, const = true, static = false, },
            { name = "get_min_str", rval = "int", args = { }, const = true, static = false, },
            { name = "get_making", rval = "const recipe &", args = { }, const = true, static = false, },
            { name = "get_comestible", rval = "const cata::optional< islot_comestible > &", args = { }, const = true, static = false, },
            { name = "set_favorite", rval = "void", args = { "const bool", }, const = false, static = false, },
            { name = "nname", rval = "std::string", args = { "const itype_id &", }, optional_args = { "unsigned int", }, const = false, static = true, },
            { name = "find_type", rval = "const itype *", args = { "const itype_id &", }, const = false, static = true, },
            { name = "count_by_charges", rval = "bool", args = { "const itype_id &", }, const = false, static = true, },
            { name = "type_is_defined", rval = "bool", args = { "const itype_id &", }, const = false, static = true, },
        }
    },
    item_location = {
        cpp_name = "item_location",
        new = {
            { },
            { "const item_location &", },
            --{ "item_location &&", },
            { "Character &", "item *", },
            { "Character &", "std::list< item > *", },
            { "const map_cursor &", "item *", },
            { "const map_cursor &", "std::list< item > *", },
            { "const vehicle_cursor &", "item *", },
            { "const vehicle_cursor &", "std::list< item > *", },
        },
        attributes = {
            nowhere = { type = "item_location", writable = false, reference = false, static = true, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const item_location &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "item_location &&", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "charges_in_stack", rval = "long", args = { "unsigned int", }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "const item_location &", }, const = true, static = false, },
            --{ name = "operator!=", rval = "", args = { "const item_location &", }, const = true, static = false, },
            --{ name = "operator bool", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator*", rval = "", args = { }, const = false, static = false, },
            --{ name = "operator*", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator->", rval = "", args = { }, const = false, static = false, },
            --{ name = "operator->", rval = "", args = { }, const = true, static = false, },
            { name = "where", rval = "item_location::type", args = { }, const = true, static = false, },
            { name = "position", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "describe", rval = "std::string", args = { }, optional_args = { "const Character *", }, const = true, static = false, },
            { name = "obtain", rval = "int", args = { "Character &", }, optional_args = { "long", }, const = false, static = false, },
            { name = "obtain_cost", rval = "int", args = { "const Character &", }, optional_args = { "long", }, const = true, static = false, },
            { name = "remove_item", rval = "void", args = { }, const = false, static = false, },
            { name = "get_item", rval = "item *", args = { }, const = false, static = false, },
            { name = "get_item", rval = "const item *", args = { }, const = true, static = false, },
            { name = "clone", rval = "item_location", args = { }, const = true, static = false, },
            { name = "set_should_stack", rval = "void", args = { "bool", }, const = true, static = false, },
        }
    },
    itype = {
        cpp_name = "itype",
        new = {
            { },
        },
        attributes = {
            container = { type = "cata::optional< islot_container >", writable = true, reference = false, static = false, },
            tool = { type = "cata::optional< islot_tool >", writable = true, reference = false, static = false, },
            comestible = { type = "cata::optional< islot_comestible >", writable = true, reference = false, static = false, },
            brewable = { type = "cata::optional< islot_brewable >", writable = true, reference = false, static = false, },
            armor = { type = "cata::optional< islot_armor >", writable = true, reference = false, static = false, },
            pet_armor = { type = "cata::optional< islot_pet_armor >", writable = true, reference = false, static = false, },
            book = { type = "cata::optional< islot_book >", writable = true, reference = false, static = false, },
            mod = { type = "cata::optional< islot_mod >", writable = true, reference = false, static = false, },
            engine = { type = "cata::optional< islot_engine >", writable = true, reference = false, static = false, },
            wheel = { type = "cata::optional< islot_wheel >", writable = true, reference = false, static = false, },
            fuel = { type = "cata::optional< islot_fuel >", writable = true, reference = false, static = false, },
            gun = { type = "cata::optional< islot_gun >", writable = true, reference = false, static = false, },
            gunmod = { type = "cata::optional< islot_gunmod >", writable = true, reference = false, static = false, },
            magazine = { type = "cata::optional< islot_magazine >", writable = true, reference = false, static = false, },
            bionic = { type = "cata::optional< islot_bionic >", writable = true, reference = false, static = false, },
            ammo = { type = "cata::optional< islot_ammo >", writable = true, reference = false, static = false, },
            seed = { type = "cata::optional< islot_seed >", writable = true, reference = false, static = false, },
            artifact = { type = "cata::optional< islot_artifact >", writable = true, reference = false, static = false, },
            weight = { type = "units::mass", writable = true, reference = false, static = false, },
            volume = { type = "units::volume", writable = true, reference = false, static = false, },
            integral_volume = { type = "units::volume", writable = true, reference = false, static = false, },
            stack_size = { type = "int", writable = true, reference = false, static = false, },
            price = { type = "int", writable = true, reference = false, static = false, },
            price_post = { type = "int", writable = true, reference = false, static = false, },
            looks_like = { type = "std::string", writable = true, reference = false, static = false, },
            snippet_category = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            default_container = { type = "cata::optional< itype_id >", writable = true, reference = false, static = false, },
            qualities = { type = "std::map< quality_id, int >", writable = true, reference = false, static = false, },
            properties = { type = "std::map< std::string, std::string >", writable = true, reference = false, static = false, },
            materials = { type = "std::vector< material_id >", writable = true, reference = false, static = false, },
            use_methods = { type = "std::map< std::string, use_function >", writable = true, reference = false, static = false, },
            drop_action = { type = "use_function", writable = true, reference = false, static = false, },
            emits = { type = "std::set< emit_id >", writable = true, reference = false, static = false, },
            item_tags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            techniques = { type = "std::set< matec_id >", writable = true, reference = false, static = false, },
            min_skills = { type = "std::map< skill_id, int >", writable = true, reference = false, static = false, },
            min_str = { type = "int", writable = true, reference = false, static = false, },
            min_dex = { type = "int", writable = true, reference = false, static = false, },
            min_int = { type = "int", writable = true, reference = false, static = false, },
            min_per = { type = "int", writable = true, reference = false, static = false, },
            phase = { type = "phase_id", writable = true, reference = false, static = false, },
            explosion = { type = "explosion_data", writable = true, reference = false, static = false, },
            explode_in_fire = { type = "bool", writable = true, reference = false, static = false, },
            stackable = { type = "bool", writable = true, reference = false, static = false, },
            countdown_destroy = { type = "bool", writable = true, reference = false, static = false, },
            countdown_interval = { type = "int", writable = true, reference = false, static = false, },
            countdown_action = { type = "use_function", writable = true, reference = false, static = false, },
            rigid = { type = "bool", writable = true, reference = false, static = false, },
            melee = { type = "std::array< int, NUM_DT >", writable = true, reference = false, static = false, },
            thrown_damage = { type = "damage_instance", writable = true, reference = false, static = false, },
            m_to_hit = { type = "int", writable = true, reference = false, static = false, },
            light_emission = { type = "unsigned", writable = true, reference = false, static = false, },
            category = { type = "item_category", writable = false, reference = false, static = false, },
            sym = { type = "std::string", writable = true, reference = false, static = false, },
            color = { type = "nc_color", writable = true, reference = false, static = false, },
            damage_min = { type = "int", writable = true, reference = false, static = false, },
            damage_max = { type = "int", writable = true, reference = false, static = false, },
            repair = { type = "std::set< itype_id >", writable = true, reference = false, static = false, },
            magazines = { type = "std::map< ammotype, std::set< itype_id > >", writable = true, reference = false, static = false, },
            magazine_default = { type = "std::map< ammotype, itype_id >", writable = true, reference = false, static = false, },
            magazine_well = { type = "units::volume", writable = true, reference = false, static = false, },
            layer = { type = "layer_level", writable = true, reference = false, static = false, },
            insulation_factor = { type = "float", writable = true, reference = false, static = false, },
            --damage_scale = { type = "int", writable = false, reference = false, static = true, },
        },
        functions = {
            { name = "get_item_type_string", rval = "std::string", args = { }, const = true, static = false, },
            { name = "nname", rval = "std::string", args = { "unsigned int", }, const = true, static = false, },
            { name = "get_id", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "count_by_charges", rval = "bool", args = { }, const = true, static = false, },
            { name = "charges_default", rval = "int", args = { }, const = true, static = false, },
            { name = "charges_to_use", rval = "int", args = { }, const = true, static = false, },
            { name = "maximum_charges", rval = "int", args = { }, const = true, static = false, },
            { name = "charges_per_volume", rval = "long", args = { "const units::volume &", }, const = true, static = false, },
            { name = "has_use", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_use", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "get_use", rval = "const use_function *", args = { "const std::string &", }, const = true, static = false, },
            { name = "invoke", rval = "long", args = { "player &", "item &", "const tripoint &", }, const = true, static = false, },
            { name = "invoke", rval = "long", args = { "player &", "item &", "const tripoint &", "const std::string &", }, const = true, static = false, },
            { name = "tick", rval = "long", args = { "player &", "item &", "const tripoint &", }, const = true, static = false, },
        }
    },
    lua_game = {
        cpp_name = "game",
        new = {
            { },
        },
        attributes = {
            m = { type = "map", writable = false, reference = true, static = false, },
            u = { type = "player", writable = false, reference = true, static = false, },
            scent = { type = "scent_map", writable = false, reference = true, static = false, },
            events = { type = "event_manager", writable = false, reference = true, static = false, },
            critter_tracker = { type = "pimpl< Creature_tracker >", writable = true, reference = false, static = false, },
            faction_manager_ptr = { type = "pimpl< faction_manager >", writable = true, reference = false, static = false, },
            new_faction_manager_ptr = { type = "pimpl< new_faction_manager >", writable = true, reference = false, static = false, },
            uquit = { type = "quit_status", writable = true, reference = false, static = false, },
            new_game = { type = "bool", writable = true, reference = false, static = false, },
            temperature = { type = "signed char", writable = true, reference = false, static = false, },
            lightning_active = { type = "bool", writable = true, reference = false, static = false, },
            weather = { type = "weather_type", writable = true, reference = false, static = false, },
            winddirection = { type = "int", writable = true, reference = false, static = false, },
            windspeed = { type = "int", writable = true, reference = false, static = false, },
            weather_precise = { type = "pimpl< w_point >", writable = true, reference = false, static = false, },
            scen = { type = "scenario", writable = false, reference = false, static = false, },
            coming_to_stairs = { type = "std::vector< monster >", writable = true, reference = false, static = false, },
            monstairz = { type = "int", writable = true, reference = false, static = false, },
            ter_view_x = { type = "int", writable = true, reference = false, static = false, },
            ter_view_y = { type = "int", writable = true, reference = false, static = false, },
            ter_view_z = { type = "int", writable = true, reference = false, static = false, },
            w_terrain = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_overmap = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_omlegend = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_minimap = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_pixel_minimap = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_panel_adm_ptr = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_panel_adm = { type = "catacurses::window", writable = true, reference = false, static = false, },
            w_blackspace = { type = "catacurses::window", writable = true, reference = false, static = false, },
            driving_view_offset = { type = "point", writable = true, reference = false, static = false, },
            debug_pathfinding = { type = "bool", writable = true, reference = false, static = false, },
            displaying_scent = { type = "bool", writable = true, reference = false, static = false, },
            show_panel_adm = { type = "bool", writable = true, reference = false, static = false, },
            right_sidebar = { type = "bool", writable = true, reference = false, static = false, },
            reinitmap = { type = "bool", writable = true, reference = false, static = false, },
            fullscreen = { type = "bool", writable = true, reference = false, static = false, },
            was_fullscreen = { type = "bool", writable = true, reference = false, static = false, },
            pixel_minimap_option = { type = "int", writable = true, reference = false, static = false, },
            auto_travel_mode = { type = "bool", writable = true, reference = false, static = false, },
            safe_mode = { type = "safe_mode_type", writable = true, reference = false, static = false, },
            turnssincelastmon = { type = "int", writable = true, reference = false, static = false, },
            wind_direction_override = { type = "cata::optional< int >", writable = true, reference = false, static = false, },
            windspeed_override = { type = "cata::optional< int >", writable = true, reference = false, static = false, },
            weather_override = { type = "weather_type", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "handle_all_liquid", rval = "void", args = { "item", "int", }, const = false, static = false, },
            { name = "consume_liquid", rval = "bool", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "handle_liquid_from_ground", rval = "bool", args = { "std::list< item >::iterator", "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "handle_liquid_from_container", rval = "bool", args = { "std::list< item >::iterator", "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "handle_liquid_from_container", rval = "bool", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "handle_liquid", rval = "bool", args = { "item &", }, optional_args = { "item *", "int", "const tripoint *", "const vehicle *", "const int", "const monster *", }, const = false, static = false, },
            { name = "get_liquid_target", rval = "bool", args = { "item &", "item *const", "const int", "const tripoint *", "const vehicle *const", "const monster *const", "liquid_dest_opt &", }, const = false, static = false, },
            { name = "perform_liquid_transfer", rval = "bool", args = { "item &", "const tripoint *", "const vehicle *const", "const int", "const monster *const", "liquid_dest_opt &", }, const = false, static = false, },
            { name = "load_static_data", rval = "void", args = { }, const = false, static = false, },
            { name = "load_core_data", rval = "void", args = { "loading_ui &", }, const = false, static = false, },
            { name = "is_core_data_loaded", rval = "bool", args = { }, const = true, static = false, },
            { name = "check_mod_data", rval = "bool", args = { "const std::vector< mod_id > &", "loading_ui &", }, const = false, static = false, },
            { name = "load_world_modfiles", rval = "void", args = { "loading_ui &", }, const = false, static = false, },
            { name = "get_player_base_save_path", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_world_base_save_path", rval = "std::string", args = { }, const = true, static = false, },
            { name = "load_packs", rval = "bool", args = { "const std::string &", "const std::vector< mod_id > &", "loading_ui &", }, const = false, static = false, },
            { name = "init_ui", rval = "void", args = { }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "setup", rval = "void", args = { }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "std::ostream &", }, const = false, static = false, },
            { name = "unserialize", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "unserialize_master", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "dump_stats", rval = "bool", args = { "const std::string &", "dump_mode", "const std::vector< std::string > &", }, const = false, static = false, },
            { name = "save", rval = "bool", args = { }, const = false, static = false, },
            { name = "list_active_characters", rval = "std::vector< std::string >", args = { }, const = false, static = false, },
            { name = "write_memorial_file", rval = "void", args = { "std::string", }, const = false, static = false, },
            { name = "cleanup_at_end", rval = "bool", args = { }, const = false, static = false, },
            { name = "start_calendar", rval = "void", args = { }, const = false, static = false, },
            { name = "do_turn", rval = "bool", args = { }, const = false, static = false, },
            { name = "draw", rval = "void", args = { }, const = false, static = false, },
            { name = "draw_ter", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "draw_ter", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", "bool", }, const = false, static = false, },
            { name = "draw_panels", rval = "void", args = { }, const = false, static = false, },
            { name = "draw_panels", rval = "void", args = { "size_t", "size_t", }, const = false, static = false, },
            { name = "get_veh_dir_indicator_location", rval = "cata::optional< tripoint >", args = { "bool", }, const = true, static = false, },
            { name = "draw_veh_dir_indicator", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "explosion", rval = "void", args = { "const tripoint &", "float", }, optional_args = { "float", "bool", "int", "float", }, const = false, static = false, },
            { name = "explosion", rval = "void", args = { "const tripoint &", "const explosion_data &", }, const = false, static = false, },
            { name = "do_blast", rval = "void", args = { "const tripoint &", "float", "float", "bool", }, const = false, static = false, },
            { name = "shrapnel", rval = "std::vector< tripoint >", args = { "const tripoint &", "int", "int", "float", }, optional_args = { "int", }, const = false, static = false, },
            { name = "flashbang", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "vertical_move", rval = "void", args = { "int", "bool", }, const = false, static = false, },
            { name = "find_or_make_stairs", rval = "cata::optional< tripoint >", args = { "map &", "int", "bool &", }, const = false, static = false, },
            { name = "vertical_shift", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "vertical_notes", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "use_computer", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "resonance_cascade", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "scrambler_blast", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "emp_blast", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            --{ name = "critter_by_id", rval = "template Creature * game::critter_by_id< Creature", args = { "int", }, optional_args = { "typename T", }, const = false, static = false, },
            --{ name = "critter_at", rval = "T *", args = { "const tripoint &", }, optional_args = { "typename T", "bool", }, const = false, static = false, },
            --{ name = "critter_at", rval = "const T *", args = { "const tripoint &", }, optional_args = { "typename T", "bool", }, const = true, static = false, },
            --{ name = "shared_from", rval = "template std::shared_ptr< npc > game::shared_from< npc", args = { "const T &", }, optional_args = { "typename T", }, const = false, static = false, },
            { name = "summon_mon", rval = "monster *", args = { "const mtype_id &", "const tripoint &", }, const = false, static = false, },
            { name = "add_zombie", rval = "bool", args = { "monster &", }, const = false, static = false, },
            { name = "add_zombie", rval = "bool", args = { "monster &", "bool", }, const = false, static = false, },
            { name = "num_creatures", rval = "size_t", args = { }, const = true, static = false, },
            { name = "update_zombie_pos", rval = "bool", args = { "const monster &", "const tripoint &", }, const = false, static = false, },
            { name = "remove_zombie", rval = "void", args = { "const monster &", }, const = false, static = false, },
            { name = "clear_zombies", rval = "void", args = { }, const = false, static = false, },
            { name = "spawn_hallucination", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "swap_critters", rval = "bool", args = { "Creature &", "Creature &", }, const = false, static = false, },
            --{ name = "all_creatures", rval = "game::Creature_range", args = { }, const = false, static = false, },
            --{ name = "all_monsters", rval = "game::monster_range", args = { }, const = false, static = false, },
            --{ name = "all_npcs", rval = "game::npc_range", args = { }, const = false, static = false, },
            --{ name = "get_creatures_if", rval = "std::vector< Creature * >", args = { "const std::function< bool(const Creature &)> &", }, const = false, static = false, },
            --{ name = "get_npcs_if", rval = "std::vector< npc * >", args = { "const std::function< bool(const npc &)> &", }, const = false, static = false, },
            --{ name = "get_creature_if", rval = "Creature *", args = { "const std::function< bool(const Creature &)> &", }, const = false, static = false, },
            { name = "is_empty", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "is_in_sunlight", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "is_sheltered", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "revive_corpse", rval = "bool", args = { "const tripoint &", "item &", }, const = false, static = false, },
            { name = "save_cyborg", rval = "void", args = { "item *", "const tripoint", "player &", }, const = false, static = false, },
            { name = "plfire_check", rval = "bool", args = { "const targeting_data &", }, const = false, static = false, },
            { name = "plfire", rval = "bool", args = { }, const = false, static = false, },
            { name = "plfire", rval = "bool", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "cancel_activity", rval = "void", args = { }, const = false, static = false, },
            { name = "cancel_activity_query", rval = "bool", args = { "const std::string &", }, const = false, static = false, },
            { name = "cancel_activity_or_ignore_query", rval = "bool", args = { "const distraction_type", "const std::string &", }, const = false, static = false, },
            { name = "moving_vehicle_dismount", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "remoteveh", rval = "vehicle *", args = { }, const = false, static = false, },
            { name = "setremoteveh", rval = "void", args = { "vehicle *", }, const = false, static = false, },
            { name = "assign_mission_id", rval = "int", args = { }, const = false, static = false, },
            { name = "find_npc", rval = "npc *", args = { "int", }, const = false, static = false, },
            { name = "load_npcs", rval = "void", args = { }, const = false, static = false, },
            { name = "reload_npcs", rval = "void", args = { }, const = false, static = false, },
            { name = "kill_count", rval = "int", args = { "const mtype_id &", }, const = false, static = false, },
            { name = "kill_count", rval = "int", args = { "const species_id &", }, const = false, static = false, },
            { name = "increase_kill_count", rval = "void", args = { "const mtype_id &", }, const = false, static = false, },
            { name = "record_npc_kill", rval = "void", args = { "const npc &", }, const = false, static = false, },
            { name = "add_npc_follower", rval = "void", args = { "const int &", }, const = false, static = false, },
            { name = "remove_npc_follower", rval = "void", args = { "const int &", }, const = false, static = false, },
            { name = "get_follower_list", rval = "std::set< int >", args = { }, const = false, static = false, },
            { name = "validate_npc_followers", rval = "void", args = { }, const = false, static = false, },
            { name = "validate_camps", rval = "void", args = { }, const = false, static = false, },
            { name = "get_npc_kill", rval = "std::list< std::string >", args = { }, const = false, static = false, },
            { name = "teleport", rval = "void", args = { }, optional_args = { "player *", "bool", }, const = false, static = false, },
            { name = "plswim", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "catch_a_monster", rval = "void", args = { "std::vector< monster *> &", "const tripoint &", "player *", "const time_duration &", }, const = false, static = false, },
            { name = "get_fishable", rval = "std::vector< monster * >", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "fling_creature", rval = "void", args = { "Creature *", "const int &", "float", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "nuke", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "natural_light_level", rval = "float", args = { "int", }, const = true, static = false, },
            { name = "light_level", rval = "unsigned char", args = { "int", }, const = true, static = false, },
            { name = "reset_light_level", rval = "void", args = { }, const = false, static = false, },
            { name = "assign_npc_id", rval = "int", args = { }, const = false, static = false, },
            { name = "is_hostile_nearby", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "is_hostile_very_close", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "refresh_all", rval = "void", args = { }, const = false, static = false, },
            { name = "update_map", rval = "void", args = { "player &", }, const = false, static = false, },
            { name = "update_map", rval = "point", args = { "int &", "int &", }, const = false, static = false, },
            { name = "update_overmap_seen", rval = "void", args = { }, const = false, static = false, },
            { name = "process_artifact", rval = "void", args = { "item &", "player &", }, const = false, static = false, },
            { name = "add_artifact_messages", rval = "void", args = { "const std::vector< art_effect_passive > &", }, const = false, static = false, },
            { name = "add_artifact_dreams", rval = "void", args = { }, const = false, static = false, },
            { name = "peek", rval = "void", args = { }, const = false, static = false, },
            { name = "peek", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "look_debug", rval = "cata::optional< tripoint >", args = { }, const = false, static = false, },
            { name = "check_zone", rval = "bool", args = { "const zone_type_id &", "const tripoint &", }, const = true, static = false, },
            { name = "check_near_zone", rval = "bool", args = { "const zone_type_id &", "const tripoint &", }, const = true, static = false, },
            { name = "is_zones_manager_open", rval = "bool", args = { }, const = true, static = false, },
            { name = "zones_manager", rval = "void", args = { }, const = false, static = false, },
            { name = "look_around", rval = "cata::optional< tripoint >", args = { }, const = false, static = false, },
            { name = "look_around", rval = "look_around_result", args = { "catacurses::window", "tripoint &", "const tripoint &", "bool", "bool", "bool", }, const = false, static = false, },
            { name = "pre_print_all_tile_info", rval = "void", args = { "const tripoint &", "const catacurses::window &", "int &", "int", "const visibility_variables &", }, const = false, static = false, },
            { name = "print_all_tile_info", rval = "void", args = { "const tripoint &", "const catacurses::window &", "const std::string &", "int", "int &", "int", "bool", "const visibility_variables &", }, const = false, static = false, },
            { name = "extended_description", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "draw_trail_to_square", rval = "void", args = { "const tripoint &", "bool", }, const = false, static = false, },
            { name = "inv_for_filter", rval = "int", args = { "const std::string &", "item_filter", }, optional_args = { "const std::string &", }, const = false, static = false, },
            { name = "inv_for_all", rval = "int", args = { "const std::string &", }, optional_args = { "const std::string &", }, const = false, static = false, },
            { name = "inv_for_flag", rval = "int", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "inv_for_id", rval = "int", args = { "const itype_id &", "const std::string &", }, const = false, static = false, },
            --{ name = "inventory_item_menu", rval = "int", args = { "int", }, optional_args = { "int", "int", "inventory_item_menu_positon", }, const = false, static = false, },
            { name = "inv_map_splice", rval = "item_location", args = { "item_filter", "const std::string &", }, optional_args = { "int", "const std::string &", }, const = false, static = false, },
            { name = "has_gametype", rval = "bool", args = { }, const = true, static = false, },
            { name = "gametype", rval = "special_game_id", args = { }, const = true, static = false, },
            { name = "toggle_fullscreen", rval = "void", args = { }, const = false, static = false, },
            { name = "toggle_pixel_minimap", rval = "void", args = { }, const = false, static = false, },
            { name = "toggle_panel_adm", rval = "void", args = { }, const = false, static = false, },
            { name = "reload_tileset", rval = "void", args = { }, const = false, static = false, },
            { name = "temp_exit_fullscreen", rval = "void", args = { }, const = false, static = false, },
            { name = "reenter_fullscreen", rval = "void", args = { }, const = false, static = false, },
            { name = "zoom_in", rval = "void", args = { }, const = false, static = false, },
            { name = "zoom_out", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_zoom", rval = "void", args = { }, const = false, static = false, },
            { name = "get_moves_since_last_save", rval = "int", args = { }, const = true, static = false, },
            { name = "get_user_action_counter", rval = "int", args = { }, const = true, static = false, },
            { name = "get_temperature", rval = "int", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_levx", rval = "int", args = { }, const = true, static = false, },
            { name = "get_levy", rval = "int", args = { }, const = true, static = false, },
            { name = "get_levz", rval = "int", args = { }, const = true, static = false, },
            { name = "load_map", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_cur_om", rval = "overmap &", args = { }, const = true, static = false, },
            { name = "get_cur_weather_gen", rval = "const weather_generator &", args = { }, const = true, static = false, },
            { name = "allies", rval = "std::vector< npc * >", args = { }, const = false, static = false, },
            { name = "set_driving_view_offset", rval = "void", args = { "const point &", }, const = false, static = false, },
            { name = "calc_driving_offset", rval = "void", args = { }, optional_args = { "vehicle *", }, const = false, static = false, },
            { name = "open_gate", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "knockback", rval = "void", args = { "const tripoint &", "const tripoint &", "int", "int", "int", }, const = false, static = false, },
            { name = "knockback", rval = "void", args = { "std::vector< tripoint > &", "int", "int", "int", }, const = false, static = false, },
            { name = "shockwave", rval = "void", args = { "const tripoint &", "int", "int", "int", "int", "bool", }, const = false, static = false, },
            { name = "draw_explosion", rval = "void", args = { "const tripoint &", "int", "const nc_color &", }, const = false, static = false, },
            { name = "draw_custom_explosion", rval = "void", args = { "const tripoint &", "const std::map< tripoint, nc_color > &", }, const = false, static = false, },
            { name = "draw_bullet", rval = "void", args = { "const tripoint &", "int", "const std::vector< tripoint > &", "char", }, const = false, static = false, },
            { name = "draw_hit_mon", rval = "void", args = { "const tripoint &", "const monster &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "draw_hit_player", rval = "void", args = { "const player &", "int", }, const = false, static = false, },
            { name = "draw_line", rval = "void", args = { "const tripoint &", "const tripoint &", "const std::vector< tripoint > &", }, const = false, static = false, },
            { name = "draw_line", rval = "void", args = { "const tripoint &", "const std::vector< tripoint > &", }, const = false, static = false, },
            { name = "draw_weather", rval = "void", args = { "const weather_printable &", }, const = false, static = false, },
            { name = "draw_sct", rval = "void", args = { }, const = false, static = false, },
            { name = "draw_zones", rval = "void", args = { "const tripoint &", "const tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "draw_critter", rval = "void", args = { "const Creature &", "const tripoint &", }, const = false, static = false, },
            { name = "draw_cursor", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "draw_highlight", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "is_in_viewport", rval = "bool", args = { "const tripoint &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "check_safe_mode_allowed", rval = "bool", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "set_safe_mode", rval = "void", args = { "safe_mode_type", }, const = false, static = false, },
            { name = "exam_vehicle", rval = "void", args = { "vehicle &", }, optional_args = { "int", "int", }, const = false, static = false, },
            { name = "forced_door_closing", rval = "bool", args = { "const tripoint &", "const ter_id &", "int", }, const = false, static = false, },
            { name = "load", rval = "bool", args = { "const std::string &", }, const = false, static = false, },
            { name = "eat", rval = "void", args = { }, optional_args = { "int", }, const = false, static = false, },
            { name = "reload_item", rval = "void", args = { }, const = false, static = false, },
            { name = "reload_weapon", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "place_player", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "place_player_overmap", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "unload", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "unload", rval = "void", args = { }, optional_args = { "int", }, const = false, static = false, },
            { name = "get_seed", rval = "unsigned int", args = { }, const = true, static = false, },
            { name = "set_npcs_dirty", rval = "void", args = { }, const = false, static = false, },
            { name = "set_critter_died", rval = "void", args = { }, const = false, static = false, },
            { name = "mon_info", rval = "void", args = { "const catacurses::window &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "cleanup_dead", rval = "void", args = { }, const = false, static = false, },
            { name = "draw_pixel_minimap", rval = "void", args = { "const catacurses::window &", }, const = false, static = false, },
            { name = "quicksave", rval = "void", args = { }, const = false, static = false, },
            { name = "disp_NPCs", rval = "void", args = { }, const = false, static = false, },
            { name = "set_nextweather", rval = "void", args = { "time_point", }, const = false, static = false, },
        }
    },
    ma_buff = {
        cpp_name = "ma_buff",
        string_id = "mabuff_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "mabuff_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            reqs = { type = "ma_requirements", writable = true, reference = false, static = false, },
            buff_duration = { type = "time_duration", writable = true, reference = false, static = false, },
            max_stacks = { type = "int", writable = true, reference = false, static = false, },
            dodges_bonus = { type = "int", writable = true, reference = false, static = false, },
            blocks_bonus = { type = "int", writable = true, reference = false, static = false, },
            bonuses = { type = "bonus_container", writable = true, reference = false, static = false, },
            quiet = { type = "bool", writable = true, reference = false, static = false, },
            melee_allowed = { type = "bool", writable = true, reference = false, static = false, },
            throw_immune = { type = "bool", writable = true, reference = false, static = false, },
            strictly_unarmed = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "apply_buff", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "is_valid_player", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "apply_player", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "hit_bonus", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "dodge_bonus", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "speed_bonus", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "block_bonus", rval = "int", args = { "const player &", }, const = true, static = false, },
            { name = "armor_bonus", rval = "int", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "damage_bonus", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "damage_mult", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "is_throw_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_quiet", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_melee", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_effect_id", rval = "efftype_id", args = { }, const = true, static = false, },
            { name = "get_description", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "from_effect", rval = "const ma_buff *", args = { "const effect &", }, const = false, static = true, },
        }
    },
    ma_technique = {
        cpp_name = "ma_technique",
        string_id = "matec_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "matec_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            goal = { type = "std::string", writable = true, reference = false, static = false, },
            flags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            player_message = { type = "std::string", writable = true, reference = false, static = false, },
            npc_message = { type = "std::string", writable = true, reference = false, static = false, },
            defensive = { type = "bool", writable = true, reference = false, static = false, },
            dummy = { type = "bool", writable = true, reference = false, static = false, },
            crit_tec = { type = "bool", writable = true, reference = false, static = false, },
            reqs = { type = "ma_requirements", writable = true, reference = false, static = false, },
            down_dur = { type = "int", writable = true, reference = false, static = false, },
            stun_dur = { type = "int", writable = true, reference = false, static = false, },
            knockback_dist = { type = "int", writable = true, reference = false, static = false, },
            knockback_spread = { type = "float", writable = true, reference = false, static = false, },
            aoe = { type = "std::string", writable = true, reference = false, static = false, },
            disarms = { type = "bool", writable = true, reference = false, static = false, },
            dodge_counter = { type = "bool", writable = true, reference = false, static = false, },
            block_counter = { type = "bool", writable = true, reference = false, static = false, },
            miss_recovery = { type = "bool", writable = true, reference = false, static = false, },
            grab_break = { type = "bool", writable = true, reference = false, static = false, },
            weighting = { type = "int", writable = true, reference = false, static = false, },
            bonuses = { type = "bonus_container", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "get_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "is_valid_player", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "damage_bonus", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "damage_multiplier", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
            { name = "move_cost_multiplier", rval = "float", args = { "const player &", }, const = true, static = false, },
            { name = "move_cost_penalty", rval = "float", args = { "const player &", }, const = true, static = false, },
            { name = "armor_penetration", rval = "float", args = { "const player &", "damage_type", }, const = true, static = false, },
        }
    },
    map = {
        cpp_name = "map",
        new = {
            { },
            { "int", },
            { "int", "bool", },
            { "bool", },
        },
        attributes = {
            dirty_vehicle_list = { type = "std::set< vehicle * >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "set_transparency_cache_dirty", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "set_outside_cache_dirty", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "set_floor_cache_dirty", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "set_pathfinding_cache_dirty", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "use_amount_square", rval = "std::list< item >", args = { "const tripoint &", "const itype_id &", "long &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "use_amount", rval = "std::list< item >", args = { "const tripoint &", "const int", "const itype_id", "long &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "use_charges", rval = "std::list< item >", args = { "const tripoint &", "const int", "const itype_id", "long &", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "drop_everything", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "drop_furniture", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "drop_items", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "drop_vehicle", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "drop_fields", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "map &&", }, const = false, static = false, },
            { name = "set_memory_seen_cache_dirty", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "invalidate_map_cache", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "check_and_set_seen_cache", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "on_vehicle_moved", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "apparent_light_at", rval = "lit_level", args = { "const tripoint &", "const visibility_variables &", }, const = true, static = false, },
            { name = "get_visibility", rval = "visibility_type", args = { "const lit_level", "const visibility_variables &", }, const = true, static = false, },
            { name = "apply_vision_effects", rval = "bool", args = { "const catacurses::window &", "const visibility_type", }, const = true, static = false, },
            { name = "get_wind_blockers", rval = "std::tuple< maptile, maptile, maptile >", args = { "const int &", "const tripoint &", }, const = false, static = false, },
            { name = "draw", rval = "void", args = { "const catacurses::window &", "const tripoint &", }, const = false, static = false, },
            { name = "drawsq", rval = "void", args = { "const catacurses::window &", "player &", "const tripoint &", }, optional_args = { "const bool", "const bool", }, const = true, static = false, },
            { name = "drawsq", rval = "void", args = { "const catacurses::window &", "player &", "const tripoint &", "const bool", "const bool", "const tripoint &", }, optional_args = { "const bool", "const bool", "const bool", }, const = true, static = false, },
            { name = "save", rval = "void", args = { }, const = false, static = false, },
            { name = "load", rval = "void", args = { "const int", "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "shift", rval = "void", args = { "const int", "const int", }, const = false, static = false, },
            { name = "vertical_shift", rval = "void", args = { "const int", }, const = false, static = false, },
            { name = "clear_spawns", rval = "void", args = { }, const = false, static = false, },
            { name = "clear_traps", rval = "void", args = { }, const = false, static = false, },
            { name = "maptile_at", rval = "const maptile", args = { "const tripoint &", }, const = true, static = false, },
            { name = "maptile_at", rval = "maptile", args = { "const tripoint &", }, const = false, static = false, },
            { name = "move_cost", rval = "int", args = { "const int", "const int", }, optional_args = { "const vehicle *", }, const = true, static = false, },
            { name = "impassable", rval = "bool", args = { "int", "int", }, const = true, static = false, },
            { name = "passable", rval = "bool", args = { "int", "int", }, const = true, static = false, },
            { name = "move_cost_ter_furn", rval = "int", args = { "const int", "const int", }, const = true, static = false, },
            { name = "move_cost", rval = "int", args = { "const tripoint &", }, optional_args = { "const vehicle *", }, const = true, static = false, },
            { name = "impassable", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "passable", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "move_cost_ter_furn", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "impassable_ter_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "passable_ter_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "combined_movecost", rval = "int", args = { "const tripoint &", "const tripoint &", }, optional_args = { "const vehicle *", "const int", "const bool", }, const = true, static = false, },
            { name = "valid_move", rval = "bool", args = { "const tripoint &", "const tripoint &", }, optional_args = { "const bool", "const bool", }, const = true, static = false, },
            { name = "ranged_target_size", rval = "double", args = { "const tripoint &", }, const = true, static = false, },
            { name = "sees", rval = "bool", args = { "const tripoint &", "const tripoint &", "int", }, const = true, static = false, },
            { name = "obstacle_coverage", rval = "int", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "coverage", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "clear_path", rval = "bool", args = { "const tripoint &", "const tripoint &", "const int", "const int", "const int", }, const = true, static = false, },
            { name = "find_clear_path", rval = "std::vector< tripoint >", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "accessible_items", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_dir_circle", rval = "std::vector< tripoint >", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "route", rval = "std::vector< tripoint >", args = { "const tripoint &", "const tripoint &", "const pathfinding_settings &", }, optional_args = { "const std::set< tripoint > &", }, const = true, static = false, },
            { name = "get_vehicles", rval = "VehicleList", args = { }, const = false, static = false, },
            { name = "add_vehicle_to_cache", rval = "void", args = { "vehicle *", }, const = false, static = false, },
            { name = "update_vehicle_cache", rval = "void", args = { "vehicle *", "int", }, const = false, static = false, },
            { name = "reset_vehicle_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "clear_vehicle_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "clear_vehicle_list", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "update_vehicle_list", rval = "void", args = { "submap *const", "const int", }, const = false, static = false, },
            { name = "check_vehicle_zones", rval = "bool", args = { "const int", }, const = false, static = false, },
            { name = "get_vehicle_zones", rval = "std::vector< zone_data * >", args = { "const int", }, const = false, static = false, },
            { name = "register_vehicle_zone", rval = "void", args = { "vehicle *", "const int", }, const = false, static = false, },
            { name = "deregister_vehicle_zone", rval = "bool", args = { "zone_data &", }, const = false, static = false, },
            { name = "detach_vehicle", rval = "std::unique_ptr< vehicle >", args = { "vehicle *", }, const = false, static = false, },
            { name = "destroy_vehicle", rval = "void", args = { "vehicle *", }, const = false, static = false, },
            { name = "vehmove", rval = "void", args = { }, const = false, static = false, },
            { name = "vehproceed", rval = "bool", args = { }, const = false, static = false, },
            { name = "get_vehicles", rval = "VehicleList", args = { "const tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "veh_at", rval = "optional_vpart_position", args = { "const tripoint &", }, const = true, static = false, },
            { name = "veh_at_internal", rval = "vehicle *", args = { "const tripoint &", "int &", }, const = false, static = false, },
            { name = "veh_at_internal", rval = "const vehicle *", args = { "const tripoint &", "int &", }, const = true, static = false, },
            { name = "board_vehicle", rval = "void", args = { "const tripoint &", "player *", }, const = false, static = false, },
            { name = "unboard_vehicle", rval = "void", args = { "const vpart_reference &", "player *", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "unboard_vehicle", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "displace_vehicle", rval = "vehicle *", args = { "tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "displace_water", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "vehicle_wheel_traction", rval = "float", args = { "const vehicle &", }, const = true, static = false, },
            { name = "vehicle_vehicle_collision", rval = "float", args = { "vehicle &", "vehicle &", "const std::vector< veh_collision > &", }, const = false, static = false, },
            { name = "shake_vehicle", rval = "int", args = { "vehicle &", "int", "int", }, const = false, static = false, },
            { name = "move_vehicle", rval = "void", args = { "vehicle &", "const tripoint &", "const tileray &", }, const = false, static = false, },
            { name = "set", rval = "void", args = { "const int", "const int", "const ter_id &", "const furn_id &", }, const = false, static = false, },
            { name = "name", rval = "std::string", args = { "const int", "const int", }, const = false, static = false, },
            { name = "has_furn", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "furn", rval = "furn_id", args = { "const int", "const int", }, const = true, static = false, },
            { name = "furn_set", rval = "void", args = { "const int", "const int", "const furn_id &", }, const = false, static = false, },
            { name = "furnname", rval = "std::string", args = { "const int", "const int", }, const = false, static = false, },
            { name = "set", rval = "void", args = { "const tripoint &", "const ter_id &", "const furn_id &", }, const = false, static = false, },
            { name = "name", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "disp_name", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "obstacle_name", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "has_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "furn", rval = "furn_id", args = { "const tripoint &", }, const = true, static = false, },
            { name = "furn_set", rval = "void", args = { "const tripoint &", "const furn_id &", }, const = false, static = false, },
            { name = "furnname", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "can_move_furniture", rval = "bool", args = { "const tripoint &", }, optional_args = { "player *", }, const = false, static = false, },
            { name = "ter", rval = "ter_id", args = { "const int", "const int", }, const = true, static = false, },
            { name = "ter_set", rval = "bool", args = { "const int", "const int", "const ter_id &", }, const = false, static = false, },
            { name = "tername", rval = "std::string", args = { "const int", "const int", }, const = true, static = false, },
            { name = "ter", rval = "ter_id", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_known_connections", rval = "uint8_t", args = { "const tripoint &", "int", }, const = true, static = false, },
            { name = "get_harvest", rval = "const harvest_id &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_harvest_names", rval = "const std::set< std::string > &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_ter_transforms_into", rval = "ter_id", args = { "const tripoint &", }, const = true, static = false, },
            { name = "ter_set", rval = "bool", args = { "const tripoint &", "const ter_id &", }, const = false, static = false, },
            { name = "tername", rval = "std::string", args = { "const tripoint &", }, const = true, static = false, },
            { name = "has_nearby_fire", rval = "bool", args = { "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "sees_some_items", rval = "bool", args = { "const tripoint &", "const Creature &", }, const = true, static = false, },
            { name = "could_see_items", rval = "bool", args = { "const tripoint &", "const Creature &", }, const = true, static = false, },
            { name = "has_items", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "examine", rval = "void", args = { "Character &", "const tripoint &", }, const = false, static = false, },
            { name = "is_harvestable", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "features", rval = "std::string", args = { "const int", "const int", }, const = false, static = false, },
            { name = "has_flag", rval = "bool", args = { "const std::string &", "const int", "const int", }, const = true, static = false, },
            { name = "can_put_items_ter_furn", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_ter", rval = "bool", args = { "const std::string &", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_furn", rval = "bool", args = { "const std::string &", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "const std::string &", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const ter_bitflags", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_ter", rval = "bool", args = { "const ter_bitflags", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_furn", rval = "bool", args = { "const ter_bitflags", "const int", "const int", }, const = true, static = false, },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "const ter_bitflags", "const int", "const int", }, const = true, static = false, },
            { name = "features", rval = "std::string", args = { "const tripoint &", }, const = false, static = false, },
            { name = "has_flag", rval = "bool", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "can_put_items", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "can_put_items_ter_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_ter", rval = "bool", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_furn", rval = "bool", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "const std::string &", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const ter_bitflags", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_ter", rval = "bool", args = { "const ter_bitflags", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_furn", rval = "bool", args = { "const ter_bitflags", "const tripoint &", }, const = true, static = false, },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "const ter_bitflags", "const tripoint &", }, const = true, static = false, },
            { name = "is_bashable", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_bashable_ter", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_bashable_furn", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_bashable_ter_furn", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "bash_strength", rval = "int", args = { "const int", "const int", }, const = true, static = false, },
            { name = "bash_resistance", rval = "int", args = { "const int", "const int", }, const = true, static = false, },
            { name = "bash_rating", rval = "int", args = { "const int", "const int", "const int", }, const = true, static = false, },
            { name = "is_bashable", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_bashable_ter", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_bashable_furn", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "is_bashable_ter_furn", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "bash_strength", rval = "int", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "bash_resistance", rval = "int", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "bash_rating", rval = "int", args = { "const int", "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "make_rubble", rval = "void", args = { "const tripoint &", "const furn_id &", "const bool", "const ter_id &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "make_rubble", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "make_rubble", rval = "void", args = { "const tripoint &", "const furn_id &", "const bool", }, const = false, static = false, },
            { name = "is_divable", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_water_shallow_current", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_outside", rval = "bool", args = { "const int", "const int", }, const = true, static = false, },
            { name = "is_divable", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "is_outside", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "is_water_shallow_current", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "is_last_ter_wall", rval = "bool", args = { "const bool", "const int", "const int", "const int", "const int", "const direction", }, const = true, static = false, },
            { name = "flammable_items_at", rval = "bool", args = { "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "is_flammable", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "random_outdoor_tile", rval = "point", args = { }, const = false, static = false, },
            { name = "draw_line_ter", rval = "void", args = { "const ter_id", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_line_furn", rval = "void", args = { "const furn_id", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_fill_background", rval = "void", args = { "const ter_id", }, const = false, static = false, },
            --{ name = "draw_fill_background", rval = "void", args = { "ter_id(*)()", }, const = false, static = false, },
            { name = "draw_fill_background", rval = "void", args = { "const weighted_int_list< ter_id > &", }, const = false, static = false, },
            { name = "draw_square_ter", rval = "void", args = { "const ter_id", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_square_furn", rval = "void", args = { "const furn_id", "int", "int", "int", "int", }, const = false, static = false, },
            --{ name = "draw_square_ter", rval = "void", args = { "ter_id(*)()", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_square_ter", rval = "void", args = { "const weighted_int_list< ter_id > &", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_rough_circle_ter", rval = "void", args = { "const ter_id", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_rough_circle_furn", rval = "void", args = { "const furn_id", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_circle_ter", rval = "void", args = { "const ter_id", "double", "double", "double", }, const = false, static = false, },
            { name = "draw_circle_ter", rval = "void", args = { "const ter_id", "int", "int", "int", }, const = false, static = false, },
            { name = "draw_circle_furn", rval = "void", args = { "const furn_id", "int", "int", "int", }, const = false, static = false, },
            { name = "add_corpse", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "translate", rval = "void", args = { "const ter_id &", "const ter_id &", }, const = false, static = false, },
            { name = "translate_radius", rval = "void", args = { "const ter_id &", "const ter_id &", "const float", "const tripoint &", }, optional_args = { "const bool", "const bool", }, const = false, static = false, },
            { name = "close_door", rval = "bool", args = { "const tripoint &", "const bool", "const bool", }, const = false, static = false, },
            { name = "open_door", rval = "bool", args = { "const tripoint &", "const bool", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "destroy", rval = "void", args = { "const tripoint &", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "destroy_furn", rval = "void", args = { "const tripoint &", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "crush", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "shoot", rval = "void", args = { "const tripoint &", "projectile &", "const bool", }, const = false, static = false, },
            { name = "collapse_check", rval = "int", args = { "const tripoint &", }, const = false, static = false, },
            { name = "collapse_at", rval = "void", args = { "const tripoint &", "bool", }, const = false, static = false, },
            { name = "smash_items", rval = "void", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "bash", rval = "bash_params", args = { "const tripoint &", "int", }, optional_args = { "bool", "bool", "bool", "const vehicle *", }, const = false, static = false, },
            { name = "hit_with_acid", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "hit_with_fire", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            --{ name = "has_adjacent_furniture_with", rval = "bool", args = { "const tripoint &", "const std::function< bool(const furn_t &)> &", }, const = false, static = false, },
            { name = "mop_spills", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "decay_fields_and_scent", rval = "void", args = { "const time_duration &", }, const = false, static = false, },
            { name = "get_signage", rval = "const std::string", args = { "const tripoint &", }, const = true, static = false, },
            { name = "set_signage", rval = "void", args = { "const tripoint &", "const std::string &", }, const = true, static = false, },
            { name = "delete_signage", rval = "void", args = { "const tripoint &", }, const = true, static = false, },
            { name = "get_radiation", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "set_radiation", rval = "void", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "set_radiation", rval = "void", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "adjust_radiation", rval = "void", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "adjust_radiation", rval = "void", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "temperature", rval = "int &", args = { "const tripoint &", }, const = false, static = false, },
            { name = "set_temperature", rval = "void", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "set_temperature", rval = "void", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "process_active_items", rval = "void", args = { }, const = false, static = false, },
            { name = "trigger_rc_items", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "i_at", rval = "map_stack", args = { "int", "int", }, const = false, static = false, },
            { name = "i_clear", rval = "void", args = { "const int", "const int", }, const = false, static = false, },
            { name = "i_rem", rval = "std::list< item >::iterator", args = { "const point &", "std::list< item >::iterator", }, const = false, static = false, },
            { name = "i_rem", rval = "int", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "i_rem", rval = "void", args = { "const int", "const int", "item *", }, const = false, static = false, },
            { name = "spawn_item", rval = "void", args = { "const int", "const int", "const std::string &", }, optional_args = { "const unsigned", "const long", "const time_point &", "const int", }, const = false, static = false, },
            { name = "add_item_or_charges", rval = "item &", args = { "const int", "const int", "item", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "add_item", rval = "void", args = { "const int", "const int", "item", }, const = false, static = false, },
            { name = "spawn_an_item", rval = "void", args = { "const int", "const int", "item", "const long", "const int", }, const = false, static = false, },
            { name = "place_items", rval = "std::vector< item * >", args = { "const items_location &", "const int", "const int", "const int", "const int", "const int", "bool", "const time_point &", }, optional_args = { "int", "int", }, const = false, static = false, },
            { name = "spawn_items", rval = "void", args = { "const int", "const int", "const std::vector< item > &", }, const = false, static = false, },
            { name = "create_anomaly", rval = "void", args = { "const int", "const int", "artifact_natural_property", }, const = false, static = false, },
            { name = "i_at", rval = "map_stack", args = { "const tripoint &", }, const = false, static = false, },
            { name = "water_from", rval = "item", args = { "const tripoint &", }, const = false, static = false, },
            { name = "i_clear", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "i_rem", rval = "std::list< item >::iterator", args = { "const tripoint &", "std::list< item >::iterator", }, const = false, static = false, },
            { name = "i_rem", rval = "int", args = { "const tripoint &", "const int", }, const = false, static = false, },
            { name = "i_rem", rval = "void", args = { "const tripoint &", "const item *", }, const = false, static = false, },
            { name = "spawn_artifact", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "spawn_natural_artifact", rval = "void", args = { "const tripoint &", "const artifact_natural_property", }, const = false, static = false, },
            { name = "spawn_item", rval = "void", args = { "const tripoint &", "const std::string &", }, optional_args = { "const unsigned", "const long", "const time_point &", "const int", }, const = false, static = false, },
            { name = "max_volume", rval = "units::volume", args = { "const tripoint &", }, const = false, static = false, },
            { name = "free_volume", rval = "units::volume", args = { "const tripoint &", }, const = false, static = false, },
            { name = "stored_volume", rval = "units::volume", args = { "const tripoint &", }, const = false, static = false, },
            { name = "add_item_or_charges", rval = "item &", args = { "const tripoint &", "item", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "add_item_at", rval = "item &", args = { "const tripoint &", "std::list< item >::iterator", "item", }, const = false, static = false, },
            { name = "add_item", rval = "item &", args = { "const tripoint &", "item", }, const = false, static = false, },
            { name = "spawn_an_item", rval = "item &", args = { "const tripoint &", "item", "const long", "const int", }, const = false, static = false, },
            { name = "make_active", rval = "void", args = { "item_location &", }, const = false, static = false, },
            { name = "update_lum", rval = "void", args = { "item_location &", "bool", }, const = false, static = false, },
            { name = "get_rc_items", rval = "std::list< std::pair< tripoint, item * > >", args = { }, optional_args = { "int", "int", "int", }, const = false, static = false, },
            { name = "place_items", rval = "std::vector< item * >", args = { "const items_location &", "const int", "const tripoint &", "const tripoint &", "bool", "const time_point &", }, optional_args = { "int", "int", }, const = false, static = false, },
            { name = "put_items_from_loc", rval = "std::vector< item * >", args = { "const items_location &", "const tripoint &", }, optional_args = { "const time_point &", }, const = false, static = false, },
            { name = "spawn_items", rval = "std::vector< item * >", args = { "const tripoint &", "const std::vector< item > &", }, const = false, static = false, },
            { name = "create_anomaly", rval = "void", args = { "const tripoint &", "artifact_natural_property", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "item_from", rval = "item *", args = { "const tripoint &", "const size_t", }, const = false, static = false, },
            { name = "item_from", rval = "item *", args = { "vehicle *", "const int", "const size_t", }, const = false, static = false, },
            { name = "trap_set", rval = "void", args = { "const tripoint &", "const trap_id", }, const = false, static = false, },
            { name = "tr_at", rval = "const trap &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "disarm_trap", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "remove_trap", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "trap_locations", rval = "const std::vector< tripoint > &", args = { "const trap_id", }, const = true, static = false, },
            { name = "create_burnproducts", rval = "void", args = { "const tripoint &", "const item &", "const units::mass &", }, const = false, static = false, },
            { name = "process_fields", rval = "bool", args = { }, const = false, static = false, },
            { name = "process_fields_in_submap", rval = "bool", args = { "submap *const", "const int", "const int", "const int", }, const = false, static = false, },
            { name = "creature_in_field", rval = "void", args = { "Creature &", }, const = false, static = false, },
            { name = "creature_on_trap", rval = "void", args = { "Creature &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "field_at", rval = "const field &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "field_at", rval = "field &", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_field_age", rval = "time_duration", args = { "const tripoint &", "const field_id", }, const = true, static = false, },
            { name = "get_field_strength", rval = "int", args = { "const tripoint &", "const field_id", }, const = true, static = false, },
            { name = "adjust_field_age", rval = "time_duration", args = { "const tripoint &", "const field_id", "const time_duration &", }, const = false, static = false, },
            { name = "adjust_field_strength", rval = "int", args = { "const tripoint &", "const field_id", "const int", }, const = false, static = false, },
            { name = "set_field_age", rval = "time_duration", args = { "const tripoint &", "const field_id", "const time_duration &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "set_field_strength", rval = "int", args = { "const tripoint &", "const field_id", "const int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "get_field", rval = "field_entry *", args = { "const tripoint &", "const field_id", }, const = false, static = false, },
            { name = "add_field", rval = "bool", args = { "const tripoint &", "const field_id", "int", }, optional_args = { "const time_duration &", }, const = false, static = false, },
            { name = "remove_field", rval = "void", args = { "const tripoint &", "const field_id", }, const = false, static = false, },
            { name = "add_splatter", rval = "void", args = { "const field_id", "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "add_splatter_trail", rval = "void", args = { "const field_id", "const tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "add_splash", rval = "void", args = { "const field_id", "const tripoint &", "int", "int", }, const = false, static = false, },
            { name = "propagate_field", rval = "void", args = { "const tripoint &", "const field_id", "int", }, optional_args = { "int", }, const = false, static = false, },
            { name = "emit_field", rval = "void", args = { "const tripoint &", "const emit_id &", }, optional_args = { "float", }, const = false, static = false, },
            { name = "scent_blockers", rval = "void", args = { "std::array< std::array< bool, MAPSIZE_X >, MAPSIZE_Y > &", "std::array< std::array< bool, MAPSIZE_X >, MAPSIZE_Y > &", "int", "int", "int", "int", }, const = false, static = false, },
            { name = "computer_at", rval = "computer *", args = { "const tripoint &", }, const = false, static = false, },
            { name = "add_computer", rval = "computer *", args = { "const tripoint &", "const std::string &", "const int", }, const = false, static = false, },
            { name = "add_camp", rval = "void", args = { "const tripoint &", "const std::string &", }, const = false, static = false, },
            { name = "remove_submap_camp", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "hoist_submap_camp", rval = "basecamp", args = { "const tripoint &", }, const = false, static = false, },
            { name = "has_graffiti_at", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "graffiti_at", rval = "const std::string &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "set_graffiti", rval = "void", args = { "const tripoint &", "const std::string &", }, const = false, static = false, },
            { name = "delete_graffiti", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "climb_difficulty", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "has_floor", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "supports_above", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "has_floor_or_support", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "process_falling", rval = "void", args = { }, const = false, static = false, },
            { name = "generate", rval = "void", args = { "const int", "const int", "const int", "const time_point &", }, const = false, static = false, },
            { name = "place_spawns", rval = "void", args = { "const mongroup_id &", "const int", "const int", "const int", "const int", "const int", "const float", }, optional_args = { "const bool", "const bool", }, const = false, static = false, },
            { name = "place_gas_pump", rval = "void", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "place_gas_pump", rval = "void", args = { "const int", "const int", "const int", "const std::string &", }, const = false, static = false, },
            { name = "place_toilet", rval = "void", args = { "const int", "const int", }, optional_args = { "const int", }, const = false, static = false, },
            { name = "place_vending", rval = "void", args = { "int", "int", "const std::string &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "place_npc", rval = "int", args = { "int", "int", "const string_id< npc_template > &", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "add_spawn", rval = "void", args = { "const mtype_id &", "const int", "const int", "const int", }, optional_args = { "bool", "const int", "const int", "const std::string &", }, const = false, static = false, },
            { name = "add_vehicle", rval = "vehicle *", args = { "const vgroup_id &", "const point &", "const int", }, optional_args = { "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "add_vehicle", rval = "vehicle *", args = { "const vproto_id &", "const int", "const int", "const int", }, optional_args = { "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "build_map_cache", rval = "void", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            --{ name = "build_obstacle_cache", rval = "void", args = { "const tripoint &", "const tripoint &", "fragment_cloud(&)", }, const = false, static = false, },
            { name = "add_vehicle", rval = "vehicle *", args = { "const vgroup_id &", "const tripoint &", "const int", }, optional_args = { "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "add_vehicle", rval = "vehicle *", args = { "const vproto_id &", "const tripoint &", "const int", }, optional_args = { "const int", "const int", "const bool", }, const = false, static = false, },
            { name = "light_transparency", rval = "float", args = { "const tripoint &", }, const = true, static = false, },
            { name = "light_at", rval = "lit_level", args = { "const tripoint &", }, const = true, static = false, },
            { name = "ambient_light_at", rval = "float", args = { "const tripoint &", }, const = true, static = false, },
            { name = "trans", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "pl_sees", rval = "bool", args = { "const tripoint &", "int", }, const = true, static = false, },
            { name = "pl_line_of_sight", rval = "bool", args = { "const tripoint &", "int", }, const = true, static = false, },
            { name = "get_abs_sub", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "getabs", rval = "point", args = { "const int", "const int", }, const = true, static = false, },
            { name = "getabs", rval = "point", args = { "const point &", }, const = true, static = false, },
            { name = "getabs", rval = "tripoint", args = { "const tripoint &", }, const = true, static = false, },
            { name = "getlocal", rval = "point", args = { "const int", "const int", }, const = true, static = false, },
            { name = "getlocal", rval = "point", args = { "const point &", }, const = true, static = false, },
            { name = "getlocal", rval = "tripoint", args = { "const tripoint &", }, const = true, static = false, },
            { name = "inbounds", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "inbounds", rval = "bool", args = { "const point &", }, const = true, static = false, },
            { name = "inbounds_z", rval = "bool", args = { "const int", }, const = true, static = false, },
            { name = "clip_to_bounds", rval = "void", args = { "tripoint &", }, const = true, static = false, },
            { name = "clip_to_bounds", rval = "void", args = { "int &", "int &", }, const = true, static = false, },
            { name = "clip_to_bounds", rval = "void", args = { "int &", "int &", "int &", }, const = true, static = false, },
            { name = "getmapsize", rval = "int", args = { }, const = true, static = false, },
            { name = "has_zlevels", rval = "bool", args = { }, const = true, static = false, },
            { name = "rotate", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "spawn_monsters", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "build_outside_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "build_floor_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "build_floor_caches", rval = "void", args = { }, const = false, static = false, },
            { name = "get_cache_ref", rval = "const level_cache&", args = { "int", }, const = true, static = false, },
            { name = "get_pathfinding_cache_ref", rval = "const pathfinding_cache &", args = { "int", }, const = true, static = false, },
            { name = "update_pathfinding_cache", rval = "void", args = { "int", }, const = true, static = false, },
            { name = "update_visibility_cache", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_visibility_variables_cache", rval = "const visibility_variables &", args = { }, const = true, static = false, },
            { name = "points_in_rectangle", rval = "tripoint_range", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "points_in_radius", rval = "tripoint_range", args = { "const tripoint &", "size_t", }, optional_args = { "size_t", }, const = true, static = false, },
            { name = "get_active_items_in_radius", rval = "std::list< item_location >", args = { "const tripoint &", "int", }, const = true, static = false, },
            { name = "access_cache", rval = "level_cache &", args = { "int", }, const = false, static = false, },
            { name = "access_cache", rval = "const level_cache &", args = { "int", }, const = true, static = false, },
            { name = "need_draw_lower_floor", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "apparent_light_helper", rval = "map::apparent_light_info", args = { "const level_cache &", "const tripoint &", }, const = false, static = true, },
        }
    },
    map_stack = {
        cpp_name = "map_stack",
        new = {
            { "std::list< item > *", "tripoint", "map *", },
        },
        attributes = {
        },
        functions = {
            { name = "erase", rval = "std::list< item >::iterator", args = { "std::list< item >::iterator", }, const = false, static = false, },
            { name = "push_back", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "insert_at", rval = "void", args = { "std::list< item >::iterator", "const item &", }, const = false, static = false, },
            { name = "count_limit", rval = "int", args = { }, const = true, static = false, },
            { name = "max_volume", rval = "units::volume", args = { }, const = true, static = false, },
        }
    },
    martialart = {
        cpp_name = "martialart",
        string_id = "matype_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "matype_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            arm_block = { type = "int", writable = true, reference = false, static = false, },
            leg_block = { type = "int", writable = true, reference = false, static = false, },
            arm_block_with_bio_armor_arms = { type = "bool", writable = true, reference = false, static = false, },
            leg_block_with_bio_armor_legs = { type = "bool", writable = true, reference = false, static = false, },
            techniques = { type = "std::set< matec_id >", writable = true, reference = false, static = false, },
            weapons = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            strictly_unarmed = { type = "bool", writable = true, reference = false, static = false, },
            force_unarmed = { type = "bool", writable = true, reference = false, static = false, },
            static_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            onmove_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            onhit_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            onattack_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            ondodge_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            onblock_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
            ongethit_buffs = { type = "std::vector< mabuff_id >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "apply_static_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_onmove_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_onhit_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_onattack_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_ondodge_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_onblock_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "apply_ongethit_buffs", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "has_technique", rval = "bool", args = { "const player &", "const matec_id &", }, const = true, static = false, },
            { name = "has_weapon", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "weapon_valid", rval = "bool", args = { "const item &", }, const = true, static = false, },
        }
    },
    material_type = {
        cpp_name = "material_type",
        string_id = "material_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "material_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "check", rval = "void", args = { }, const = true, static = false, },
            { name = "dam_resist", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "ident", rval = "material_id", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "salvaged_into", rval = "cata::optional< itype_id >", args = { }, const = true, static = false, },
            { name = "repaired_with", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "bash_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "cut_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "bash_dmg_verb", rval = "std::string", args = { }, const = true, static = false, },
            { name = "cut_dmg_verb", rval = "std::string", args = { }, const = true, static = false, },
            { name = "dmg_adj", rval = "std::string", args = { "int", }, const = true, static = false, },
            { name = "acid_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "elec_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "fire_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "chip_resist", rval = "int", args = { }, const = true, static = false, },
            { name = "specific_heat_liquid", rval = "float", args = { }, const = true, static = false, },
            { name = "specific_heat_solid", rval = "float", args = { }, const = true, static = false, },
            { name = "latent_heat", rval = "float", args = { }, const = true, static = false, },
            { name = "freeze_point", rval = "int", args = { }, const = true, static = false, },
            { name = "density", rval = "int", args = { }, const = true, static = false, },
            { name = "edible", rval = "bool", args = { }, const = true, static = false, },
            { name = "soft", rval = "bool", args = { }, const = true, static = false, },
            { name = "reinforces", rval = "bool", args = { }, const = true, static = false, },
            { name = "vitamin", rval = "double", args = { "const vitamin_id &", }, const = true, static = false, },
            { name = "burn_data", rval = "const mat_burn_data &", args = { "size_t", }, const = true, static = false, },
            { name = "burn_products", rval = "const mat_burn_products &", args = { }, const = true, static = false, },
            { name = "compact_accepts", rval = "const material_id_list &", args = { }, const = true, static = false, },
            { name = "compacts_into", rval = "const mat_compacts_into &", args = { }, const = true, static = false, },
        }
    },
    mongroup = {
        cpp_name = "mongroup",
        new = {
            { "const mongroup_id &", "int", "int", "int", "unsigned int", "unsigned int", },
            { "std::string", "tripoint", "unsigned int", "unsigned int", "tripoint", "int", "bool", "bool", "bool", },
            { },
        },
        attributes = {
            type = { type = "mongroup_id", writable = true, reference = false, static = false, },
            pos = { type = "tripoint", writable = true, reference = false, static = false, },
            radius = { type = "unsigned int", writable = true, reference = false, static = false, },
            population = { type = "unsigned int", writable = true, reference = false, static = false, },
            target = { type = "tripoint", writable = true, reference = false, static = false, },
            interest = { type = "int", writable = true, reference = false, static = false, },
            dying = { type = "bool", writable = true, reference = false, static = false, },
            horde = { type = "bool", writable = true, reference = false, static = false, },
            monsters = { type = "std::vector< monster >", writable = true, reference = false, static = false, },
            horde_behaviour = { type = "std::string", writable = true, reference = false, static = false, },
            diffuse = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "is_safe", rval = "bool", args = { }, const = true, static = false, },
            { name = "empty", rval = "bool", args = { }, const = true, static = false, },
            { name = "clear", rval = "void", args = { }, const = false, static = false, },
            { name = "set_target", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "wander", rval = "void", args = { "const overmap &", }, const = false, static = false, },
            { name = "inc_interest", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "dec_interest", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_interest", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "avg_speed", rval = "float", args = { }, const = true, static = false, },
            --{ name = "io", rval = "void", args = { "typename Archive", "Archive &", }, const = false, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "deserialize_legacy", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
        }
    },
    monster = {
        cpp_name = "monster",
        parent = "Creature",
        new = {
            { },
            { "const mtype_id &", },
            { "const mtype_id &", "const tripoint &", },
            { "const monster &", },
            --{ "monster &&", },
        },
        attributes = {
            wander_pos = { type = "tripoint", writable = true, reference = false, static = false, },
            wandf = { type = "int", writable = true, reference = false, static = false, },
            inv = { type = "std::vector< item >", writable = true, reference = false, static = false, },
            friendly = { type = "int", writable = true, reference = false, static = false, },
            anger = { type = "int", writable = true, reference = false, static = false, },
            morale = { type = "int", writable = true, reference = false, static = false, },
            faction = { type = "mfaction_id", writable = true, reference = false, static = false, },
            mission_id = { type = "int", writable = true, reference = false, static = false, },
            type = { type = "mtype", writable = false, reference = false, static = false, },
            no_extra_death_drops = { type = "bool", writable = true, reference = false, static = false, },
            no_corpse_quiet = { type = "bool", writable = true, reference = false, static = false, },
            death_drops = { type = "bool", writable = true, reference = false, static = false, },
            made_footstep = { type = "bool", writable = true, reference = false, static = false, },
            unique_name = { type = "std::string", writable = true, reference = false, static = false, },
            hallucination = { type = "bool", writable = true, reference = false, static = false, },
            ignoring = { type = "short", writable = true, reference = false, static = false, },
            lastseen_turn = { type = "cata::optional< time_point >", writable = true, reference = false, static = false, },
            staircount = { type = "int", writable = true, reference = false, static = false, },
            ammo = { type = "std::map< std::string, int >", writable = true, reference = false, static = false, },
            last_updated = { type = "time_point", writable = true, reference = false, static = false, },
            last_baby = { type = "int", writable = true, reference = false, static = false, },
            last_biosig = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const monster &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "monster &&", }, const = false, static = false, },
            { name = "is_monster", rval = "bool", args = { }, const = true, static = false, },
            { name = "poly", rval = "void", args = { "const mtype_id &", }, const = false, static = false, },
            { name = "can_upgrade", rval = "bool", args = { }, const = false, static = false, },
            { name = "hasten_upgrade", rval = "void", args = { }, const = false, static = false, },
            { name = "try_upgrade", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "try_reproduce", rval = "void", args = { }, const = false, static = false, },
            { name = "try_biosignature", rval = "void", args = { }, const = false, static = false, },
            { name = "spawn", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_size", rval = "m_size", args = { }, const = true, static = false, },
            { name = "get_weight", rval = "units::mass", args = { }, const = true, static = false, },
            { name = "get_volume", rval = "units::volume", args = { }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { }, const = true, static = false, },
            { name = "hp_percentage", rval = "int", args = { }, const = true, static = false, },
            { name = "get_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "name_with_armor", rval = "std::string", args = { }, const = true, static = false, },
            { name = "disp_name", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "skin_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_HP_Bar", rval = "void", args = { "nc_color &", "std::string &", }, const = true, static = false, },
            { name = "get_attitude", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "print_info", rval = "int", args = { "const catacurses::window &", "int", "int", "int", }, const = true, static = false, },
            { name = "basic_symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "symbol", rval = "const std::string &", args = { }, const = true, static = false, },
            { name = "is_symbol_highlighted", rval = "bool", args = { }, const = true, static = false, },
            { name = "color_with_effects", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "extended_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const m_flag", }, const = true, static = false, },
            { name = "can_see", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_hear", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_submerge", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_drown", rval = "bool", args = { }, const = true, static = false, },
            { name = "digging", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_act", rval = "bool", args = { }, const = true, static = false, },
            { name = "sight_range", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            { name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "made_of", rval = "bool", args = { "phase_id", }, const = true, static = false, },
            { name = "avoid_trap", rval = "bool", args = { "const tripoint &", "const trap &", }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "move_target", rval = "tripoint", args = { }, const = false, static = false, },
            { name = "attack_target", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "shift", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "wander", rval = "bool", args = { }, const = false, static = false, },
            { name = "can_move_to", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "will_reach", rval = "bool", args = { "int", "int", }, const = false, static = false, },
            { name = "turns_to_reach", rval = "int", args = { "int", "int", }, const = false, static = false, },
            { name = "set_dest", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "unset_dest", rval = "void", args = { }, const = false, static = false, },
            { name = "wander_to", rval = "void", args = { "const tripoint &", "int", }, const = false, static = false, },
            { name = "rate_target", rval = "float", args = { "Creature &", "float", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "plan", rval = "void", args = { "const mfactions &", }, const = false, static = false, },
            { name = "move", rval = "void", args = { }, const = false, static = false, },
            { name = "footsteps", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "shove_vehicle", rval = "void", args = { "const tripoint &", "const tripoint &", }, const = false, static = false, },
            { name = "scent_move", rval = "tripoint", args = { }, const = false, static = false, },
            { name = "calc_movecost", rval = "int", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "calc_climb_cost", rval = "int", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "is_immune_field", rval = "bool", args = { "const field_id", }, const = true, static = false, },
            { name = "move_to", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", "float", }, const = false, static = false, },
            { name = "attack_at", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "bash_at", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "push_to", rval = "bool", args = { "const tripoint &", "int", "size_t", }, const = false, static = false, },
            { name = "bash_skill", rval = "int", args = { }, const = false, static = false, },
            { name = "bash_estimate", rval = "int", args = { }, const = false, static = false, },
            { name = "group_bash_skill", rval = "int", args = { "const tripoint &", }, const = false, static = false, },
            { name = "stumble", rval = "void", args = { }, const = false, static = false, },
            { name = "knock_back_from", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "is_fleeing", rval = "bool", args = { "player &", }, const = true, static = false, },
            { name = "attitude", rval = "monster_attitude", args = { }, optional_args = { "const Character *", }, const = true, static = false, },
            --{ name = "attitude_to", rval = "Creature::Attitude", args = { "const Creature &", }, const = true, static = false, },
            { name = "process_triggers", rval = "void", args = { }, const = false, static = false, },
            { name = "is_underwater", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_on_ground", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_warm", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_weapon", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_dead_state", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_elec_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_immune_effect", rval = "bool", args = { "const efftype_id &", }, const = true, static = false, },
            { name = "is_immune_damage", rval = "bool", args = { "const damage_type", }, const = true, static = false, },
            { name = "absorb_hit", rval = "void", args = { "body_part", "damage_instance &", }, const = false, static = false, },
            { name = "block_hit", rval = "bool", args = { "Creature *", "body_part &", "damage_instance &", }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", "float", }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", "bool", }, const = false, static = false, },
            { name = "deal_projectile_attack", rval = "void", args = { "Creature *", "dealt_projectile_attack &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "deal_damage_handle_type", rval = "void", args = { "const damage_unit &", "body_part", "int &", "int &", }, const = false, static = false, },
            { name = "apply_damage", rval = "void", args = { "Creature *", "body_part", "int", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "explode", rval = "void", args = { }, const = false, static = false, },
            { name = "die_in_explosion", rval = "void", args = { "Creature *", }, const = false, static = false, },
            { name = "heal", rval = "int", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "set_hp", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "process_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "move_effects", rval = "bool", args = { "bool", }, const = false, static = false, },
            { name = "add_effect", rval = "void", args = { "const efftype_id &", "time_duration", }, optional_args = { "body_part", "bool", "int", "bool", "bool", }, const = false, static = false, },
            { name = "get_effect_status", rval = "std::string", args = { }, const = true, static = false, },
            { name = "power_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "speed_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "get_worn_armor_val", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "get_armor_cut", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_type", rval = "int", args = { "damage_type", "body_part", }, const = true, static = false, },
            { name = "get_hit_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_dodge_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_dodge", rval = "float", args = { }, const = true, static = false, },
            { name = "get_melee", rval = "float", args = { }, const = true, static = false, },
            { name = "hit_roll", rval = "float", args = { }, const = true, static = false, },
            { name = "dodge_roll", rval = "float", args = { }, const = false, static = false, },
            { name = "get_horde_attraction", rval = "monster_horde_attraction", args = { }, const = false, static = false, },
            { name = "set_horde_attraction", rval = "void", args = { "monster_horde_attraction", }, const = false, static = false, },
            { name = "will_join_horde", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "fall_damage_mod", rval = "float", args = { }, const = true, static = false, },
            { name = "impact", rval = "int", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "has_grab_break_tec", rval = "bool", args = { }, const = true, static = false, },
            { name = "stability_roll", rval = "float", args = { }, const = true, static = false, },
            { name = "on_dodge", rval = "void", args = { "Creature *", "float", }, const = false, static = false, },
            { name = "on_hit", rval = "void", args = { "Creature *", }, optional_args = { "body_part", "float", "dealt_projectile_attack const *const", }, const = false, static = false, },
            { name = "get_random_body_part", rval = "body_part", args = { "bool", }, const = true, static = false, },
            { name = "get_all_body_parts", rval = "std::vector< body_part >", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "reset_special", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "reset_special_rng", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "set_special", rval = "void", args = { "const std::string &", "int", }, const = false, static = false, },
            { name = "disable_special", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_bonuses", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_stats", rval = "void", args = { }, const = false, static = false, },
            { name = "die", rval = "void", args = { "Creature *", }, const = false, static = false, },
            { name = "drop_items_on_death", rval = "void", args = { }, const = false, static = false, },
            { name = "make_fungus", rval = "bool", args = { }, const = false, static = false, },
            { name = "make_friendly", rval = "void", args = { }, const = false, static = false, },
            { name = "make_ally", rval = "void", args = { "const monster &", }, const = false, static = false, },
            { name = "add_item", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "hear_sound", rval = "void", args = { "const tripoint &", "int", "int", }, const = false, static = false, },
            { name = "is_hallucination", rval = "bool", args = { }, const = true, static = false, },
            { name = "bloodType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "gibType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "is_dead", rval = "bool", args = { }, const = true, static = false, },
            { name = "setpos", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "pos", rval = "const tripoint &", args = { }, const = true, static = false, },
            { name = "posx", rval = "int", args = { }, const = true, static = false, },
            { name = "posy", rval = "int", args = { }, const = true, static = false, },
            { name = "posz", rval = "int", args = { }, const = true, static = false, },
            { name = "to_item", rval = "item", args = { }, const = true, static = false, },
            { name = "init_from_item", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_unload", rval = "void", args = { }, const = false, static = false, },
            { name = "on_load", rval = "void", args = { }, const = false, static = false, },
            { name = "get_pathfinding_settings", rval = "const pathfinding_settings &", args = { }, const = true, static = false, },
            { name = "get_path_avoid", rval = "std::set< tripoint >", args = { }, const = true, static = false, },
        }
    },
    MonsterGroup = {
        cpp_name = "MonsterGroup",
        string_id = "mongroup_id",
        new = {
        },
        attributes = {
            name = { type = "mongroup_id", writable = true, reference = false, static = false, },
            defaultMonster = { type = "mtype_id", writable = true, reference = false, static = false, },
            monsters = { type = "FreqDef", writable = true, reference = false, static = false, },
            is_animal = { type = "bool", writable = true, reference = false, static = false, },
            replace_monster_group = { type = "bool", writable = true, reference = false, static = false, },
            new_monster_group = { type = "mongroup_id", writable = true, reference = false, static = false, },
            monster_group_time = { type = "time_duration", writable = true, reference = false, static = false, },
            is_safe = { type = "bool", writable = true, reference = false, static = false, },
            freq_total = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "IsMonsterInGroup", rval = "bool", args = { "const mtype_id &", }, const = true, static = false, },
        }
    },
    morale_type_data = {
        cpp_name = "morale_type_data",
        string_id = "morale_type",
        new = {
        },
        attributes = {
            id = { type = "morale_type", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "describe", rval = "std::string", args = { }, optional_args = { "const itype *", }, const = true, static = false, },
            { name = "is_permanent", rval = "bool", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "check", rval = "void", args = { }, const = true, static = false, },
            { name = "load_type", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
            { name = "check_all", rval = "void", args = { }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "convert_legacy", rval = "const morale_type &", args = { "int", }, const = false, static = true, },
        }
    },
    mtype = {
        cpp_name = "mtype",
        string_id = "mtype_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "mtype_id", writable = true, reference = false, static = false, },
            starting_ammo = { type = "std::map< std::string, int >", writable = true, reference = false, static = false, },
            death_drops = { type = "std::string", writable = true, reference = false, static = false, },
            atk_effs = { type = "std::vector< mon_effect_data >", writable = true, reference = false, static = false, },
            species = { type = "std::set< species_id >", writable = true, reference = false, static = false, },
            categories = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            mat = { type = "std::vector< material_id >", writable = true, reference = false, static = false, },
            sym = { type = "std::string", writable = true, reference = false, static = false, },
            looks_like = { type = "std::string", writable = true, reference = false, static = false, },
            default_faction = { type = "mfaction_id", writable = true, reference = false, static = false, },
            bodytype = { type = "bodytype_id", writable = true, reference = false, static = false, },
            color = { type = "nc_color", writable = true, reference = false, static = false, },
            size = { type = "m_size", writable = true, reference = false, static = false, },
            volume = { type = "units::volume", writable = true, reference = false, static = false, },
            weight = { type = "units::mass", writable = true, reference = false, static = false, },
            phase = { type = "phase_id", writable = true, reference = false, static = false, },
            difficulty = { type = "int", writable = true, reference = false, static = false, },
            difficulty_base = { type = "int", writable = true, reference = false, static = false, },
            hp = { type = "int", writable = true, reference = false, static = false, },
            speed = { type = "int", writable = true, reference = false, static = false, },
            agro = { type = "int", writable = true, reference = false, static = false, },
            morale = { type = "int", writable = true, reference = false, static = false, },
            attack_cost = { type = "int", writable = true, reference = false, static = false, },
            melee_skill = { type = "int", writable = true, reference = false, static = false, },
            melee_dice = { type = "int", writable = true, reference = false, static = false, },
            melee_sides = { type = "int", writable = true, reference = false, static = false, },
            sk_dodge = { type = "int", writable = true, reference = false, static = false, },
            armor_bash = { type = "int", writable = true, reference = false, static = false, },
            armor_cut = { type = "int", writable = true, reference = false, static = false, },
            armor_stab = { type = "int", writable = true, reference = false, static = false, },
            armor_acid = { type = "int", writable = true, reference = false, static = false, },
            armor_fire = { type = "int", writable = true, reference = false, static = false, },
            vision_day = { type = "int", writable = true, reference = false, static = false, },
            vision_night = { type = "int", writable = true, reference = false, static = false, },
            melee_damage = { type = "damage_instance", writable = true, reference = false, static = false, },
            harvest = { type = "harvest_id", writable = true, reference = false, static = false, },
            luminance = { type = "float", writable = true, reference = false, static = false, },
            def_chance = { type = "unsigned int", writable = true, reference = false, static = false, },
            special_attacks = { type = "std::map< std::string, mtype_special_attack >", writable = true, reference = false, static = false, },
            special_attacks_names = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            --dies = { type = "std::vector< mon_action_death >", writable = true, reference = false, static = false, },
            --sp_defense = { type = "mon_action_defend", writable = true, reference = false, static = false, },
            half_life = { type = "int", writable = true, reference = false, static = false, },
            age_grow = { type = "int", writable = true, reference = false, static = false, },
            upgrade_into = { type = "mtype_id", writable = true, reference = false, static = false, },
            upgrade_group = { type = "mongroup_id", writable = true, reference = false, static = false, },
            burn_into = { type = "mtype_id", writable = true, reference = false, static = false, },
            baby_timer = { type = "int", writable = true, reference = false, static = false, },
            baby_count = { type = "int", writable = true, reference = false, static = false, },
            baby_monster = { type = "mtype_id", writable = true, reference = false, static = false, },
            baby_egg = { type = "itype_id", writable = true, reference = false, static = false, },
            baby_flags = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            biosig_timer = { type = "int", writable = true, reference = false, static = false, },
            biosig_item = { type = "itype_id", writable = true, reference = false, static = false, },
            bash_skill = { type = "int", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            upgrades = { type = "bool", writable = true, reference = false, static = false, },
            reproduces = { type = "bool", writable = true, reference = false, static = false, },
            biosignatures = { type = "bool", writable = true, reference = false, static = false, },
            revert_to_itype = { type = "itype_id", writable = true, reference = false, static = false, },
            emit_fields = { type = "std::set< emit_id >", writable = true, reference = false, static = false, },
            path_settings = { type = "pathfinding_settings", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "same_species", rval = "bool", args = { "const mtype &", }, const = true, static = false, },
            { name = "nname", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "has_special_attack", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "m_flag", }, const = true, static = false, },
            { name = "set_flag", rval = "void", args = { "m_flag", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "made_of", rval = "bool", args = { "const material_id &", }, const = true, static = false, },
            { name = "made_of_any", rval = "bool", args = { "const std::set< material_id > &", }, const = true, static = false, },
            { name = "has_anger_trigger", rval = "bool", args = { "mon_trigger", }, const = true, static = false, },
            { name = "has_fear_trigger", rval = "bool", args = { "mon_trigger", }, const = true, static = false, },
            { name = "has_placate_trigger", rval = "bool", args = { "mon_trigger", }, const = true, static = false, },
            { name = "in_category", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "in_species", rval = "bool", args = { "const species_id &", }, const = true, static = false, },
            { name = "in_species", rval = "bool", args = { "const species_type &", }, const = true, static = false, },
            { name = "bloodType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "gibType", rval = "field_id", args = { }, const = true, static = false, },
            { name = "get_meat_itype", rval = "itype_id", args = { }, const = true, static = false, },
            { name = "get_meat_chunks_count", rval = "int", args = { }, const = true, static = false, },
            { name = "get_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
        }
    },
    mutation_branch = {
        cpp_name = "mutation_branch",
        string_id = "trait_id",
        new = {
        },
        attributes = {
            id = { type = "trait_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            valid = { type = "bool", writable = true, reference = false, static = false, },
            purifiable = { type = "bool", writable = true, reference = false, static = false, },
            threshold = { type = "bool", writable = true, reference = false, static = false, },
            profession = { type = "bool", writable = true, reference = false, static = false, },
            debug = { type = "bool", writable = true, reference = false, static = false, },
            player_display = { type = "bool", writable = true, reference = false, static = false, },
            mixed_effect = { type = "bool", writable = true, reference = false, static = false, },
            startingtrait = { type = "bool", writable = true, reference = false, static = false, },
            activated = { type = "bool", writable = true, reference = false, static = false, },
            starts_active = { type = "bool", writable = true, reference = false, static = false, },
            destroys_gear = { type = "bool", writable = true, reference = false, static = false, },
            allow_soft_gear = { type = "bool", writable = true, reference = false, static = false, },
            fatigue = { type = "bool", writable = true, reference = false, static = false, },
            hunger = { type = "bool", writable = true, reference = false, static = false, },
            thirst = { type = "bool", writable = true, reference = false, static = false, },
            points = { type = "int", writable = true, reference = false, static = false, },
            visibility = { type = "int", writable = true, reference = false, static = false, },
            ugliness = { type = "int", writable = true, reference = false, static = false, },
            cost = { type = "int", writable = true, reference = false, static = false, },
            cooldown = { type = "int", writable = true, reference = false, static = false, },
            bodytemp_min = { type = "int", writable = true, reference = false, static = false, },
            bodytemp_max = { type = "int", writable = true, reference = false, static = false, },
            bodytemp_sleep = { type = "int", writable = true, reference = false, static = false, },
            healing_awake = { type = "float", writable = true, reference = false, static = false, },
            healing_resting = { type = "float", writable = true, reference = false, static = false, },
            hp_modifier = { type = "float", writable = true, reference = false, static = false, },
            hp_modifier_secondary = { type = "float", writable = true, reference = false, static = false, },
            hp_adjustment = { type = "float", writable = true, reference = false, static = false, },
            str_modifier = { type = "float", writable = true, reference = false, static = false, },
            dodge_modifier = { type = "float", writable = true, reference = false, static = false, },
            speed_modifier = { type = "float", writable = true, reference = false, static = false, },
            movecost_modifier = { type = "float", writable = true, reference = false, static = false, },
            movecost_flatground_modifier = { type = "float", writable = true, reference = false, static = false, },
            movecost_obstacle_modifier = { type = "float", writable = true, reference = false, static = false, },
            attackcost_modifier = { type = "float", writable = true, reference = false, static = false, },
            max_stamina_modifier = { type = "float", writable = true, reference = false, static = false, },
            weight_capacity_modifier = { type = "float", writable = true, reference = false, static = false, },
            hearing_modifier = { type = "float", writable = true, reference = false, static = false, },
            noise_modifier = { type = "float", writable = true, reference = false, static = false, },
            stealth_modifier = { type = "float", writable = true, reference = false, static = false, },
            metabolism_modifier = { type = "float", writable = true, reference = false, static = false, },
            thirst_modifier = { type = "float", writable = true, reference = false, static = false, },
            fatigue_modifier = { type = "float", writable = true, reference = false, static = false, },
            fatigue_regen_modifier = { type = "float", writable = true, reference = false, static = false, },
            stamina_regen_modifier = { type = "float", writable = true, reference = false, static = false, },
            overmap_sight = { type = "float", writable = true, reference = false, static = false, },
            overmap_multiplier = { type = "float", writable = true, reference = false, static = false, },
            social_mods = { type = "social_modifiers", writable = true, reference = false, static = false, },
            spawn_item = { type = "itype_id", writable = true, reference = false, static = false, },
            ranged_mutation = { type = "itype_id", writable = true, reference = false, static = false, },
            attacks_granted = { type = "std::vector< mut_attack >", writable = true, reference = false, static = false, },
            vitamin_rates = { type = "std::map< vitamin_id, time_duration >", writable = true, reference = false, static = false, },
            vitamin_absorb_multi = { type = "std::map< material_id, std::map< vitamin_id, double > >", writable = true, reference = false, static = false, },
            prereqs = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            prereqs2 = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            threshreq = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            types = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            cancels = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            replacements = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            additions = { type = "std::vector< trait_id >", writable = true, reference = false, static = false, },
            category = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            flags = { type = "std::set< std::string >", writable = true, reference = false, static = false, },
            protection = { type = "std::map< body_part, tripoint >", writable = true, reference = false, static = false, },
            encumbrance_always = { type = "std::map< body_part, int >", writable = true, reference = false, static = false, },
            encumbrance_covered = { type = "std::map< body_part, int >", writable = true, reference = false, static = false, },
            restricts_gear = { type = "std::set< body_part >", writable = true, reference = false, static = false, },
            mods = { type = "std::unordered_map< std::pair< bool, std::string >, int >", writable = true, reference = false, static = false, },
            armor = { type = "std::map< body_part, resistances >", writable = true, reference = false, static = false, },
            initial_ma_styles = { type = "std::vector< matype_id >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load_trait_group", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "load_trait_group", rval = "void", args = { "JsonObject &", "const trait_group::Trait_group_tag &", "const std::string &", }, const = false, static = true, },
            { name = "load_trait_group", rval = "void", args = { "JsonArray &", "const trait_group::Trait_group_tag &", "const bool", }, const = false, static = true, },
            { name = "add_entry", rval = "void", args = { "Trait_group &", "JsonObject &", }, const = false, static = true, },
            { name = "get_group", rval = "std::shared_ptr< Trait_group >", args = { "const trait_group::Trait_group_tag &", }, const = false, static = true, },
            { name = "get_all_group_names", rval = "std::vector< trait_group::Trait_group_tag >", args = { }, const = false, static = true, },
            { name = "spawn_item_message", rval = "std::string", args = { }, const = true, static = false, },
            { name = "ranged_mutation_message", rval = "std::string", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "desc", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_display_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "conflicts_with_item", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "damage_resistance", rval = "const resistances &", args = { "body_part", }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "get_name", rval = "std::string", args = { "const trait_id &", }, const = false, static = true, },
            { name = "get_all", rval = "const std::vector< mutation_branch > &", args = { }, const = false, static = true, },
            { name = "reset_all", rval = "void", args = { }, const = false, static = true, },
            { name = "load_trait", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
            { name = "check_consistency", rval = "void", args = { }, const = false, static = true, },
            { name = "load_trait_blacklist", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "trait_is_blacklisted", rval = "bool", args = { "const trait_id &", }, const = false, static = true, },
            { name = "finalize", rval = "void", args = { }, const = false, static = true, },
            { name = "finalize_trait_blacklist", rval = "void", args = { }, const = false, static = true, },
        }
    },
    nc_color = {
        cpp_name = "nc_color",
        new = {
            { },
        },
        attributes = {
        },
        functions = {
            { name = "to_color_pair_index", rval = "int", args = { }, const = true, static = false, },
            { name = "_op_int", cpp_name = "operator int", rval = "", args = { }, const = true, static = false, },
            { name = "bold", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "is_bold", rval = "bool", args = { }, const = true, static = false, },
            { name = "blink", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "is_blink", rval = "bool", args = { }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "from_color_pair_index", rval = "nc_color", args = { "const int", }, const = false, static = true, },
        }
    },
    npc = {
        cpp_name = "npc",
        parent = "player",
        new = {
            { },
            { "const npc &", },
            --{ "npc &&", },
        },
        attributes = {
            need_data = { type = "std::array< std::pair< std::string, overmap_location_str_id >, npc_need::num_needs >", writable = true, reference = false, static = true, },
            --no_goal_point = { type = "tripoint", writable = false, reference = false, static = true, },
            myclass = { type = "npc_class_id", writable = true, reference = false, static = false, },
            idz = { type = "std::string", writable = true, reference = false, static = false, },
            miss_ids = { type = "std::vector< mission_type_id >", writable = true, reference = false, static = false, },
            last_player_seen_pos = { type = "cata::optional< tripoint >", writable = true, reference = false, static = false, },
            last_seen_player_turn = { type = "int", writable = true, reference = false, static = false, },
            wanted_item_pos = { type = "tripoint", writable = true, reference = false, static = false, },
            guard_pos = { type = "tripoint", writable = true, reference = false, static = false, },
            goal = { type = "tripoint", writable = true, reference = false, static = false, },
            omt_path = { type = "std::vector< tripoint >", writable = true, reference = false, static = false, },
            wander_pos = { type = "tripoint", writable = true, reference = false, static = false, },
            wander_time = { type = "int", writable = true, reference = false, static = false, },
            pulp_location = { type = "cata::optional< tripoint >", writable = true, reference = false, static = false, },
            restock = { type = "time_point", writable = true, reference = false, static = false, },
            fetching_item = { type = "bool", writable = true, reference = false, static = false, },
            has_new_items = { type = "bool", writable = true, reference = false, static = false, },
            worst_item_value = { type = "int", writable = true, reference = false, static = false, },
            path = { type = "std::vector< tripoint >", writable = true, reference = false, static = false, },
            fac_id = { type = "string_id< faction >", writable = true, reference = false, static = false, },
            my_fac = { type = "faction", writable = true, reference = false, static = false, },
            companion_mission_role_id = { type = "std::string", writable = true, reference = false, static = false, },
            companion_mission_points = { type = "std::vector< tripoint >", writable = true, reference = false, static = false, },
            companion_mission_time = { type = "time_point", writable = true, reference = false, static = false, },
            companion_mission_time_ret = { type = "time_point", writable = true, reference = false, static = false, },
            companion_mission_inv = { type = "inventory", writable = true, reference = false, static = false, },
            mission = { type = "npc_mission", writable = true, reference = false, static = false, },
            personality = { type = "npc_personality", writable = true, reference = false, static = false, },
            op_of_u = { type = "npc_opinion", writable = true, reference = false, static = false, },
            chatbin = { type = "npc_chatbin", writable = true, reference = false, static = false, },
            patience = { type = "int", writable = true, reference = false, static = false, },
            rules = { type = "npc_follower_rules", writable = true, reference = false, static = false, },
            marked_for_death = { type = "bool", writable = true, reference = false, static = false, },
            hit_by_player = { type = "bool", writable = true, reference = false, static = false, },
            needs = { type = "std::vector< npc_need >", writable = true, reference = false, static = false, },
            last_updated = { type = "time_point", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const npc &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "npc &&", }, const = false, static = false, },
            { name = "is_player", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_npc", rval = "bool", args = { }, const = true, static = false, },
            { name = "load_npc_template", rval = "void", args = { "const string_id< npc_template > &", }, const = false, static = false, },
            { name = "randomize", rval = "void", args = { }, optional_args = { "const npc_class_id &", }, const = false, static = false, },
            { name = "randomize_from_faction", rval = "void", args = { "faction *", }, const = false, static = false, },
            { name = "set_fac", rval = "void", args = { "const string_id< faction > &", }, const = false, static = false, },
            { name = "clear_fac", rval = "void", args = { }, const = false, static = false, },
            { name = "spawn_at_sm", rval = "void", args = { "int", "int", "int", }, const = false, static = false, },
            { name = "spawn_at_precise", rval = "void", args = { "const point &", "const tripoint &", }, const = false, static = false, },
            { name = "place_on_map", rval = "void", args = { }, const = false, static = false, },
            { name = "add_new_mission", rval = "void", args = { "mission *", }, const = false, static = false, },
            { name = "best_skill", rval = "skill_id", args = { }, const = true, static = false, },
            { name = "best_skill_level", rval = "int", args = { }, const = true, static = false, },
            { name = "starting_weapon", rval = "void", args = { "const npc_class_id &", }, const = false, static = false, },
            { name = "load_info", rval = "void", args = { "std::string", }, const = false, static = false, },
            { name = "save_info", rval = "std::string", args = { }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "basic_symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "print_info", rval = "int", args = { "const catacurses::window &", "int", "int", "int", }, const = true, static = false, },
            { name = "opinion_text", rval = "std::string", args = { }, const = true, static = false, },
            { name = "faction_display", rval = "int", args = { "const catacurses::window &", "const int", }, const = true, static = false, },
            { name = "form_opinion", rval = "void", args = { "const player &", }, const = false, static = false, },
            { name = "pick_talk_topic", rval = "std::string", args = { "const player &", }, const = false, static = false, },
            { name = "character_danger", rval = "float", args = { "const Character &", }, const = true, static = false, },
            { name = "vehicle_danger", rval = "float", args = { "int", }, const = true, static = false, },
            { name = "turned_hostile", rval = "bool", args = { }, const = true, static = false, },
            { name = "hostile_anger_level", rval = "int", args = { }, const = true, static = false, },
            { name = "make_angry", rval = "void", args = { }, const = false, static = false, },
            { name = "on_attacked", rval = "void", args = { "const Creature &", }, const = false, static = false, },
            { name = "assigned_missions_value", rval = "int", args = { }, const = false, static = false, },
            { name = "skills_offered_to", rval = "std::vector< skill_id >", args = { "const player &", }, const = true, static = false, },
            { name = "styles_offered_to", rval = "std::vector< matype_id >", args = { "const player &", }, const = true, static = false, },
            { name = "get_faction_ver", rval = "int", args = { }, const = true, static = false, },
            { name = "set_faction_ver", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "is_enemy", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_following", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_obeying", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "is_friendly", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "is_leader", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_walking_with", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_ally", rval = "bool", args = { "const player &", }, const = true, static = false, },
            { name = "is_player_ally", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_stationary", rval = "bool", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "is_guarding", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_patrolling", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_assigned_to_camp", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_player_activity", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_travelling", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_minion", rval = "bool", args = { }, const = true, static = false, },
            { name = "guaranteed_hostile", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "attitude_to", rval = "Creature::Attitude", args = { "const Creature &", }, const = true, static = false, },
            { name = "get_monster_faction", rval = "mfaction_id", args = { }, const = true, static = false, },
            { name = "follow_distance", rval = "int", args = { }, const = true, static = false, },
            { name = "talk_to_u", rval = "void", args = { }, optional_args = { "bool", "bool", }, const = false, static = false, },
            { name = "shop_restock", rval = "void", args = { }, const = false, static = false, },
            { name = "minimum_item_value", rval = "int", args = { }, const = true, static = false, },
            { name = "update_worst_item_value", rval = "void", args = { }, const = false, static = false, },
            { name = "value", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "value", rval = "int", args = { "const item &", "int", }, const = true, static = false, },
            { name = "wear_if_wanted", rval = "bool", args = { "const item &", }, const = false, static = false, },
            { name = "stow_item", rval = "void", args = { "item &", }, const = false, static = false, },
            { name = "wield", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "adjust_worn", rval = "bool", args = { }, const = false, static = false, },
            { name = "has_healing_item", rval = "bool", args = { "healing_options", }, const = false, static = false, },
            { name = "has_healing_options", rval = "healing_options", args = { }, const = false, static = false, },
            { name = "has_healing_options", rval = "healing_options", args = { "healing_options", }, const = false, static = false, },
            { name = "get_healing_item", rval = "item &", args = { "healing_options", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "has_painkiller", rval = "bool", args = { }, const = false, static = false, },
            { name = "took_painkiller", rval = "bool", args = { }, const = true, static = false, },
            { name = "use_painkiller", rval = "void", args = { }, const = false, static = false, },
            { name = "activate_item", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "will_accept_from_player", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "wants_to_sell", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "wants_to_sell", rval = "bool", args = { "const item &", "int", "int", }, const = true, static = false, },
            { name = "wants_to_buy", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "wants_to_buy", rval = "bool", args = { "const item &", "int", "int", }, const = true, static = false, },
            { name = "regen_ai_cache", rval = "void", args = { }, const = false, static = false, },
            { name = "current_target", rval = "const Creature *", args = { }, const = true, static = false, },
            { name = "current_target", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "current_ally", rval = "const Creature *", args = { }, const = true, static = false, },
            { name = "current_ally", rval = "Creature *", args = { }, const = false, static = false, },
            { name = "good_escape_direction", rval = "tripoint", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "danger_assessment", rval = "float", args = { }, const = false, static = false, },
            { name = "average_damage_dealt", rval = "float", args = { }, const = false, static = false, },
            { name = "need_heal", rval = "bool", args = { "const player &", }, const = false, static = false, },
            { name = "bravery_check", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "emergency", rval = "bool", args = { }, const = true, static = false, },
            { name = "emergency", rval = "bool", args = { "float", }, const = true, static = false, },
            { name = "is_active", rval = "bool", args = { }, const = true, static = false, },
            --{ name = "say", rval = "void", args = { "typename ...", "const char *const", "Args &&...", }, const = true, static = false, },
            { name = "say", rval = "void", args = { "const std::string &", }, optional_args = { "const int", }, const = true, static = false, },
            { name = "decide_needs", rval = "void", args = { }, const = false, static = false, },
            { name = "die", rval = "void", args = { "Creature *", }, const = false, static = false, },
            { name = "is_dead", rval = "bool", args = { }, const = true, static = false, },
            { name = "smash_ability", rval = "int", args = { }, const = true, static = false, },
            { name = "complain_about", rval = "bool", args = { "const std::string &", "const time_duration &", "const std::string &", }, optional_args = { "const bool", "const int", }, const = false, static = false, },
            { name = "warn_about", rval = "void", args = { "const std::string &", }, optional_args = { "const time_duration &", "const std::string &", }, const = false, static = false, },
            { name = "complain", rval = "bool", args = { }, const = false, static = false, },
            { name = "handle_sound", rval = "void", args = { "int", "const std::string &", "int", "const tripoint &", }, const = false, static = false, },
            { name = "shift", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "move", rval = "void", args = { }, const = false, static = false, },
            { name = "execute_action", rval = "void", args = { "npc_action", }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "evaluate_enemy", rval = "float", args = { "const Creature &", }, const = true, static = false, },
            { name = "assess_danger", rval = "void", args = { }, const = false, static = false, },
            { name = "method_of_fleeing", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "method_of_attack", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "address_needs", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "address_needs", rval = "npc_action", args = { "float", }, const = false, static = false, },
            { name = "address_player", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "long_term_goal_action", rval = "npc_action", args = { }, const = false, static = false, },
            { name = "scan_new_items", rval = "bool", args = { }, const = false, static = false, },
            { name = "wield_better_weapon", rval = "bool", args = { }, const = false, static = false, },
            { name = "confidence_mult", rval = "double", args = { }, const = true, static = false, },
            { name = "confident_shoot_range", rval = "int", args = { "const item &", "int", }, const = true, static = false, },
            { name = "confident_gun_mode_range", rval = "int", args = { "const gun_mode &", "int", }, const = true, static = false, },
            { name = "confident_throw_range", rval = "int", args = { "const item &", "Creature *", }, const = true, static = false, },
            { name = "wont_hit_friend", rval = "bool", args = { "const tripoint &", "const item &", "bool", }, const = true, static = false, },
            { name = "enough_time_to_reload", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "can_reload_current", rval = "bool", args = { }, const = false, static = false, },
            { name = "find_reloadable", rval = "const item &", args = { }, const = true, static = false, },
            { name = "find_reloadable", rval = "item &", args = { }, const = false, static = false, },
            { name = "find_usable_ammo", rval = "item_location", args = { "const item &", }, const = false, static = false, },
            { name = "find_usable_ammo", rval = "const item_location", args = { "const item &", }, const = true, static = false, },
            --{ name = "dispose_item", rval = "bool", args = { "item_location &&", }, optional_args = { "const std::string &", }, const = false, static = false, },
            { name = "aim", rval = "void", args = { }, const = false, static = false, },
            { name = "do_reload", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "update_path", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", "bool", }, const = false, static = false, },
            { name = "can_open_door", rval = "bool", args = { "const tripoint &", "const bool", }, const = true, static = false, },
            { name = "can_move_to", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "move_to", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", "std::set< tripoint > *", }, const = false, static = false, },
            { name = "move_to_next", rval = "void", args = { }, const = false, static = false, },
            { name = "avoid_friendly_fire", rval = "void", args = { }, const = false, static = false, },
            { name = "escape_explosion", rval = "void", args = { }, const = false, static = false, },
            { name = "move_away_from", rval = "void", args = { "const tripoint &", }, optional_args = { "bool", "std::set< tripoint > *", }, const = false, static = false, },
            { name = "move_away_from", rval = "void", args = { "const std::vector< sphere > &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "move_pause", rval = "void", args = { }, const = false, static = false, },
            { name = "get_pathfinding_settings", rval = "const pathfinding_settings &", args = { }, const = true, static = false, },
            { name = "get_pathfinding_settings", rval = "const pathfinding_settings &", args = { "bool", }, const = true, static = false, },
            { name = "get_path_avoid", rval = "std::set< tripoint >", args = { }, const = true, static = false, },
            { name = "find_item", rval = "void", args = { }, const = false, static = false, },
            { name = "pick_up_item", rval = "void", args = { }, const = false, static = false, },
            { name = "drop_items", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "pick_up_item_map", rval = "std::list< item >", args = { "const tripoint &", }, const = false, static = false, },
            { name = "pick_up_item_vehicle", rval = "std::list< item >", args = { "vehicle &", "int", }, const = false, static = false, },
            { name = "has_item_whitelist", rval = "bool", args = { }, const = true, static = false, },
            { name = "item_name_whitelisted", rval = "bool", args = { "const std::string &", }, const = false, static = false, },
            { name = "item_whitelisted", rval = "bool", args = { "const item &", }, const = false, static = false, },
            { name = "find_corpse_to_pulp", rval = "bool", args = { }, const = false, static = false, },
            { name = "do_pulp", rval = "bool", args = { }, const = false, static = false, },
            { name = "do_player_activity", rval = "bool", args = { }, const = false, static = false, },
            { name = "alt_attack", rval = "bool", args = { }, const = false, static = false, },
            { name = "heal_player", rval = "void", args = { "player &", }, const = false, static = false, },
            { name = "heal_self", rval = "void", args = { }, const = false, static = false, },
            { name = "mug_player", rval = "void", args = { "player &", }, const = false, static = false, },
            { name = "look_for_player", rval = "void", args = { "const player &", }, const = false, static = false, },
            { name = "saw_player_recently", rval = "bool", args = { }, const = true, static = false, },
            { name = "consume_food", rval = "bool", args = { }, const = false, static = false, },
            { name = "has_omt_destination", rval = "bool", args = { }, const = true, static = false, },
            { name = "set_omt_destination", rval = "void", args = { }, const = false, static = false, },
            { name = "go_to_omt_destination", rval = "void", args = { }, const = false, static = false, },
            { name = "reach_omt_destination", rval = "void", args = { }, const = false, static = false, },
            { name = "guard_current_pos", rval = "void", args = { }, const = false, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_npc", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            { name = "add_memorial_log", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "query_yn", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "extended_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "hp_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "speed_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "setpos", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "travel_overmap", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_attitude", rval = "npc_attitude", args = { }, const = true, static = false, },
            { name = "set_attitude", rval = "void", args = { "npc_attitude", }, const = false, static = false, },
            { name = "global_square_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "on_unload", rval = "void", args = { }, const = false, static = false, },
            { name = "on_load", rval = "void", args = { }, const = false, static = false, },
            { name = "set_companion_mission", rval = "void", args = { "npc &", "const std::string &", }, const = false, static = false, },
            { name = "set_companion_mission", rval = "void", args = { "const tripoint &", "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "set_companion_mission", rval = "void", args = { "const tripoint &", "const std::string &", "const std::string &", "const tripoint &", }, const = false, static = false, },
            { name = "reset_companion_mission", rval = "void", args = { }, const = false, static = false, },
            { name = "get_mission_destination", rval = "cata::optional< tripoint >", args = { }, const = true, static = false, },
            { name = "has_companion_mission", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_companion_mission", rval = "npc_companion_mission", args = { }, const = true, static = false, },
            { name = "get_attitude_group", rval = "attitude_group", args = { "npc_attitude", }, const = true, static = false, },
            { name = "get_need_str_id", rval = "std::string", args = { "const npc_need &", }, const = false, static = true, },
            { name = "get_location_for", rval = "overmap_location_str_id", args = { "const npc_need &", }, const = false, static = true, },
        }
    },
    npc_companion_mission = {
        cpp_name = "npc_companion_mission",
        new = {
        },
        attributes = {
            mission_id = { type = "std::string", writable = true, reference = false, static = false, },
            position = { type = "tripoint", writable = true, reference = false, static = false, },
            role_id = { type = "std::string", writable = true, reference = false, static = false, },
            destination = { type = "cata::optional< tripoint >", writable = true, reference = false, static = false, },
        },
        functions = {
        }
    },
    npc_opinion = {
        cpp_name = "npc_opinion",
        new = {
            { },
            { "int", "int", "int", "int", "int", },
        },
        attributes = {
            trust = { type = "int", writable = true, reference = false, static = false, },
            fear = { type = "int", writable = true, reference = false, static = false, },
            value = { type = "int", writable = true, reference = false, static = false, },
            anger = { type = "int", writable = true, reference = false, static = false, },
            owed = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator+=", rval = "", args = { "const npc_opinion &", }, const = false, static = false, },
            --{ name = "operator+", rval = "", args = { "const npc_opinion &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    npc_personality = {
        cpp_name = "npc_personality",
        new = {
            { },
        },
        attributes = {
            aggression = { type = "signed char", writable = true, reference = false, static = false, },
            bravery = { type = "signed char", writable = true, reference = false, static = false, },
            collector = { type = "signed char", writable = true, reference = false, static = false, },
            altruism = { type = "signed char", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    npc_template = {
        cpp_name = "npc_template",
        new = {
            { },
        },
        attributes = {
            guy = { type = "npc", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "check_consistency", rval = "void", args = { }, const = false, static = true, },
        }
    },
    overmap = {
        cpp_name = "overmap",
        new = {
            { "const overmap &", },
            --{ "overmap &&", },
            { "int", "int", },
        },
        attributes = {
            --invalid_tripoint = { type = "tripoint", writable = false, reference = false, static = true, },
            radios = { type = "std::vector< radio_tower >", writable = true, reference = false, static = false, },
            vehicles = { type = "std::map< int, om_vehicle >", writable = true, reference = false, static = false, },
            camps = { type = "std::vector< basecamp >", writable = true, reference = false, static = false, },
            cities = { type = "std::vector< city >", writable = true, reference = false, static = false, },
            roads_out = { type = "std::vector< city >", writable = true, reference = false, static = false, },
            monster_map = { type = "std::unordered_multimap< tripoint, monster >", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const overmap &", }, const = false, static = false, },
            { name = "populate", rval = "void", args = { "overmap_special_batch &", }, const = false, static = false, },
            { name = "populate", rval = "void", args = { }, const = false, static = false, },
            { name = "pos", rval = "const point&", args = { }, const = true, static = false, },
            { name = "save", rval = "void", args = { }, const = true, static = false, },
            { name = "find_random_omt", rval = "tripoint", args = { "const std::string &", }, const = true, static = false, },
            { name = "find_terrain", rval = "std::vector< point >", args = { "const std::string &", "int", }, const = false, static = false, },
            { name = "ter", rval = "oter_id &", args = { "const int", "const int", "const int", }, const = false, static = false, },
            { name = "ter", rval = "oter_id &", args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_ter", rval = "const oter_id", args = { "const int", "const int", "const int", }, const = true, static = false, },
            { name = "get_ter", rval = "const oter_id", args = { "const tripoint &", }, const = true, static = false, },
            { name = "seen", rval = "bool &", args = { "int", "int", "int", }, const = false, static = false, },
            { name = "explored", rval = "bool &", args = { "int", "int", "int", }, const = false, static = false, },
            { name = "is_explored", rval = "bool", args = { "const int", "const int", "const int", }, const = true, static = false, },
            { name = "has_note", rval = "bool", args = { "int", "int", "int", }, const = true, static = false, },
            { name = "note", rval = "const std::string &", args = { "int", "int", "int", }, const = true, static = false, },
            { name = "add_note", rval = "void", args = { "int", "int", "int", "std::string", }, const = false, static = false, },
            { name = "delete_note", rval = "void", args = { "int", "int", "int", }, const = false, static = false, },
            { name = "scent_at", rval = "const scent_trace &", args = { "const tripoint &", }, const = true, static = false, },
            { name = "set_scent", rval = "void", args = { "const tripoint &", "const scent_trace &", }, const = false, static = false, },
            { name = "find_notes", rval = "std::vector< point >", args = { "const int", "const std::string &", }, const = false, static = false, },
            { name = "is_omt_generated", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "global_base_point", rval = "point", args = { }, const = true, static = false, },
            { name = "get_settings", rval = "const regional_settings&", args = { }, const = true, static = false, },
            { name = "clear_mon_groups", rval = "void", args = { }, const = false, static = false, },
            { name = "mongroup_check", rval = "bool", args = { "const mongroup &", }, const = true, static = false, },
            { name = "monster_check", rval = "bool", args = { "const std::pair< tripoint, monster > &", }, const = true, static = false, },
            { name = "find_camp", rval = "cata::optional< basecamp * >", args = { "const int", "const int", }, const = false, static = false, },
            { name = "insert_npc", rval = "void", args = { "std::shared_ptr< npc >", }, const = false, static = false, },
            { name = "erase_npc", rval = "std::shared_ptr< npc >", args = { "const int", }, const = false, static = false, },
            --{ name = "for_each_npc", rval = "void", args = { "const std::function< void(npc &)> &", }, const = false, static = false, },
            --{ name = "for_each_npc", rval = "void", args = { "const std::function< void(const npc &)> &", }, const = true, static = false, },
            { name = "find_npc", rval = "std::shared_ptr< npc >", args = { "int", }, const = true, static = false, },
            { name = "get_npcs", rval = "const std::vector<std::shared_ptr<npc> >&", args = { }, const = true, static = false, },
            --{ name = "get_npcs", rval = "std::vector< std::shared_ptr< npc > >", args = { "const std::function< bool(const npc &)> &", }, const = true, static = false, },
            { name = "unserialize", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "unserialize_view", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "std::ostream &", }, const = true, static = false, },
            { name = "serialize_view", rval = "void", args = { "std::ostream &", }, const = true, static = false, },
            { name = "unserialize_legacy", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "unserialize_view_legacy", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "inbounds", rval = "bool", args = { "const tripoint &", }, optional_args = { "int", }, const = false, static = true, },
            { name = "inbounds", rval = "bool", args = { "const point &", }, optional_args = { "int", }, const = false, static = true, },
        }
    },
    player = {
        cpp_name = "player",
        parent = "Character",
        new = {
            { },
            { "const player &", },
            --{ "player &&", },
        },
        attributes = {
            stomach = { type = "stomach_contents", writable = true, reference = false, static = false, },
            guts = { type = "stomach_contents", writable = true, reference = false, static = false, },
            view_offset = { type = "tripoint", writable = true, reference = false, static = false, },
            in_vehicle = { type = "bool", writable = true, reference = false, static = false, },
            controlling_vehicle = { type = "bool", writable = true, reference = false, static = false, },
            grab_point = { type = "tripoint", writable = true, reference = false, static = false, },
            hauling = { type = "bool", writable = true, reference = false, static = false, },
            activity = { type = "player_activity", writable = true, reference = false, static = false, },
            backlog = { type = "std::list< player_activity >", writable = true, reference = false, static = false, },
            volume = { type = "int", writable = true, reference = false, static = false, },
            prof = { type = "profession", writable = false, reference = false, static = false, },
            start_location = { type = "start_location_id", writable = true, reference = false, static = false, },
            mutation_category_level = { type = "std::map< std::string, int >", writable = true, reference = false, static = false, },
            next_climate_control_check = { type = "time_point", writable = true, reference = false, static = false, },
            last_climate_control_ret = { type = "bool", writable = true, reference = false, static = false, },
            power_level = { type = "int", writable = true, reference = false, static = false, },
            max_power_level = { type = "int", writable = true, reference = false, static = false, },
            tank_plut = { type = "int", writable = true, reference = false, static = false, },
            reactor_plut = { type = "int", writable = true, reference = false, static = false, },
            slow_rad = { type = "int", writable = true, reference = false, static = false, },
            oxygen = { type = "int", writable = true, reference = false, static = false, },
            stamina = { type = "int", writable = true, reference = false, static = false, },
            recoil = { type = "double", writable = true, reference = false, static = false, },
            last_target = { type = "std::weak_ptr< Creature >", writable = true, reference = false, static = false, },
            last_target_pos = { type = "cata::optional< tripoint >", writable = true, reference = false, static = false, },
            ammo_location = { type = "item_location", writable = true, reference = false, static = false, },
            scent = { type = "int", writable = true, reference = false, static = false, },
            dodges_left = { type = "int", writable = true, reference = false, static = false, },
            blocks_left = { type = "int", writable = true, reference = false, static = false, },
            stim = { type = "int", writable = true, reference = false, static = false, },
            radiation = { type = "int", writable = true, reference = false, static = false, },
            cash = { type = "unsigned long", writable = true, reference = false, static = false, },
            movecounter = { type = "int", writable = true, reference = false, static = false, },
            death_drops = { type = "bool", writable = true, reference = false, static = false, },
            temp_cur = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            frostbite_timer = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            temp_conv = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            mut_drench = { type = "std::array< std::array< int, NUM_WATER_TOLERANCE >, num_bp >", writable = true, reference = false, static = false, },
            drench_capacity = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            body_wetness = { type = "std::array< int, num_bp >", writable = true, reference = false, static = false, },
            focus_pool = { type = "int", writable = true, reference = false, static = false, },
            ma_styles = { type = "std::vector< matype_id >", writable = true, reference = false, static = false, },
            style_selected = { type = "matype_id", writable = true, reference = false, static = false, },
            keep_hands_free = { type = "bool", writable = true, reference = false, static = false, },
            reach_attacking = { type = "bool", writable = true, reference = false, static = false, },
            manual_examine = { type = "bool", writable = true, reference = false, static = false, },
            addictions = { type = "std::vector< addiction >", writable = true, reference = false, static = false, },
            last_craft = { type = "pimpl< craft_command >", writable = true, reference = false, static = false, },
            lastrecipe = { type = "recipe_id", writable = true, reference = false, static = false, },
            last_batch = { type = "int", writable = true, reference = false, static = false, },
            lastconsumed = { type = "itype_id", writable = true, reference = false, static = false, },
            memorial_log = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            follower_ids = { type = "std::set< int >", writable = true, reference = false, static = false, },
            lifetime_stats = { type = "stats", writable = true, reference = false, static = false, },
            camps = { type = "std::set< tripoint >", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "const player &", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "player &&", }, const = false, static = false, },
            { name = "create", rval = "bool", args = { "character_type", }, optional_args = { "const std::string &", }, const = false, static = false, },
            --{ name = "randomize", rval = "void", args = { "bool", "points_left &", }, optional_args = { "bool", }, const = false, static = false, },
            --{ name = "load_template", rval = "bool", args = { "const std::string &", "points_left &", }, const = false, static = false, },
            { name = "normalize", rval = "void", args = { }, const = false, static = false, },
            { name = "disp_name", rval = "std::string", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "skin_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "is_player", rval = "bool", args = { }, const = true, static = false, },
            { name = "process_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "hardcoded_effects", rval = "void", args = { "effect &", }, const = false, static = false, },
            { name = "vomit_mod", rval = "double", args = { }, const = false, static = false, },
            { name = "in_sleep_state", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_npc", rval = "bool", args = { }, const = true, static = false, },
            { name = "basic_symbol_color", rval = "nc_color", args = { }, const = true, static = false, },
            { name = "load_info", rval = "void", args = { "std::string", }, const = false, static = false, },
            { name = "save_info", rval = "std::string", args = { }, const = true, static = false, },
            { name = "visible_mutations", rval = "std::string", args = { "const int", }, const = true, static = false, },
            { name = "short_description_parts", rval = "std::vector< std::string >", args = { }, const = true, static = false, },
            { name = "short_description", rval = "std::string", args = { }, const = true, static = false, },
            { name = "print_info", rval = "int", args = { "const catacurses::window &", "int", "int", "int", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "serialize_map_memory", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize_map_memory", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "memorial", rval = "void", args = { "std::ostream &", "const std::string &", }, const = false, static = false, },
            { name = "disp_info", rval = "void", args = { }, const = false, static = false, },
            { name = "disp_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_stats", rval = "void", args = { }, const = false, static = false, },
            { name = "process_turn", rval = "void", args = { }, const = false, static = false, },
            { name = "recalc_speed_bonus", rval = "void", args = { }, const = false, static = false, },
            { name = "action_taken", rval = "void", args = { }, const = false, static = false, },
            { name = "update_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "apply_persistent_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "update_mental_focus", rval = "void", args = { }, const = false, static = false, },
            { name = "calc_focus_equilibrium", rval = "int", args = { }, const = true, static = false, },
            { name = "update_bodytemp", rval = "void", args = { }, const = false, static = false, },
            { name = "bodytemp_color", rval = "nc_color", args = { "int", }, const = true, static = false, },
            { name = "run_cost", rval = "int", args = { "int", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "swim_speed", rval = "int", args = { }, const = true, static = false, },
            { name = "update_body_wetness", rval = "void", args = { "const w_point &", }, const = false, static = false, },
            { name = "update_body", rval = "void", args = { }, const = false, static = false, },
            { name = "update_body", rval = "void", args = { "const time_point &", "const time_point &", }, const = false, static = false, },
            { name = "update_stomach", rval = "void", args = { "const time_point &", "const time_point &", }, const = false, static = false, },
            { name = "update_needs", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "calc_needs_rates", rval = "needs_rates", args = { }, const = false, static = false, },
            { name = "update_vitamins", rval = "void", args = { "const vitamin_id &", }, const = false, static = false, },
            { name = "regen", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "update_stamina", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "check_needs_extremes", rval = "void", args = { }, const = false, static = false, },
            { name = "is_hibernating", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_conflicting_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_opposite_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_lower_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_higher_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "has_same_type_trait", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "crossed_threshold", rval = "bool", args = { }, const = true, static = false, },
            { name = "purifiable", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "set_highest_cat_level", rval = "void", args = { }, const = false, static = false, },
            { name = "get_highest_category", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_category_dream", rval = "std::string", args = { "const std::string &", "int", }, const = true, static = false, },
            { name = "in_climate_control", rval = "bool", args = { }, const = false, static = false, },
            { name = "introduce_into_anesthesia", rval = "void", args = { "const time_duration &", "player &", "bool", }, const = false, static = false, },
            { name = "has_active_optcloak", rval = "bool", args = { }, const = true, static = false, },
            { name = "add_bionic", rval = "void", args = { "const bionic_id &", }, const = false, static = false, },
            { name = "remove_bionic", rval = "void", args = { "const bionic_id &", }, const = false, static = false, },
            { name = "bionics_adjusted_skill", rval = "float", args = { "const skill_id &", "const skill_id &", "const skill_id &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "install_bionics", rval = "bool", args = { "const itype &", "player &", }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "bionics_install_failure", rval = "void", args = { "player &", "int", "int", "float", }, const = false, static = false, },
            { name = "uninstall_bionic", rval = "bool", args = { "const bionic_id &", "player &", }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "bionics_uninstall_failure", rval = "void", args = { "player &", "int", "int", "float", }, const = false, static = false, },
            { name = "charge_power", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "power_bionics", rval = "void", args = { }, const = false, static = false, },
            { name = "power_mutations", rval = "void", args = { }, const = false, static = false, },
            { name = "activate_bionic", rval = "bool", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "deactivate_bionic", rval = "bool", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "process_bionic", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "remove_random_bionic", rval = "bool", args = { }, const = false, static = false, },
            { name = "clear_bionics", rval = "void", args = { }, const = false, static = false, },
            { name = "num_bionics", rval = "int", args = { }, const = true, static = false, },
            { name = "amount_of_storage_bionics", rval = "std::pair< int, int >", args = { }, const = true, static = false, },
            { name = "bionic_at_index", rval = "bionic &", args = { "int", }, const = false, static = false, },
            { name = "bionic_by_invlet", rval = "bionic *", args = { "long", }, const = false, static = false, },
            { name = "active_light", rval = "float", args = { }, const = true, static = false, },
            { name = "mutation_ok", rval = "bool", args = { "const trait_id &", "bool", "bool", }, const = true, static = false, },
            { name = "mutate", rval = "void", args = { }, const = false, static = false, },
            { name = "mutate_category", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "mutate_towards", rval = "bool", args = { "const trait_id &", }, const = false, static = false, },
            { name = "remove_mutation", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "has_child_flag", rval = "bool", args = { "const trait_id &", }, const = true, static = false, },
            { name = "remove_child_flag", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "pos", rval = "const tripoint &", args = { }, const = true, static = false, },
            { name = "sight_range", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "unimpaired_range", rval = "int", args = { }, const = true, static = false, },
            { name = "overmap_los", rval = "bool", args = { "const tripoint &", "int", }, const = false, static = false, },
            { name = "overmap_sight_range", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "clairvoyance", rval = "int", args = { }, const = true, static = false, },
            { name = "sight_impaired", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_two_arms", rval = "bool", args = { }, const = true, static = false, },
            { name = "handle_melee_wear", rval = "bool", args = { "item &", }, optional_args = { "float", }, const = false, static = false, },
            { name = "unarmed_attack", rval = "bool", args = { }, const = true, static = false, },
            { name = "avoid_trap", rval = "bool", args = { "const tripoint &", "const trap &", }, const = true, static = false, },
            { name = "has_alarm_clock", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_watch", rval = "bool", args = { }, const = true, static = false, },
            { name = "toggle_map_memory", rval = "void", args = { }, const = false, static = false, },
            { name = "should_show_map_memory", rval = "bool", args = { }, const = false, static = false, },
            { name = "memorize_tile", rval = "void", args = { "const tripoint &", "const std::string &", "const int", "const int", }, const = false, static = false, },
            { name = "get_memorized_tile", rval = "memorized_terrain_tile", args = { "const tripoint &", }, const = true, static = false, },
            { name = "memorize_symbol", rval = "void", args = { "const tripoint &", "const long", }, const = false, static = false, },
            { name = "get_memorized_symbol", rval = "long", args = { "const tripoint &", }, const = true, static = false, },
            { name = "max_memorized_tiles", rval = "size_t", args = { }, const = true, static = false, },
            { name = "clear_memorized_tile", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "sees", rval = "bool", args = { "const tripoint &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "sees", rval = "bool", args = { "const Creature &", }, const = true, static = false, },
            { name = "get_hostile_creatures", rval = "std::vector< Creature * >", args = { "int", }, const = true, static = false, },
            { name = "get_visible_creatures", rval = "std::vector< Creature * >", args = { "int", }, const = true, static = false, },
            { name = "get_targetable_creatures", rval = "std::vector< Creature * >", args = { "int", }, const = true, static = false, },
            { name = "sees_with_infrared", rval = "bool", args = { "const Creature &", }, const = true, static = false, },
            --{ name = "attitude_to", rval = "Creature::Attitude", args = { "const Creature &", }, const = true, static = false, },
            { name = "pause", rval = "void", args = { }, const = false, static = false, },
            { name = "set_movement_mode", rval = "void", args = { "std::string", }, const = false, static = false, },
            { name = "get_movement_mode", rval = "const std::string", args = { }, const = true, static = false, },
            { name = "cycle_move_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "reset_move_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "toggle_run_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "toggle_crouch_mode", rval = "void", args = { }, const = false, static = false, },
            { name = "get_shout_volume", rval = "int", args = { }, const = true, static = false, },
            { name = "shout", rval = "void", args = { }, optional_args = { "std::string", "bool", }, const = false, static = false, },
            { name = "ma_static_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_onmove_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_onhit_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_onattack_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_ondodge_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_onblock_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "ma_ongethit_effects", rval = "void", args = { }, const = false, static = false, },
            { name = "has_mabuff", rval = "bool", args = { "const mabuff_id &", }, const = true, static = false, },
            { name = "has_martialart", rval = "bool", args = { "const matype_id &", }, const = true, static = false, },
            { name = "add_martialart", rval = "void", args = { "const matype_id &", }, const = false, static = false, },
            { name = "mabuff_tohit_bonus", rval = "float", args = { }, const = true, static = false, },
            { name = "mabuff_dodge_bonus", rval = "float", args = { }, const = true, static = false, },
            { name = "mabuff_block_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "mabuff_speed_bonus", rval = "int", args = { }, const = true, static = false, },
            { name = "mabuff_armor_bonus", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "mabuff_damage_mult", rval = "float", args = { "damage_type", }, const = true, static = false, },
            { name = "mabuff_damage_bonus", rval = "int", args = { "damage_type", }, const = true, static = false, },
            { name = "mabuff_attack_cost_penalty", rval = "int", args = { }, const = true, static = false, },
            { name = "mabuff_attack_cost_mult", rval = "float", args = { }, const = true, static = false, },
            { name = "is_throw_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "stability_roll", rval = "float", args = { }, const = true, static = false, },
            { name = "is_quiet", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_melee", rval = "bool", args = { }, const = true, static = false, },
            { name = "digging", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_on_ground", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_dead_state", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_elec_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_immune_effect", rval = "bool", args = { "const efftype_id &", }, const = true, static = false, },
            { name = "is_immune_damage", rval = "bool", args = { "const damage_type", }, const = true, static = false, },
            { name = "is_rad_immune", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_miss_recovery_tec", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "has_grab_break_tec", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_leg_block", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_arm_block", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_limb_block", rval = "bool", args = { }, const = true, static = false, },
            { name = "best_shield", rval = "item &", args = { }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", "bool", "const matec_id &", }, optional_args = { "bool", }, const = false, static = false, },
            --{ name = "melee_attack", rval = "void", args = { "Creature &", "bool", }, const = false, static = false, },
            { name = "get_weapon_dispersion", rval = "dispersion_sources", args = { "const item &", }, const = true, static = false, },
            { name = "handle_gun_damage", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "recoil_vehicle", rval = "double", args = { }, const = true, static = false, },
            { name = "recoil_total", rval = "double", args = { }, const = true, static = false, },
            { name = "gun_engagement_moves", rval = "int", args = { "const item &", }, optional_args = { "int", "int", }, const = true, static = false, },
            { name = "fire_gun", rval = "int", args = { "const tripoint &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "fire_gun", rval = "int", args = { "const tripoint &", "int", "item &", }, const = false, static = false, },
            { name = "reach_attack", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "block_hit", rval = "bool", args = { "Creature *", "body_part &", "damage_instance &", }, const = false, static = false, },
            { name = "armor_absorb", rval = "bool", args = { "damage_unit &", "item &", }, const = false, static = false, },
            { name = "bionic_armor_bonus", rval = "float", args = { "body_part", "damage_type", }, const = true, static = false, },
            { name = "passive_absorb_hit", rval = "void", args = { "body_part", "damage_unit &", }, const = true, static = false, },
            { name = "absorb_hit", rval = "void", args = { "body_part", "damage_instance &", }, const = false, static = false, },
            { name = "on_dodge", rval = "void", args = { "Creature *", "float", }, const = false, static = false, },
            { name = "on_hit", rval = "void", args = { "Creature *", }, optional_args = { "body_part", "float", "dealt_projectile_attack const *const", }, const = false, static = false, },
            { name = "on_hurt", rval = "void", args = { "Creature *", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "bonus_damage", rval = "float", args = { "bool", }, const = true, static = false, },
            { name = "get_hit_base", rval = "float", args = { }, const = true, static = false, },
            { name = "hit_roll", rval = "float", args = { }, const = true, static = false, },
            { name = "crit_chance", rval = "double", args = { "float", "float", "const item &", }, const = true, static = false, },
            { name = "scored_crit", rval = "bool", args = { "float", "const item &", }, const = true, static = false, },
            { name = "attack_speed", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "get_hit_weapon", rval = "float", args = { "const item &", }, const = true, static = false, },
            { name = "weapon_value", rval = "double", args = { "const item &", }, optional_args = { "long", }, const = true, static = false, },
            { name = "gun_value", rval = "double", args = { "const item &", }, optional_args = { "long", }, const = true, static = false, },
            { name = "melee_value", rval = "double", args = { "const item &", }, const = true, static = false, },
            { name = "unarmed_value", rval = "double", args = { }, const = true, static = false, },
            { name = "roll_all_damage", rval = "void", args = { "bool", "damage_instance &", "bool", "const item &", }, const = true, static = false, },
            { name = "roll_bash_damage", rval = "void", args = { "bool", "damage_instance &", "bool", "const item &", }, const = true, static = false, },
            { name = "roll_cut_damage", rval = "void", args = { "bool", "damage_instance &", "bool", "const item &", }, const = true, static = false, },
            { name = "roll_stab_damage", rval = "void", args = { "bool", "damage_instance &", "bool", "const item &", }, const = true, static = false, },
            { name = "get_all_techniques", rval = "std::vector< matec_id >", args = { "const item &", }, const = true, static = false, },
            { name = "has_technique", rval = "bool", args = { "const matec_id &", "const item &", }, const = true, static = false, },
            { name = "pick_technique", rval = "matec_id", args = { "Creature &", "const item &", "bool", "bool", "bool", }, const = false, static = false, },
            { name = "perform_technique", rval = "void", args = { "const ma_technique &", "Creature &", "damage_instance &", "int &", }, const = false, static = false, },
            { name = "perform_special_attacks", rval = "void", args = { "Creature &", }, const = false, static = false, },
            { name = "mutation_attacks", rval = "std::vector< special_attack >", args = { "Creature &", }, const = true, static = false, },
            { name = "melee_special_effects", rval = "std::string", args = { "Creature &", "damage_instance &", "item &", }, const = false, static = false, },
            { name = "get_dodge_base", rval = "float", args = { }, const = true, static = false, },
            { name = "get_dodge", rval = "float", args = { }, const = true, static = false, },
            { name = "dodge_roll", rval = "float", args = { }, const = false, static = false, },
            { name = "get_melee", rval = "float", args = { }, const = true, static = false, },
            { name = "add_miss_reason", rval = "void", args = { "const std::string &", "unsigned int", }, const = false, static = false, },
            { name = "clear_miss_reasons", rval = "void", args = { }, const = false, static = false, },
            { name = "get_miss_reason", rval = "std::string", args = { }, const = false, static = false, },
            { name = "uncanny_dodge", rval = "bool", args = { }, const = false, static = false, },
            { name = "adjacent_tile", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "climbing_cost", rval = "int", args = { "const tripoint &", "const tripoint &", }, const = true, static = false, },
            { name = "throw_item", rval = "dealt_projectile_attack", args = { "const tripoint &", "const item &", }, optional_args = { "const cata::optional< tripoint > &", }, const = false, static = false, },
            { name = "read_speed", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "rust_rate", rval = "int", args = { }, optional_args = { "bool", }, const = true, static = false, },
            { name = "talk_skill", rval = "int", args = { }, const = true, static = false, },
            { name = "intimidation", rval = "int", args = { }, const = true, static = false, },
            { name = "immune_to", rval = "bool", args = { "body_part", "damage_unit", }, const = true, static = false, },
            { name = "deal_damage", rval = "dealt_damage_instance", args = { "Creature *", "body_part", "const damage_instance &", }, const = false, static = false, },
            { name = "reduce_healing_effect", rval = "int", args = { "const efftype_id &", "int", "body_part", }, const = false, static = false, },
            { name = "apply_damage", rval = "void", args = { "Creature *", "body_part", "int", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "mod_pain", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_pain", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_perceived_pain", rval = "int", args = { }, const = true, static = false, },
            { name = "cough", rval = "void", args = { }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "add_pain_msg", rval = "void", args = { "int", "body_part", }, const = true, static = false, },
            { name = "mod_painkiller", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "set_painkiller", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "get_painkiller", rval = "int", args = { }, const = true, static = false, },
            { name = "heal", rval = "void", args = { "body_part", "int", }, const = false, static = false, },
            { name = "heal", rval = "void", args = { "hp_part", "int", }, const = false, static = false, },
            { name = "healall", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "hurtall", rval = "void", args = { "int", "Creature *", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "hitall", rval = "int", args = { "int", "int", "Creature *", }, const = false, static = false, },
            { name = "knock_back_from", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "fall_damage_mod", rval = "float", args = { }, const = true, static = false, },
            { name = "impact", rval = "int", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "hp_percentage", rval = "int", args = { }, const = true, static = false, },
            { name = "get_sick", rval = "void", args = { }, const = false, static = false, },
            { name = "get_radio_items", rval = "std::list< item * >", args = { }, const = false, static = false, },
            { name = "get_artifact_items", rval = "std::list< item * >", args = { }, const = false, static = false, },
            { name = "add_addiction", rval = "void", args = { "add_type", "int", }, const = false, static = false, },
            { name = "rem_addiction", rval = "void", args = { "add_type", }, const = false, static = false, },
            { name = "has_addiction", rval = "bool", args = { "add_type", }, const = true, static = false, },
            { name = "addiction_level", rval = "int", args = { "add_type", }, const = true, static = false, },
            { name = "siphon", rval = "void", args = { "vehicle &", "const itype_id &", }, const = false, static = false, },
            { name = "suffer", rval = "void", args = { }, const = false, static = false, },
            { name = "irradiate", rval = "bool", args = { "float", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "mend", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "vomit", rval = "void", args = { }, const = false, static = false, },
            { name = "sound_hallu", rval = "void", args = { }, const = false, static = false, },
            { name = "drench", rval = "void", args = { "int", "const body_part_set &", "bool", }, const = false, static = false, },
            { name = "drench_mut_calc", rval = "void", args = { }, const = false, static = false, },
            { name = "apply_wetness_morale", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "drink_from_hands", rval = "int", args = { "item &", }, const = false, static = false, },
            { name = "consume", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "consume_item", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "allergy_type", rval = "morale_type", args = { "const item &", }, const = true, static = false, },
            { name = "eat", rval = "bool", args = { "item &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "modify_health", rval = "void", args = { "const islot_comestible &", }, const = false, static = false, },
            { name = "modify_stimulation", rval = "void", args = { "const islot_comestible &", }, const = false, static = false, },
            { name = "modify_addiction", rval = "void", args = { "const islot_comestible &", }, const = false, static = false, },
            { name = "modify_morale", rval = "void", args = { "item &", }, optional_args = { "int", }, const = false, static = false, },
            { name = "can_eat", rval = "ret_val< edible_rating >", args = { "const item &", }, const = true, static = false, },
            { name = "will_eat", rval = "ret_val< edible_rating >", args = { "const item &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "get_cbm_rechargeable_with", rval = "rechargeable_cbm", args = { "const item &", }, const = true, static = false, },
            { name = "get_acquirable_energy", rval = "int", args = { "const item &", "rechargeable_cbm", }, const = true, static = false, },
            { name = "get_acquirable_energy", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "stomach_capacity", rval = "int", args = { }, const = true, static = false, },
            { name = "kcal_for", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "nutrition_for", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "calories_for", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "fun_for", rval = "std::pair< int, int >", args = { "const item &", }, const = true, static = false, },
            { name = "book_fun_for", rval = "int", args = { "const item &", "const player &", }, const = true, static = false, },
            { name = "get_comestible_from", rval = "item &", args = { "item &", }, const = true, static = false, },
            { name = "get_hunger_description", rval = "std::pair< std::string, nc_color >", args = { }, const = true, static = false, },
            { name = "initialize_stomach_contents", rval = "void", args = { }, const = false, static = false, },
            { name = "vitamins_from", rval = "std::map< vitamin_id, int >", args = { "const item &", }, const = true, static = false, },
            { name = "vitamins_from", rval = "std::map< vitamin_id, int >", args = { "const itype_id &", }, const = true, static = false, },
            { name = "vitamin_rate", rval = "time_duration", args = { "const vitamin_id &", }, const = true, static = false, },
            { name = "vitamin_mod", rval = "int", args = { "const vitamin_id &", "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "vitamins_mod", rval = "void", args = { "const std::map< vitamin_id, int >", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "vitamin_get", rval = "int", args = { "const vitamin_id &", }, const = true, static = false, },
            { name = "vitamin_set", rval = "bool", args = { "const vitamin_id &", "int", }, const = false, static = false, },
            { name = "metabolic_rate_base", rval = "float", args = { }, const = true, static = false, },
            { name = "metabolic_rate", rval = "float", args = { }, const = true, static = false, },
            { name = "consume_effects", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "rooted_message", rval = "void", args = { }, const = true, static = false, },
            { name = "rooted", rval = "void", args = { }, const = false, static = false, },
            { name = "get_lift_assist", rval = "int", args = { }, const = true, static = false, },
            { name = "list_ammo", rval = "bool", args = { "const item &", "std::vector< item::reload_option > &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "select_ammo", rval = "item::reload_option", args = { "const item &", }, optional_args = { "bool", "bool", }, const = true, static = false, },
            { name = "select_ammo", rval = "item::reload_option", args = { "const item &", "std::vector< item::reload_option >", }, const = true, static = false, },
            --{ name = "can_lift", rval = "bool", args = { "typename T", "const T &", }, const = true, static = false, },
            { name = "can_wear", rval = "ret_val< bool >", args = { "const item &", }, const = true, static = false, },
            { name = "can_takeoff", rval = "ret_val< bool >", args = { "const item &", }, optional_args = { "const std::list< item > *", }, const = true, static = false, },
            { name = "can_wield", rval = "ret_val< bool >", args = { "const item &", }, const = true, static = false, },
            { name = "can_unwield", rval = "ret_val< bool >", args = { "const item &", }, const = true, static = false, },
            { name = "can_consume", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "can_estimate_rot", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_wielding", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "wield", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "unwield", rval = "bool", args = { }, const = false, static = false, },
            { name = "pick_style", rval = "bool", args = { }, const = false, static = false, },
            { name = "can_reload", rval = "bool", args = { "const item &", }, optional_args = { "const itype_id &", }, const = true, static = false, },
            --{ name = "dispose_item", rval = "bool", args = { "item_location &&", }, optional_args = { "const std::string &", }, const = false, static = false, },
            --{ name = "mend_item", rval = "void", args = { "item_location &&", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "item_handling_cost", rval = "int", args = { "const item &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "item_store_cost", rval = "int", args = { "const item &", "const item &", }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "item_reload_cost", rval = "int", args = { "const item &", "const item &", "long", }, const = true, static = false, },
            { name = "item_wear_cost", rval = "int", args = { "const item &", }, const = true, static = false, },
            { name = "wear", rval = "cata::optional< std::list< item >::iterator >", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "wear", rval = "cata::optional< std::list< item >::iterator >", args = { "item &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "wear_item", rval = "cata::optional< std::list< item >::iterator >", args = { "const item &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "change_side", rval = "bool", args = { "item &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "change_side", rval = "bool", args = { "int", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "get_dependent_worn_items", rval = "std::list< const item * >", args = { "const item &", }, const = true, static = false, },
            { name = "takeoff", rval = "bool", args = { "const item &", }, optional_args = { "std::list< item > *", }, const = false, static = false, },
            { name = "takeoff", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "drop", rval = "void", args = { "int", "const tripoint &", }, const = false, static = false, },
            { name = "drop", rval = "void", args = { "const std::list< std::pair< int, int >> &", "const tripoint &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "add_or_drop_with_msg", rval = "bool", args = { "item &", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "unload", rval = "bool", args = { "item &", }, const = false, static = false, },
            { name = "wield_contents", rval = "bool", args = { "item &", }, optional_args = { "int", "bool", "int", }, const = false, static = false, },
            { name = "store", rval = "void", args = { "item &", "item &", }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "sort_armor", rval = "void", args = { }, const = false, static = false, },
            { name = "use", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "use", rval = "void", args = { "item_location", }, const = false, static = false, },
            { name = "use_wielded", rval = "void", args = { }, const = false, static = false, },
            { name = "invoke_item", rval = "bool", args = { "item *", "const tripoint &", }, const = false, static = false, },
            { name = "invoke_item", rval = "bool", args = { "item *", "const std::string &", "const tripoint &", }, const = false, static = false, },
            { name = "invoke_item", rval = "bool", args = { "item *", }, const = false, static = false, },
            { name = "invoke_item", rval = "bool", args = { "item *", "const std::string &", }, const = false, static = false, },
            { name = "reassign_item", rval = "void", args = { "item &", "long", }, const = false, static = false, },
            { name = "consume_charges", rval = "bool", args = { "item &", "long", }, const = false, static = false, },
            { name = "gunmod_remove", rval = "bool", args = { "item &", "item &", }, const = false, static = false, },
            { name = "gunmod_add", rval = "void", args = { "item &", "item &", }, const = false, static = false, },
            { name = "gunmod_installation_odds", rval = "std::pair< int, int >", args = { "const item &", "const item &", }, const = true, static = false, },
            { name = "toolmod_add", rval = "void", args = { "item_location", "item_location", }, const = false, static = false, },
            { name = "get_book_reader", rval = "const player *", args = { "const item &", "std::vector< std::string > &", }, const = true, static = false, },
            { name = "time_to_read", rval = "int", args = { "const item &", "const player &", }, optional_args = { "const player *", }, const = true, static = false, },
            { name = "fun_to_read", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "read", rval = "bool", args = { "int", }, optional_args = { "const bool", }, const = false, static = false, },
            { name = "do_read", rval = "void", args = { "item &", }, const = false, static = false, },
            { name = "has_identified", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "try_to_sleep", rval = "void", args = { }, optional_args = { "const time_duration &", }, const = false, static = false, },
            { name = "base_comfort_value", rval = "comfort_level", args = { "const tripoint &", }, const = true, static = false, },
            { name = "sleep_spot", rval = "int", args = { "const tripoint &", }, const = true, static = false, },
            { name = "can_sleep", rval = "bool", args = { }, const = false, static = false, },
            { name = "fall_asleep", rval = "void", args = { }, const = false, static = false, },
            { name = "fall_asleep", rval = "void", args = { "const time_duration &", }, const = false, static = false, },
            { name = "wake_up", rval = "void", args = { }, const = false, static = false, },
            { name = "is_snuggling", rval = "std::string", args = { }, const = true, static = false, },
            { name = "fine_detail_vision_mod", rval = "float", args = { }, const = true, static = false, },
            { name = "rate_action_use", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_wear", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_change_side", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_eat", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_read", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_takeoff", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_reload", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_unload", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_mend", rval = "hint_rating", args = { "const item &", }, const = true, static = false, },
            { name = "rate_action_disassemble", rval = "hint_rating", args = { "const item &", }, const = false, static = false, },
            { name = "warmth", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "bonus_item_warmth", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_cut", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_bash_base", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_cut_base", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_env_resist", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_acid", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_fire", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_armor_type", rval = "int", args = { "damage_type", "body_part", }, const = true, static = false, },
            { name = "wearing_something_on", rval = "bool", args = { "body_part", }, const = true, static = false, },
            { name = "natural_attack_restricted_on", rval = "bool", args = { "body_part", }, const = true, static = false, },
            { name = "is_wearing_shoes", rval = "bool", args = { }, optional_args = { "const side &", }, const = true, static = false, },
            { name = "is_wearing_helmet", rval = "bool", args = { }, const = true, static = false, },
            { name = "head_cloth_encumbrance", rval = "int", args = { }, const = true, static = false, },
            { name = "footwear_factor", rval = "double", args = { }, const = true, static = false, },
            { name = "shoe_type_count", rval = "int", args = { "const itype_id &", }, const = true, static = false, },
            { name = "is_wearing_power_armor", rval = "bool", args = { }, optional_args = { "bool *", }, const = true, static = false, },
            { name = "get_wind_resistance", rval = "int", args = { "body_part", }, const = true, static = false, },
            { name = "get_pain_penalty", rval = "stat_mod", args = { }, const = true, static = false, },
            { name = "kcal_speed_penalty", rval = "int", args = { }, const = false, static = false, },
            { name = "adjust_for_focus", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "practice", rval = "void", args = { "const skill_id &", "int", }, optional_args = { "int", }, const = false, static = false, },
            { name = "assign_activity", rval = "void", args = { "const activity_id &", }, optional_args = { "int", "int", "int", "const std::string &", }, const = false, static = false, },
            { name = "assign_activity", rval = "void", args = { "const player_activity &", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "has_activity", rval = "bool", args = { "const activity_id &", }, const = true, static = false, },
            { name = "cancel_activity", rval = "void", args = { }, const = false, static = false, },
            { name = "resume_backlog_activity", rval = "void", args = { }, const = false, static = false, },
            { name = "get_morale_level", rval = "int", args = { }, const = true, static = false, },
            { name = "add_morale", rval = "void", args = { "morale_type", "int", }, optional_args = { "int", "const time_duration &", "const time_duration &", "bool", "const itype *", }, const = false, static = false, },
            { name = "has_morale", rval = "int", args = { "morale_type", }, const = true, static = false, },
            { name = "rem_morale", rval = "void", args = { "morale_type", }, optional_args = { "const itype *", }, const = false, static = false, },
            { name = "clear_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "has_morale_to_read", rval = "bool", args = { }, const = true, static = false, },
            { name = "check_and_recover_morale", rval = "void", args = { }, const = false, static = false, },
            { name = "on_worn_item_transform", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "weapname", rval = "std::string", args = { }, optional_args = { "unsigned int", }, const = true, static = false, },
            { name = "power_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "speed_rating", rval = "float", args = { }, const = true, static = false, },
            { name = "all_items_with_flag", rval = "std::vector< const item * >", args = { "const std::string &", }, const = true, static = false, },
            { name = "process_active_items", rval = "void", args = { }, const = false, static = false, },
            { name = "reduce_charges", rval = "item", args = { "int", "long", }, const = false, static = false, },
            { name = "reduce_charges", rval = "item", args = { "item *", "long", }, const = false, static = false, },
            { name = "invlet_to_position", rval = "int", args = { "long", }, const = true, static = false, },
            { name = "can_interface_armor", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_combat_style", rval = "const martialart &", args = { }, const = true, static = false, },
            { name = "inv_dump", rval = "std::vector< item * >", args = { }, const = false, static = false, },
            { name = "place_corpse", rval = "void", args = { }, const = false, static = false, },
            { name = "place_corpse", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "covered_with_flag", rval = "bool", args = { "const std::string &", "const body_part_set &", }, const = true, static = false, },
            { name = "is_waterproof", rval = "bool", args = { "const body_part_set &", }, const = true, static = false, },
            { name = "use_amount", rval = "std::list< item >", args = { "itype_id", "int", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "use_charges_if_avail", rval = "bool", args = { "const itype_id &", "long", }, const = false, static = false, },
            { name = "use_charges", rval = "std::list< item >", args = { "const itype_id &", "long", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "has_charges", rval = "bool", args = { "const itype_id &", "long", }, optional_args = { "const std::function< bool(const item &)> &", }, const = true, static = false, },
            { name = "amount_worn", rval = "int", args = { "const itype_id &", }, const = true, static = false, },
            { name = "leak_level", rval = "int", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_item_with_flag", rval = "bool", args = { "const std::string &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "has_mission_item", rval = "bool", args = { "int", }, const = true, static = false, },
            { name = "has_gun_for_ammo", rval = "bool", args = { "const ammotype &", }, const = true, static = false, },
            { name = "has_magazine_for_ammo", rval = "bool", args = { "const ammotype &", }, const = true, static = false, },
            { name = "has_weapon", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_recipe", rval = "int", args = { "const recipe *", "const inventory &", "const std::vector< npc *> &", }, const = true, static = false, },
            { name = "knows_recipe", rval = "bool", args = { "const recipe *", }, const = true, static = false, },
            { name = "learn_recipe", rval = "void", args = { "const recipe *", }, const = false, static = false, },
            { name = "exceeds_recipe_requirements", rval = "int", args = { "const recipe &", }, const = true, static = false, },
            { name = "has_recipe_requirements", rval = "bool", args = { "const recipe &", }, const = true, static = false, },
            { name = "can_decomp_learn", rval = "bool", args = { "const recipe &", }, const = true, static = false, },
            { name = "studied_all_recipes", rval = "bool", args = { "const itype &", }, const = true, static = false, },
            { name = "get_learned_recipes", rval = "const recipe_subset &", args = { }, const = true, static = false, },
            { name = "get_recipes_from_books", rval = "const recipe_subset", args = { "const inventory &", }, const = true, static = false, },
            { name = "get_available_recipes", rval = "const recipe_subset", args = { "const inventory &", }, optional_args = { "const std::vector< npc *> *", }, const = true, static = false, },
            { name = "get_books_for_recipe", rval = "const std::set< itype_id >", args = { "const inventory &", "const recipe *", }, const = true, static = false, },
            { name = "morale_crafting_speed_multiplier", rval = "float", args = { "const recipe &", }, const = true, static = false, },
            { name = "lighting_craft_speed_multiplier", rval = "float", args = { "const recipe &", }, const = true, static = false, },
            { name = "crafting_speed_multiplier", rval = "float", args = { "const recipe &", }, optional_args = { "bool", }, const = true, static = false, },
            { name = "crafting_speed_multiplier", rval = "float", args = { "const item &", "const tripoint &", }, const = true, static = false, },
            { name = "available_assistant_count", rval = "int", args = { "const recipe &", }, const = true, static = false, },
            { name = "base_time_to_craft", rval = "int", args = { "const recipe &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "expected_time_to_craft", rval = "int", args = { "const recipe &", }, optional_args = { "int", "bool", }, const = true, static = false, },
            { name = "get_eligible_containers_for_crafting", rval = "std::vector< const item * >", args = { }, const = true, static = false, },
            { name = "check_eligible_containers_for_crafting", rval = "bool", args = { "const recipe &", }, optional_args = { "int", }, const = true, static = false, },
            { name = "has_morale_to_craft", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_make", rval = "bool", args = { "const recipe *", }, optional_args = { "int", }, const = false, static = false, },
            { name = "making_would_work", rval = "bool", args = { "const recipe_id &", "int", }, const = false, static = false, },
            { name = "craft", rval = "void", args = { }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "recraft", rval = "void", args = { }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "long_craft", rval = "void", args = { }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "make_craft", rval = "void", args = { "const recipe_id &", "int", }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "make_all_craft", rval = "void", args = { "const recipe_id &", "int", }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "start_craft", rval = "void", args = { "craft_command &", "const tripoint &", }, const = false, static = false, },
            { name = "complete_craft", rval = "void", args = { "item &", }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "can_continue_craft", rval = "bool", args = { "const item &", }, const = false, static = false, },
            { name = "get_crafting_helpers", rval = "std::vector< npc * >", args = { }, const = true, static = false, },
            { name = "get_num_crafting_helpers", rval = "int", args = { "int", }, const = true, static = false, },
            { name = "craft_skill_gain", rval = "void", args = { "const item &", "const int &", }, const = false, static = false, },
            { name = "can_disassemble", rval = "ret_val< bool >", args = { "const item &", "const inventory &", }, const = true, static = false, },
            { name = "disassemble", rval = "bool", args = { }, const = false, static = false, },
            { name = "disassemble", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "disassemble", rval = "bool", args = { "item &", "int", "bool", }, optional_args = { "bool", }, const = false, static = false, },
            { name = "disassemble_all", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "complete_disassemble", rval = "void", args = { }, const = false, static = false, },
            { name = "complete_disassemble", rval = "void", args = { "int", "const tripoint &", "bool", "const recipe &", }, const = false, static = false, },
            { name = "crafting_inventory", rval = "const inventory &", args = { }, const = false, static = false, },
            { name = "invalidate_crafting_inventory", rval = "void", args = { }, const = false, static = false, },
            { name = "select_item_component", rval = "comp_selection< item_comp >", args = { "const std::vector< item_comp > &", "int", "inventory &", }, optional_args = { "bool", "const std::function< bool(const item &)> &", "bool", }, const = false, static = false, },
            { name = "consume_items", rval = "std::list< item >", args = { "const comp_selection< item_comp > &", "int", }, optional_args = { "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "consume_items", rval = "std::list< item >", args = { "map &", "const comp_selection< item_comp > &", "int", }, optional_args = { "const std::function< bool(const item &)> &", "tripoint", "int", }, const = false, static = false, },
            { name = "consume_items", rval = "std::list< item >", args = { "const std::vector< item_comp > &", }, optional_args = { "int", "const std::function< bool(const item &)> &", }, const = false, static = false, },
            { name = "select_tool_component", rval = "comp_selection< tool_comp >", args = { "const std::vector< tool_comp > &", "int", "inventory &", }, optional_args = { "const std::string &", "bool", "bool", }, const = false, static = false, },
            { name = "consume_tools", rval = "void", args = { "const comp_selection< tool_comp > &", "int", }, const = false, static = false, },
            { name = "consume_tools", rval = "void", args = { "map &", "const comp_selection< tool_comp > &", "int", }, optional_args = { "tripoint", "int", }, const = false, static = false, },
            { name = "consume_tools", rval = "void", args = { "const std::vector< tool_comp > &", }, optional_args = { "int", "const std::string &", }, const = false, static = false, },
            { name = "set_destination", rval = "void", args = { "const std::vector< tripoint > &", }, optional_args = { "const player_activity &", }, const = false, static = false, },
            { name = "clear_destination", rval = "void", args = { }, const = false, static = false, },
            { name = "has_destination", rval = "bool", args = { }, const = true, static = false, },
            { name = "has_destination_activity", rval = "bool", args = { }, const = true, static = false, },
            { name = "start_destination_activity", rval = "void", args = { }, const = false, static = false, },
            { name = "get_auto_move_route", rval = "std::vector< tripoint > &", args = { }, const = false, static = false, },
            { name = "get_next_auto_move_direction", rval = "action_id", args = { }, const = false, static = false, },
            { name = "defer_move", rval = "bool", args = { "const tripoint &", }, const = false, static = false, },
            { name = "shift_destination", rval = "void", args = { "int", "int", }, const = false, static = false, },
            { name = "grab", rval = "void", args = { "object_type", }, optional_args = { "const tripoint &", }, const = false, static = false, },
            { name = "get_grab_type", rval = "object_type", args = { }, const = true, static = false, },
            { name = "start_hauling", rval = "void", args = { }, const = false, static = false, },
            { name = "stop_hauling", rval = "void", args = { }, const = false, static = false, },
            { name = "is_hauling", rval = "bool", args = { }, const = true, static = false, },
            { name = "global_square_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "global_sm_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "global_omt_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "posx", rval = "int", args = { }, const = true, static = false, },
            { name = "posy", rval = "int", args = { }, const = true, static = false, },
            { name = "posz", rval = "int", args = { }, const = true, static = false, },
            { name = "setx", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "sety", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "setz", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "setpos", rval = "void", args = { "const tripoint &", }, const = false, static = false, },
            { name = "temp_equalizer", rval = "void", args = { "body_part", "body_part", }, const = false, static = false, },
            { name = "make_craft_with_command", rval = "void", args = { "const recipe_id &", "int", }, optional_args = { "bool", "const tripoint &", }, const = false, static = false, },
            { name = "get_used_bionics_slots", rval = "int", args = { "const body_part", }, const = true, static = false, },
            { name = "get_total_bionics_slots", rval = "int", args = { "const body_part", }, const = true, static = false, },
            { name = "get_free_bionics_slots", rval = "int", args = { "const body_part", }, const = true, static = false, },
            { name = "bionic_installation_issues", rval = "std::map< body_part, int >", args = { "const bionic_id &", }, const = false, static = false, },
            { name = "dump_memorial", rval = "std::string", args = { }, const = true, static = false, },
            { name = "add_memorial_log", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "load_memorial_file", rval = "void", args = { "std::istream &", }, const = false, static = false, },
            { name = "mod_stat", rval = "void", args = { "const std::string &", "float", }, const = false, static = false, },
            { name = "getID", rval = "int", args = { }, const = true, static = false, },
            { name = "setID", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "is_underwater", rval = "bool", args = { }, const = true, static = false, },
            { name = "set_underwater", rval = "void", args = { "bool", }, const = false, static = false, },
            { name = "is_hallucination", rval = "bool", args = { }, const = true, static = false, },
            { name = "environmental_revert_effect", rval = "void", args = { }, const = false, static = false, },
            { name = "is_invisible", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_deaf", rval = "bool", args = { }, const = true, static = false, },
            { name = "can_hear", rval = "bool", args = { "const tripoint &", "const int", }, const = true, static = false, },
            { name = "hearing_ability", rval = "float", args = { }, const = true, static = false, },
            { name = "visibility", rval = "int", args = { }, optional_args = { "bool", "int", }, const = true, static = false, },
            { name = "get_size", rval = "m_size", args = { }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp", rval = "int", args = { }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { "hp_part", }, const = true, static = false, },
            { name = "get_hp_max", rval = "int", args = { }, const = true, static = false, },
            { name = "get_stamina_max", rval = "int", args = { }, const = true, static = false, },
            { name = "burn_move_stamina", rval = "void", args = { "int", }, const = false, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "const std::string &", }, const = true, static = false, },
            { name = "add_msg_if_player", rval = "void", args = { "game_message_type", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_npc", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "add_msg_player_or_say", rval = "void", args = { "game_message_type", "const std::string &", "const std::string &", }, const = true, static = false, },
            { name = "knows_trap", rval = "bool", args = { "const tripoint &", }, const = true, static = false, },
            { name = "add_known_trap", rval = "void", args = { "const tripoint &", "const trap &", }, const = false, static = false, },
            { name = "search_surroundings", rval = "void", args = { }, const = false, static = false, },
            { name = "do_skill_rust", rval = "void", args = { }, const = false, static = false, },
            { name = "get_overlay_ids", rval = "std::vector< std::string >", args = { }, const = true, static = false, },
            { name = "spores", rval = "void", args = { }, const = false, static = false, },
            { name = "blossoms", rval = "void", args = { }, const = false, static = false, },
            { name = "get_active_missions", rval = "std::vector< mission * >", args = { }, const = true, static = false, },
            { name = "get_completed_missions", rval = "std::vector< mission * >", args = { }, const = true, static = false, },
            { name = "get_failed_missions", rval = "std::vector< mission * >", args = { }, const = true, static = false, },
            { name = "get_active_mission", rval = "mission *", args = { }, const = true, static = false, },
            { name = "get_active_mission_target", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "set_active_mission", rval = "void", args = { "mission &", }, const = false, static = false, },
            { name = "on_mission_assignment", rval = "void", args = { "mission &", }, const = false, static = false, },
            { name = "on_mission_finished", rval = "void", args = { "mission &", }, const = false, static = false, },
            { name = "on_mutation_gain", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "on_mutation_loss", rval = "void", args = { "const trait_id &", }, const = false, static = false, },
            { name = "on_stat_change", rval = "void", args = { "const std::string &", "int", }, const = false, static = false, },
            { name = "on_item_wear", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_item_takeoff", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_worn_item_washed", rval = "void", args = { "const item &", }, const = false, static = false, },
            { name = "on_effect_int_change", rval = "void", args = { "const efftype_id &", "int", }, optional_args = { "body_part", }, const = false, static = false, },
            { name = "print_encumbrance", rval = "void", args = { "const catacurses::window &", }, optional_args = { "int", "item *", }, const = true, static = false, },
            { name = "print_health", rval = "void", args = { }, const = true, static = false, },
            { name = "query_yn", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "has_enough_charges", rval = "bool", args = { "const item &", "bool", }, const = true, static = false, },
            { name = "get_pathfinding_settings", rval = "const pathfinding_settings &", args = { }, const = true, static = false, },
            { name = "get_path_avoid", rval = "std::set< tripoint >", args = { }, const = true, static = false, },
            { name = "disarm", rval = "void", args = { "npc &", }, const = false, static = false, },
            { name = "steal", rval = "void", args = { "npc &", }, const = false, static = false, },
            { name = "get_targeting_data", rval = "const targeting_data &", args = { }, const = false, static = false, },
            { name = "set_targeting_data", rval = "void", args = { "const targeting_data &", }, const = false, static = false, },
            { name = "thirst_speed_penalty", rval = "int", args = { "int", }, const = false, static = true, },
            --{ name = "operator()", rval = "", args = { "const string_id< profession > &", "const string_id< profession > &", }, const = false, static = false, },
            --{ name = "operator()", rval = "", args = { "const scenario *", "const scenario *", }, const = false, static = false, },
        }
    },
    player_activity = {
        cpp_name = "player_activity",
        new = {
            { },
            { "activity_id", },
            { "activity_id", "int", },
            { "activity_id", "int", "int", },
            { "activity_id", "int", "int", "int", },
            { "activity_id", "int", "int", "int", "const std::string &", },
            --{ "player_activity &&", },
            { "const player_activity &", },
        },
        attributes = {
            moves_total = { type = "int", writable = true, reference = false, static = false, },
            moves_left = { type = "int", writable = true, reference = false, static = false, },
            index = { type = "int", writable = true, reference = false, static = false, },
            position = { type = "int", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            targets = { type = "std::vector< item_location >", writable = true, reference = false, static = false, },
            values = { type = "std::vector< int >", writable = true, reference = false, static = false, },
            str_values = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            coords = { type = "std::vector< tripoint >", writable = true, reference = false, static = false, },
            monsters = { type = "std::vector< std::weak_ptr< monster > >", writable = true, reference = false, static = false, },
            placement = { type = "tripoint", writable = true, reference = false, static = false, },
            auto_resume = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator=", rval = "", args = { "player_activity &&", }, const = false, static = false, },
            --{ name = "operator=", rval = "", args = { "const player_activity &", }, const = false, static = false, },
            --{ name = "operator bool", rval = "", args = { }, const = true, static = false, },
            { name = "is_null", rval = "bool", args = { }, const = true, static = false, },
            { name = "set_to_null", rval = "void", args = { }, const = false, static = false, },
            { name = "id", rval = "const activity_id&", args = { }, const = true, static = false, },
            { name = "rooted", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_stop_phrase", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_value", rval = "int", args = { "size_t", }, optional_args = { "int", }, const = true, static = false, },
            { name = "get_str_value", rval = "std::string", args = { "size_t", }, optional_args = { "const std::string &", }, const = true, static = false, },
            { name = "is_suspendable", rval = "bool", args = { }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "deserialize_legacy_type", rval = "void", args = { "int", "activity_id &", }, const = false, static = false, },
            { name = "do_turn", rval = "void", args = { "player &", }, const = false, static = false, },
            { name = "can_resume_with", rval = "bool", args = { "const player_activity &", "const Character &", }, const = true, static = false, },
            { name = "is_distraction_ignored", rval = "bool", args = { "distraction_type", }, const = true, static = false, },
            { name = "ignore_distraction", rval = "void", args = { "distraction_type", }, const = false, static = false, },
            { name = "allow_distractions", rval = "void", args = { }, const = false, static = false, },
            { name = "inherit_distractions", rval = "void", args = { "const player_activity &", }, const = false, static = false, },
        }
    },
    point = {
        cpp_name = "point",
        new = {
            { },
            { "int", "int", },
        },
        attributes = {
            x = { type = "int", writable = true, reference = false, static = false, },
            y = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator+", rval = "", args = { "const point &", }, const = true, static = false, },
            --{ name = "operator+=", rval = "", args = { "const point &", }, const = false, static = false, },
            --{ name = "operator-", rval = "", args = { "const point &", }, const = true, static = false, },
            --{ name = "operator-=", rval = "", args = { "const point &", }, const = false, static = false, },
        }
    },
    quality = {
        cpp_name = "quality",
        string_id = "quality_id",
        new = {
        },
        attributes = {
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            id = { type = "quality_id", writable = true, reference = false, static = false, },
            name = { type = "std::string", writable = true, reference = false, static = false, },
            usages = { type = "std::vector< std::pair< int, std::string > >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "load_static", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
        }
    },
    recipe = {
        cpp_name = "recipe",
        string_id = "recipe_id",
        new = {
            { },
        },
        attributes = {
            obsolete = { type = "bool", writable = true, reference = false, static = false, },
            category = { type = "std::string", writable = true, reference = false, static = false, },
            subcategory = { type = "std::string", writable = true, reference = false, static = false, },
            description = { type = "std::string", writable = true, reference = false, static = false, },
            time = { type = "int", writable = true, reference = false, static = false, },
            difficulty = { type = "int", writable = true, reference = false, static = false, },
            never_learn = { type = "bool", writable = true, reference = false, static = false, },
            byproducts = { type = "std::map< itype_id, int >", writable = true, reference = false, static = false, },
            skill_used = { type = "skill_id", writable = true, reference = false, static = false, },
            required_skills = { type = "std::map< skill_id, int >", writable = true, reference = false, static = false, },
            autolearn_requirements = { type = "std::map< skill_id, int >", writable = true, reference = false, static = false, },
            learn_by_disassembly = { type = "std::map< skill_id, int >", writable = true, reference = false, static = false, },
            booksets = { type = "std::map< itype_id, int >", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator bool", rval = "", args = { }, const = true, static = false, },
            { name = "result", rval = "const itype_id&", args = { }, const = true, static = false, },
            { name = "requirements", rval = "const requirement_data&", args = { }, const = true, static = false, },
            { name = "ident", rval = "const recipe_id&", args = { }, const = true, static = false, },
            { name = "is_blacklisted", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_component_filter", rval = "const std::function< bool(const item &)>", args = { }, const = true, static = false, },
            { name = "disassembly_requirements", rval = "requirement_data", args = { }, const = true, static = false, },
            { name = "result_name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "required_skills_string", rval = "std::string", args = { "const Character *", "bool", }, const = true, static = false, },
            { name = "required_skills_string", rval = "std::string", args = { "const Character *", }, const = true, static = false, },
            { name = "batch_savings_string", rval = "std::string", args = { }, const = true, static = false, },
            { name = "create_result", rval = "item", args = { }, const = true, static = false, },
            { name = "create_results", rval = "std::vector< item >", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "create_byproducts", rval = "std::vector< item >", args = { }, optional_args = { "int", }, const = true, static = false, },
            { name = "has_byproducts", rval = "bool", args = { }, const = true, static = false, },
            { name = "batch_time", rval = "int", args = { "int", "float", "size_t", }, const = true, static = false, },
            { name = "has_flag", rval = "bool", args = { "const std::string &", }, const = true, static = false, },
            { name = "is_reversible", rval = "bool", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "finalize", rval = "void", args = { }, const = false, static = false, },
            { name = "get_consistency_error", rval = "std::string", args = { }, const = true, static = false, },
            { name = "is_blueprint", rval = "bool", args = { }, const = true, static = false, },
            { name = "get_blueprint", rval = "std::string", args = { }, const = true, static = false, },
            { name = "hot_result", rval = "bool", args = { }, const = true, static = false, },
        }
    },
    Skill = {
        cpp_name = "Skill",
        string_id = "skill_id",
        new = {
            { },
            { "skill_id", "std::string", "std::string", "std::set< std::string >", },
        },
        attributes = {
            skills = { type = "std::vector< Skill >", writable = true, reference = false, static = true, },
        },
        functions = {
            { name = "load_skill", rval = "void", args = { "JsonObject &", }, const = false, static = true, },
            { name = "from_legacy_int", rval = "skill_id", args = { "int", }, const = false, static = true, },
            { name = "random_skill", rval = "skill_id", args = { }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            --{ name = "get_skills_sorted_by", rval = "std::vector< const Skill * >", args = { "std::function< bool(const Skill &, const Skill &)>", }, const = false, static = true, },
            { name = "ident", rval = "const skill_id&", args = { }, const = true, static = false, },
            { name = "name", rval = "const std::string&", args = { }, const = true, static = false, },
            { name = "description", rval = "const std::string&", args = { }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "const Skill &", }, const = true, static = false, },
            --{ name = "operator<", rval = "", args = { "const Skill &", }, const = true, static = false, },
            --{ name = "operator!=", rval = "", args = { "const Skill &", }, const = true, static = false, },
            { name = "is_combat_skill", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_contextual_skill", rval = "bool", args = { }, const = true, static = false, },
        }
    },
    species_type = {
        cpp_name = "species_type",
        string_id = "species_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "species_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            flags = { type = "enum_bitset< m_flag >", writable = true, reference = false, static = false, },
            anger = { type = "enum_bitset< mon_trigger >", writable = true, reference = false, static = false, },
            fear = { type = "enum_bitset< mon_trigger >", writable = true, reference = false, static = false, },
            placate = { type = "enum_bitset< mon_trigger >", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
        }
    },
    start_location = {
        cpp_name = "start_location",
        string_id = "start_location_id",
        new = {
            { },
        },
        attributes = {
        },
        functions = {
            { name = "ident", rval = "const string_id< start_location > &", args = { }, const = true, static = false, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "target", rval = "std::string", args = { }, const = true, static = false, },
            { name = "flags", rval = "const std::set< std::string > &", args = { }, const = true, static = false, },
            { name = "find_player_initial_location", rval = "tripoint", args = { }, const = true, static = false, },
            { name = "prepare_map", rval = "void", args = { "const tripoint &", }, const = true, static = false, },
            { name = "place_player", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "burn", rval = "void", args = { "const tripoint &", "const size_t", "const int", }, const = true, static = false, },
            { name = "add_map_special", rval = "void", args = { "const tripoint &", "const std::string &", }, const = true, static = false, },
            { name = "handle_heli_crash", rval = "void", args = { "player &", }, const = true, static = false, },
            { name = "surround_with_monsters", rval = "void", args = { "const tripoint &", "const mongroup_id &", "float", }, const = true, static = false, },
            { name = "load_location", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "get_all", rval = "const std::vector< start_location > &", args = { }, const = false, static = true, },
        }
    },
    stats = {
        cpp_name = "stats",
        new = {
        },
        attributes = {
            squares_walked = { type = "int", writable = true, reference = false, static = false, },
            damage_taken = { type = "int", writable = true, reference = false, static = false, },
            damage_healed = { type = "int", writable = true, reference = false, static = false, },
            headshots = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    ter_t = {
        cpp_name = "ter_t",
        string_id = "ter_str_id",
        int_id = "ter_id",
        new = {
            { },
        },
        attributes = {
            id = { type = "ter_str_id", writable = true, reference = false, static = false, },
            open = { type = "ter_str_id", writable = true, reference = false, static = false, },
            close = { type = "ter_str_id", writable = true, reference = false, static = false, },
            trap_id_str = { type = "std::string", writable = true, reference = false, static = false, },
            transforms_into = { type = "ter_str_id", writable = true, reference = false, static = false, },
            roof = { type = "ter_str_id", writable = true, reference = false, static = false, },
            trap = { type = "trap_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "check", rval = "void", args = { }, const = true, static = false, },
            { name = "count", rval = "size_t", args = { }, const = false, static = true, },
        }
    },
    time_duration = {
        cpp_name = "time_duration",
        new = {
            { },
            { "const std::nullptr_t", },
        },
        attributes = {
        },
        functions = {
            --{ name = "from_turns", rval = "time_duration", args = { "typename T", "const T", }, const = false, static = true, },
            --{ name = "from_minutes", rval = "time_duration", args = { "typename T", "const T", }, const = false, static = true, },
            --{ name = "from_hours", rval = "time_duration", args = { "typename T", "const T", }, const = false, static = true, },
            --{ name = "from_days", rval = "time_duration", args = { "typename T", "const T", }, const = false, static = true, },
            --{ name = "operator<", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator<=", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator>", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator>=", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator==", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            --{ name = "operator!=", rval = "", args = { "const time_duration &", }, const = true, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "read_from_json_string", rval = "time_duration", args = { "JsonIn &", }, const = false, static = true, },
        }
    },
    time_point = {
        cpp_name = "time_point",
        new = {
            { },
            { "const int", },
            { "const calendar &", },
            { "const std::nullptr_t", },
        },
        attributes = {
        },
        functions = {
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
            { name = "from_turn", rval = "time_point", args = { "const int", }, const = false, static = true, },
        }
    },
    trap = {
        cpp_name = "trap",
        string_id = "trap_str_id",
        int_id = "trap_id",
        new = {
        },
        attributes = {
            id = { type = "trap_str_id", writable = true, reference = false, static = false, },
            loadid = { type = "trap_id", writable = true, reference = false, static = false, },
            was_loaded = { type = "bool", writable = true, reference = false, static = false, },
            sym = { type = "long", writable = true, reference = false, static = false, },
            color = { type = "nc_color", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "is_funnel", rval = "bool", args = { }, const = true, static = false, },
            { name = "funnel_turns_per_charge", rval = "double", args = { "double", }, const = true, static = false, },
            { name = "get_funnels", rval = "const std::vector< const trap * > &", args = { }, const = false, static = true, },
            { name = "load_trap", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = true, },
            { name = "reset", rval = "void", args = { }, const = false, static = true, },
            { name = "finalize", rval = "void", args = { }, const = false, static = true, },
            { name = "check_consistency", rval = "void", args = { }, const = false, static = true, },
            { name = "name", rval = "std::string", args = { }, const = true, static = false, },
            { name = "get_visibility", rval = "int", args = { }, const = true, static = false, },
            { name = "get_avoidance", rval = "int", args = { }, const = true, static = false, },
            { name = "get_difficulty", rval = "int", args = { }, const = true, static = false, },
            { name = "is_benign", rval = "bool", args = { }, const = true, static = false, },
            { name = "detect_trap", rval = "bool", args = { "const tripoint &", "const player &", }, const = true, static = false, },
            { name = "can_see", rval = "bool", args = { "const tripoint &", "const player &", }, const = true, static = false, },
            { name = "trigger", rval = "void", args = { "const tripoint &", "Creature *", }, const = true, static = false, },
            { name = "triggered_by_item", rval = "bool", args = { "const item &", }, const = true, static = false, },
            { name = "on_disarmed", rval = "void", args = { "map &", "const tripoint &", }, const = true, static = false, },
            { name = "is_3x3_trap", rval = "bool", args = { }, const = true, static = false, },
            { name = "is_null", rval = "bool", args = { }, const = true, static = false, },
            { name = "load", rval = "void", args = { "JsonObject &", "const std::string &", }, const = false, static = false, },
            { name = "count", rval = "size_t", args = { }, const = false, static = true, },
        }
    },
    tripoint = {
        cpp_name = "tripoint",
        new = {
            { },
            { "int", "int", "int", },
            { "const point &", "int", },
        },
        attributes = {
            x = { type = "int", writable = true, reference = false, static = false, },
            y = { type = "int", writable = true, reference = false, static = false, },
            z = { type = "int", writable = true, reference = false, static = false, },
        },
        functions = {
            --{ name = "operator+", rval = "", args = { "const tripoint &", }, const = true, static = false, },
            --{ name = "operator-", rval = "", args = { "const tripoint &", }, const = true, static = false, },
            --{ name = "operator+=", rval = "", args = { "const tripoint &", }, const = false, static = false, },
            --{ name = "operator-", rval = "", args = { }, const = true, static = false, },
            --{ name = "operator+", rval = "", args = { "const point &", }, const = true, static = false, },
            --{ name = "operator-", rval = "", args = { "const point &", }, const = true, static = false, },
            --{ name = "operator+=", rval = "", args = { "const point &", }, const = false, static = false, },
            --{ name = "operator-=", rval = "", args = { "const point &", }, const = false, static = false, },
            --{ name = "operator-=", rval = "", args = { "const tripoint &", }, const = false, static = false, },
            { name = "serialize", rval = "void", args = { "JsonOut &", }, const = true, static = false, },
            { name = "deserialize", rval = "void", args = { "JsonIn &", }, const = false, static = false, },
        }
    },
    uilist = {
        cpp_name = "uilist",
        new = {
            { },
            { "const std::string &", },
            { "const std::string &", "const std::vector< uilist_entry > &", },
            { "const std::string &", "const std::vector< std::string > &", },
            { "const std::string &", "std::initializer_list< const char *const >", },
            { "int", "int", "int", "const std::string &", "const std::vector< uilist_entry > &", },
            { "int", "int", "int", "const std::string &", "const std::vector< std::string > &", },
            { "int", "int", "int", "const std::string &", "std::initializer_list< const char *const >", },
        },
        attributes = {
            ret = { type = "int", writable = true, reference = false, static = false, },
            selected = { type = "int", writable = true, reference = false, static = false, },
            keypress = { type = "int", writable = true, reference = false, static = false, },
            text = { type = "std::string", writable = true, reference = false, static = false, },
            textformatted = { type = "std::vector< std::string >", writable = true, reference = false, static = false, },
            input_category = { type = "std::string", writable = true, reference = false, static = false, },
            additional_actions = { type = "std::vector< std::pair< std::string, std::string > >", writable = true, reference = false, static = false, },
            textwidth = { type = "int", writable = true, reference = false, static = false, },
            textalign = { type = "int", writable = true, reference = false, static = false, },
            max_entry_len = { type = "int", writable = true, reference = false, static = false, },
            max_column_len = { type = "int", writable = true, reference = false, static = false, },
            title = { type = "std::string", writable = true, reference = false, static = false, },
            entries = { type = "std::vector< uilist_entry >", writable = true, reference = false, static = false, },
            keymap = { type = "std::map< int, int >", writable = true, reference = false, static = false, },
            desc_enabled = { type = "bool", writable = true, reference = false, static = false, },
            desc_lines = { type = "int", writable = true, reference = false, static = false, },
            border = { type = "bool", writable = true, reference = false, static = false, },
            filtering = { type = "bool", writable = true, reference = false, static = false, },
            filtering_nocase = { type = "bool", writable = true, reference = false, static = false, },
            border_color = { type = "nc_color", writable = true, reference = false, static = false, },
            text_color = { type = "nc_color", writable = true, reference = false, static = false, },
            title_color = { type = "nc_color", writable = true, reference = false, static = false, },
            hilight_color = { type = "nc_color", writable = true, reference = false, static = false, },
            hotkey_color = { type = "nc_color", writable = true, reference = false, static = false, },
            disabled_color = { type = "nc_color", writable = true, reference = false, static = false, },
            pad_left = { type = "int", writable = true, reference = false, static = false, },
            pad_right = { type = "int", writable = true, reference = false, static = false, },
            allow_disabled = { type = "bool", writable = true, reference = false, static = false, },
            allow_anykey = { type = "bool", writable = true, reference = false, static = false, },
            allow_cancel = { type = "bool", writable = true, reference = false, static = false, },
            hilight_disabled = { type = "bool", writable = true, reference = false, static = false, },
            hilight_full = { type = "bool", writable = true, reference = false, static = false, },
            vshift = { type = "int", writable = true, reference = false, static = false, },
            vmax = { type = "int", writable = true, reference = false, static = false, },
            filter = { type = "std::string", writable = true, reference = false, static = false, },
            fentries = { type = "std::vector< int >", writable = true, reference = false, static = false, },
            fselected = { type = "int", writable = true, reference = false, static = false, },
            centered_scroll = { type = "bool", writable = true, reference = false, static = false, },
            scrollbar_auto = { type = "bool", writable = true, reference = false, static = false, },
            scrollbar_nopage_color = { type = "nc_color", writable = true, reference = false, static = false, },
            scrollbar_page_color = { type = "nc_color", writable = true, reference = false, static = false, },
            scrollbar_side = { type = "int", writable = true, reference = false, static = false, },
            callback = { type = "uilist_callback", writable = true, reference = false, static = false, },
        },
        functions = {
            { name = "init", rval = "void", args = { }, const = false, static = false, },
            { name = "setup", rval = "void", args = { }, const = false, static = false, },
            { name = "show", rval = "void", args = { }, const = false, static = false, },
            { name = "scrollby", rval = "bool", args = { "int", }, const = false, static = false, },
            { name = "scroll_amount_from_key", rval = "int", args = { "const int", }, const = false, static = false, },
            { name = "scroll_amount_from_action", rval = "int", args = { "const std::string &", }, const = false, static = false, },
            { name = "query", rval = "void", args = { }, optional_args = { "bool", "int", }, const = false, static = false, },
            { name = "filterlist", rval = "void", args = { }, const = false, static = false, },
            { name = "apply_scrollbar", rval = "void", args = { }, const = false, static = false, },
            { name = "inputfilter", rval = "std::string", args = { }, const = false, static = false, },
            { name = "refresh", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "redraw", rval = "void", args = { }, optional_args = { "bool", }, const = false, static = false, },
            { name = "addentry", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "addentry", rval = "void", args = { "int", "bool", "int", "const std::string &", }, const = false, static = false, },
            --{ name = "addentry", rval = "void", args = { "typename K", "typename ...", "const int", "const bool", "K", "const char *const", "Args &&...", }, const = false, static = false, },
            { name = "addentry_desc", rval = "void", args = { "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "addentry_desc", rval = "void", args = { "int", "bool", "int", "const std::string &", "const std::string &", }, const = false, static = false, },
            { name = "addentry_col", rval = "void", args = { "int", "bool", "int", "const std::string &", "const std::string &", }, optional_args = { "const std::string &", }, const = false, static = false, },
            { name = "settext", rval = "void", args = { "const std::string &", }, const = false, static = false, },
            { name = "reset", rval = "void", args = { }, const = false, static = false, },
            { name = "_op_int", cpp_name = "operator int", rval = "", args = { }, const = true, static = false, },
        }
    },
    w_point = {
        cpp_name = "w_point",
        new = {
        },
        attributes = {
            temperature = { type = "double", writable = true, reference = false, static = false, },
            humidity = { type = "double", writable = true, reference = false, static = false, },
            pressure = { type = "double", writable = true, reference = false, static = false, },
            windpower = { type = "double", writable = true, reference = false, static = false, },
            wind_desc = { type = "std::string", writable = true, reference = false, static = false, },
            winddirection = { type = "int", writable = true, reference = false, static = false, },
            acidic = { type = "bool", writable = true, reference = false, static = false, },
        },
        functions = {
        }
    },
}
enums = {
    action_id = {
        cpp_name = "action_id",
        values = {
            {"ACTION_NULL", "ACTION_NULL"},
            {"ACTION_SELECT", "ACTION_SELECT"},
            {"ACTION_SEC_SELECT", "ACTION_SEC_SELECT"},
            {"ACTION_PAUSE", "ACTION_PAUSE"},
            {"ACTION_TIMEOUT", "ACTION_TIMEOUT"},
            {"ACTION_MOVE_N", "ACTION_MOVE_N"},
            {"ACTION_MOVE_NE", "ACTION_MOVE_NE"},
            {"ACTION_MOVE_E", "ACTION_MOVE_E"},
            {"ACTION_MOVE_SE", "ACTION_MOVE_SE"},
            {"ACTION_MOVE_S", "ACTION_MOVE_S"},
            {"ACTION_MOVE_SW", "ACTION_MOVE_SW"},
            {"ACTION_MOVE_W", "ACTION_MOVE_W"},
            {"ACTION_MOVE_NW", "ACTION_MOVE_NW"},
            {"ACTION_MOVE_DOWN", "ACTION_MOVE_DOWN"},
            {"ACTION_MOVE_UP", "ACTION_MOVE_UP"},
            {"ACTION_CYCLE_MOVE", "ACTION_CYCLE_MOVE"},
            {"ACTION_RESET_MOVE", "ACTION_RESET_MOVE"},
            {"ACTION_TOGGLE_RUN", "ACTION_TOGGLE_RUN"},
            {"ACTION_TOGGLE_CROUCH", "ACTION_TOGGLE_CROUCH"},
            {"ACTION_OPEN_MOVEMENT", "ACTION_OPEN_MOVEMENT"},
            {"ACTION_TOGGLE_MAP_MEMORY", "ACTION_TOGGLE_MAP_MEMORY"},
            {"ACTION_CENTER", "ACTION_CENTER"},
            {"ACTION_SHIFT_N", "ACTION_SHIFT_N"},
            {"ACTION_SHIFT_NE", "ACTION_SHIFT_NE"},
            {"ACTION_SHIFT_E", "ACTION_SHIFT_E"},
            {"ACTION_SHIFT_SE", "ACTION_SHIFT_SE"},
            {"ACTION_SHIFT_S", "ACTION_SHIFT_S"},
            {"ACTION_SHIFT_SW", "ACTION_SHIFT_SW"},
            {"ACTION_SHIFT_W", "ACTION_SHIFT_W"},
            {"ACTION_SHIFT_NW", "ACTION_SHIFT_NW"},
            {"ACTION_OPEN", "ACTION_OPEN"},
            {"ACTION_CLOSE", "ACTION_CLOSE"},
            {"ACTION_SMASH", "ACTION_SMASH"},
            {"ACTION_EXAMINE", "ACTION_EXAMINE"},
            {"ACTION_PICKUP", "ACTION_PICKUP"},
            {"ACTION_GRAB", "ACTION_GRAB"},
            {"ACTION_HAUL", "ACTION_HAUL"},
            {"ACTION_BUTCHER", "ACTION_BUTCHER"},
            {"ACTION_CHAT", "ACTION_CHAT"},
            {"ACTION_LOOK", "ACTION_LOOK"},
            {"ACTION_PEEK", "ACTION_PEEK"},
            {"ACTION_LIST_ITEMS", "ACTION_LIST_ITEMS"},
            {"ACTION_ZONES", "ACTION_ZONES"},
            {"ACTION_LOOT", "ACTION_LOOT"},
            {"ACTION_INVENTORY", "ACTION_INVENTORY"},
            {"ACTION_ADVANCEDINV", "ACTION_ADVANCEDINV"},
            {"ACTION_COMPARE", "ACTION_COMPARE"},
            {"ACTION_ORGANIZE", "ACTION_ORGANIZE"},
            {"ACTION_USE", "ACTION_USE"},
            {"ACTION_USE_WIELDED", "ACTION_USE_WIELDED"},
            {"ACTION_WEAR", "ACTION_WEAR"},
            {"ACTION_TAKE_OFF", "ACTION_TAKE_OFF"},
            {"ACTION_EAT", "ACTION_EAT"},
            {"ACTION_READ", "ACTION_READ"},
            {"ACTION_WIELD", "ACTION_WIELD"},
            {"ACTION_PICK_STYLE", "ACTION_PICK_STYLE"},
            {"ACTION_RELOAD_ITEM", "ACTION_RELOAD_ITEM"},
            {"ACTION_RELOAD_WEAPON", "ACTION_RELOAD_WEAPON"},
            {"ACTION_UNLOAD", "ACTION_UNLOAD"},
            {"ACTION_MEND", "ACTION_MEND"},
            {"ACTION_THROW", "ACTION_THROW"},
            {"ACTION_FIRE", "ACTION_FIRE"},
            {"ACTION_FIRE_BURST", "ACTION_FIRE_BURST"},
            {"ACTION_SELECT_FIRE_MODE", "ACTION_SELECT_FIRE_MODE"},
            {"ACTION_DROP", "ACTION_DROP"},
            {"ACTION_DIR_DROP", "ACTION_DIR_DROP"},
            {"ACTION_BIONICS", "ACTION_BIONICS"},
            {"ACTION_MUTATIONS", "ACTION_MUTATIONS"},
            {"ACTION_SORT_ARMOR", "ACTION_SORT_ARMOR"},
            {"ACTION_AUTOATTACK", "ACTION_AUTOATTACK"},
            {"ACTION_WAIT", "ACTION_WAIT"},
            {"ACTION_CRAFT", "ACTION_CRAFT"},
            {"ACTION_RECRAFT", "ACTION_RECRAFT"},
            {"ACTION_LONGCRAFT", "ACTION_LONGCRAFT"},
            {"ACTION_CONSTRUCT", "ACTION_CONSTRUCT"},
            {"ACTION_DISASSEMBLE", "ACTION_DISASSEMBLE"},
            {"ACTION_SLEEP", "ACTION_SLEEP"},
            {"ACTION_CONTROL_VEHICLE", "ACTION_CONTROL_VEHICLE"},
            {"ACTION_TOGGLE_AUTO_TRAVEL_MODE", "ACTION_TOGGLE_AUTO_TRAVEL_MODE"},
            {"ACTION_TOGGLE_SAFEMODE", "ACTION_TOGGLE_SAFEMODE"},
            {"ACTION_TOGGLE_AUTOSAFE", "ACTION_TOGGLE_AUTOSAFE"},
            {"ACTION_IGNORE_ENEMY", "ACTION_IGNORE_ENEMY"},
            {"ACTION_WHITELIST_ENEMY", "ACTION_WHITELIST_ENEMY"},
            {"ACTION_SAVE", "ACTION_SAVE"},
            {"ACTION_QUICKSAVE", "ACTION_QUICKSAVE"},
            {"ACTION_QUICKLOAD", "ACTION_QUICKLOAD"},
            {"ACTION_QUIT", "ACTION_QUIT"},
            {"ACTION_PL_INFO", "ACTION_PL_INFO"},
            {"ACTION_MAP", "ACTION_MAP"},
            {"ACTION_SKY", "ACTION_SKY"},
            {"ACTION_MISSIONS", "ACTION_MISSIONS"},
            {"ACTION_KILLS", "ACTION_KILLS"},
            {"ACTION_FACTIONS", "ACTION_FACTIONS"},
            {"ACTION_MORALE", "ACTION_MORALE"},
            {"ACTION_MESSAGES", "ACTION_MESSAGES"},
            {"ACTION_HELP", "ACTION_HELP"},
            {"ACTION_MAIN_MENU", "ACTION_MAIN_MENU"},
            {"ACTION_KEYBINDINGS", "ACTION_KEYBINDINGS"},
            {"ACTION_OPTIONS", "ACTION_OPTIONS"},
            {"ACTION_AUTOPICKUP", "ACTION_AUTOPICKUP"},
            {"ACTION_SAFEMODE", "ACTION_SAFEMODE"},
            {"ACTION_COLOR", "ACTION_COLOR"},
            {"ACTION_WORLD_MODS", "ACTION_WORLD_MODS"},
            {"ACTION_TOGGLE_FULLSCREEN", "ACTION_TOGGLE_FULLSCREEN"},
            {"ACTION_DEBUG", "ACTION_DEBUG"},
            {"ACTION_DISPLAY_SCENT", "ACTION_DISPLAY_SCENT"},
            {"ACTION_TOGGLE_DEBUG_MODE", "ACTION_TOGGLE_DEBUG_MODE"},
            {"ACTION_ZOOM_OUT", "ACTION_ZOOM_OUT"},
            {"ACTION_ZOOM_IN", "ACTION_ZOOM_IN"},
            {"ACTION_ACTIONMENU", "ACTION_ACTIONMENU"},
            {"ACTION_ITEMACTION", "ACTION_ITEMACTION"},
            {"ACTION_TOGGLE_PIXEL_MINIMAP", "ACTION_TOGGLE_PIXEL_MINIMAP"},
            {"ACTION_TOGGLE_PANEL_ADM", "ACTION_TOGGLE_PANEL_ADM"},
            {"ACTION_PANEL_MGMT", "ACTION_PANEL_MGMT"},
            {"ACTION_RELOAD_TILESET", "ACTION_RELOAD_TILESET"},
            {"ACTION_TOGGLE_AUTO_FEATURES", "ACTION_TOGGLE_AUTO_FEATURES"},
            {"ACTION_TOGGLE_AUTO_PULP_BUTCHER", "ACTION_TOGGLE_AUTO_PULP_BUTCHER"},
            {"ACTION_TOGGLE_AUTO_MINING", "ACTION_TOGGLE_AUTO_MINING"},
            {"ACTION_TOGGLE_AUTO_FORAGING", "ACTION_TOGGLE_AUTO_FORAGING"},
            {"NUM_ACTIONS", "NUM_ACTIONS"},
        },
    },
    add_type = {
        cpp_name = "add_type",
        values = {
            {"ADD_NULL", "ADD_NULL"},
            {"ADD_CAFFEINE", "ADD_CAFFEINE"},
            {"ADD_ALCOHOL", "ADD_ALCOHOL"},
            {"ADD_SLEEP", "ADD_SLEEP"},
            {"ADD_PKILLER", "ADD_PKILLER"},
            {"ADD_SPEED", "ADD_SPEED"},
            {"ADD_CIG", "ADD_CIG"},
            {"ADD_COKE", "ADD_COKE"},
            {"ADD_CRACK", "ADD_CRACK"},
            {"ADD_MUTAGEN", "ADD_MUTAGEN"},
            {"ADD_DIAZEPAM", "ADD_DIAZEPAM"},
            {"ADD_MARLOSS_R", "ADD_MARLOSS_R"},
            {"ADD_MARLOSS_B", "ADD_MARLOSS_B"},
            {"ADD_MARLOSS_Y", "ADD_MARLOSS_Y"},
        },
    },
    advanced_inv_sortby = {
        cpp_name = "advanced_inv_sortby",
        values = {
            {"SORTBY_NONE", "SORTBY_NONE"},
            {"SORTBY_NAME", "SORTBY_NAME"},
            {"SORTBY_WEIGHT", "SORTBY_WEIGHT"},
            {"SORTBY_VOLUME", "SORTBY_VOLUME"},
            {"SORTBY_CHARGES", "SORTBY_CHARGES"},
            {"SORTBY_CATEGORY", "SORTBY_CATEGORY"},
            {"SORTBY_DAMAGE", "SORTBY_DAMAGE"},
            {"SORTBY_AMMO", "SORTBY_AMMO"},
            {"SORTBY_SPOILAGE", "SORTBY_SPOILAGE"},
        },
    },
    affected_stat = {
        cpp_name = "affected_stat",
        values = {
            {"AFFECTED_NULL", "AFFECTED_NULL"},
            {"AFFECTED_HIT", "AFFECTED_HIT"},
            {"AFFECTED_DODGE", "AFFECTED_DODGE"},
            {"AFFECTED_BLOCK", "AFFECTED_BLOCK"},
            {"AFFECTED_SPEED", "AFFECTED_SPEED"},
            {"AFFECTED_MOVE_COST", "AFFECTED_MOVE_COST"},
            {"AFFECTED_DAMAGE", "AFFECTED_DAMAGE"},
            {"AFFECTED_ARMOR", "AFFECTED_ARMOR"},
            {"AFFECTED_ARMOR_PENETRATION", "AFFECTED_ARMOR_PENETRATION"},
            {"AFFECTED_TARGET_ARMOR_MULTIPLIER", "AFFECTED_TARGET_ARMOR_MULTIPLIER"},
            {"NUM_AFFECTED", "NUM_AFFECTED"},
        },
    },
    aim_location = {
        cpp_name = "aim_location",
        values = {
            {"AIM_INVENTORY", "AIM_INVENTORY"},
            {"AIM_SOUTHWEST", "AIM_SOUTHWEST"},
            {"AIM_SOUTH", "AIM_SOUTH"},
            {"AIM_SOUTHEAST", "AIM_SOUTHEAST"},
            {"AIM_WEST", "AIM_WEST"},
            {"AIM_CENTER", "AIM_CENTER"},
            {"AIM_EAST", "AIM_EAST"},
            {"AIM_NORTHWEST", "AIM_NORTHWEST"},
            {"AIM_NORTH", "AIM_NORTH"},
            {"AIM_NORTHEAST", "AIM_NORTHEAST"},
            {"AIM_DRAGGED", "AIM_DRAGGED"},
            {"AIM_ALL", "AIM_ALL"},
            {"AIM_CONTAINER", "AIM_CONTAINER"},
            {"AIM_WORN", "AIM_WORN"},
            {"NUM_AIM_LOCATIONS", "NUM_AIM_LOCATIONS"},
            {"AIM_AROUND_BEGIN", "AIM_AROUND_BEGIN"},
            {"AIM_AROUND_END", "AIM_AROUND_END"},
        },
    },
    aim_rule = {
        cpp_name = "aim_rule",
        values = {
            {"AIM_WHEN_CONVENIENT", "AIM_WHEN_CONVENIENT"},
            {"AIM_SPRAY", "AIM_SPRAY"},
            {"AIM_PRECISE", "AIM_PRECISE"},
            {"AIM_STRICTLY_PRECISE", "AIM_STRICTLY_PRECISE"},
        },
    },
    ally_rule = {
        cpp_name = "ally_rule",
        values = {
            {"DEFAULT", "ally_rule::DEFAULT"},
            {"use_guns", "ally_rule::use_guns"},
            {"use_grenades", "ally_rule::use_grenades"},
            {"use_silent", "ally_rule::use_silent"},
            {"avoid_friendly_fire", "ally_rule::avoid_friendly_fire"},
            {"allow_pick_up", "ally_rule::allow_pick_up"},
            {"allow_bash", "ally_rule::allow_bash"},
            {"allow_sleep", "ally_rule::allow_sleep"},
            {"allow_complain", "ally_rule::allow_complain"},
            {"allow_pulp", "ally_rule::allow_pulp"},
            {"close_doors", "ally_rule::close_doors"},
            {"avoid_combat", "ally_rule::avoid_combat"},
            {"avoid_doors", "ally_rule::avoid_doors"},
            {"hold_the_line", "ally_rule::hold_the_line"},
            {"ignore_noise", "ally_rule::ignore_noise"},
        },
    },
    art_charge = {
        cpp_name = "art_charge",
        values = {
            {"ARTC_NULL", "ARTC_NULL"},
            {"ARTC_TIME", "ARTC_TIME"},
            {"ARTC_SOLAR", "ARTC_SOLAR"},
            {"ARTC_PAIN", "ARTC_PAIN"},
            {"ARTC_HP", "ARTC_HP"},
            {"ARTC_FATIGUE", "ARTC_FATIGUE"},
            {"ARTC_PORTAL", "ARTC_PORTAL"},
            {"NUM_ARTCS", "NUM_ARTCS"},
        },
    },
    art_charge_req = {
        cpp_name = "art_charge_req",
        values = {
            {"ACR_NULL", "ACR_NULL"},
            {"ACR_EQUIP", "ACR_EQUIP"},
            {"ACR_SKIN", "ACR_SKIN"},
            {"ACR_SLEEP", "ACR_SLEEP"},
            {"ACR_RAD", "ACR_RAD"},
            {"ACR_WET", "ACR_WET"},
            {"ACR_SKY", "ACR_SKY"},
            {"NUM_ACRS", "NUM_ACRS"},
        },
    },
    art_effect_active = {
        cpp_name = "art_effect_active",
        values = {
            {"AEA_NULL", "AEA_NULL"},
            {"AEA_STORM", "AEA_STORM"},
            {"AEA_FIREBALL", "AEA_FIREBALL"},
            {"AEA_ADRENALINE", "AEA_ADRENALINE"},
            {"AEA_MAP", "AEA_MAP"},
            {"AEA_BLOOD", "AEA_BLOOD"},
            {"AEA_FATIGUE", "AEA_FATIGUE"},
            {"AEA_ACIDBALL", "AEA_ACIDBALL"},
            {"AEA_PULSE", "AEA_PULSE"},
            {"AEA_HEAL", "AEA_HEAL"},
            {"AEA_CONFUSED", "AEA_CONFUSED"},
            {"AEA_ENTRANCE", "AEA_ENTRANCE"},
            {"AEA_BUGS", "AEA_BUGS"},
            {"AEA_TELEPORT", "AEA_TELEPORT"},
            {"AEA_LIGHT", "AEA_LIGHT"},
            {"AEA_GROWTH", "AEA_GROWTH"},
            {"AEA_HURTALL", "AEA_HURTALL"},
            {"AEA_FUN", "AEA_FUN"},
            {"AEA_SPLIT", "AEA_SPLIT"},
            {"AEA_RADIATION", "AEA_RADIATION"},
            {"AEA_PAIN", "AEA_PAIN"},
            {"AEA_MUTATE", "AEA_MUTATE"},
            {"AEA_PARALYZE", "AEA_PARALYZE"},
            {"AEA_FIRESTORM", "AEA_FIRESTORM"},
            {"AEA_ATTENTION", "AEA_ATTENTION"},
            {"AEA_TELEGLOW", "AEA_TELEGLOW"},
            {"AEA_NOISE", "AEA_NOISE"},
            {"AEA_SCREAM", "AEA_SCREAM"},
            {"AEA_DIM", "AEA_DIM"},
            {"AEA_FLASH", "AEA_FLASH"},
            {"AEA_VOMIT", "AEA_VOMIT"},
            {"AEA_SHADOWS", "AEA_SHADOWS"},
            {"AEA_STAMINA_EMPTY", "AEA_STAMINA_EMPTY"},
            {"NUM_AEAS", "NUM_AEAS"},
        },
    },
    art_effect_passive = {
        cpp_name = "art_effect_passive",
        values = {
            {"AEP_NULL", "AEP_NULL"},
            {"AEP_STR_UP", "AEP_STR_UP"},
            {"AEP_DEX_UP", "AEP_DEX_UP"},
            {"AEP_PER_UP", "AEP_PER_UP"},
            {"AEP_INT_UP", "AEP_INT_UP"},
            {"AEP_ALL_UP", "AEP_ALL_UP"},
            {"AEP_SPEED_UP", "AEP_SPEED_UP"},
            {"AEP_PBLUE", "AEP_PBLUE"},
            {"AEP_SNAKES", "AEP_SNAKES"},
            {"AEP_INVISIBLE", "AEP_INVISIBLE"},
            {"AEP_CLAIRVOYANCE", "AEP_CLAIRVOYANCE"},
            {"AEP_SUPER_CLAIRVOYANCE", "AEP_SUPER_CLAIRVOYANCE"},
            {"AEP_STEALTH", "AEP_STEALTH"},
            {"AEP_EXTINGUISH", "AEP_EXTINGUISH"},
            {"AEP_GLOW", "AEP_GLOW"},
            {"AEP_PSYSHIELD", "AEP_PSYSHIELD"},
            {"AEP_RESIST_ELECTRICITY", "AEP_RESIST_ELECTRICITY"},
            {"AEP_CARRY_MORE", "AEP_CARRY_MORE"},
            {"AEP_SAP_LIFE", "AEP_SAP_LIFE"},
            {"AEP_FUN", "AEP_FUN"},
            {"AEP_SPLIT", "AEP_SPLIT"},
            {"AEP_HUNGER", "AEP_HUNGER"},
            {"AEP_THIRST", "AEP_THIRST"},
            {"AEP_SMOKE", "AEP_SMOKE"},
            {"AEP_EVIL", "AEP_EVIL"},
            {"AEP_SCHIZO", "AEP_SCHIZO"},
            {"AEP_RADIOACTIVE", "AEP_RADIOACTIVE"},
            {"AEP_MUTAGENIC", "AEP_MUTAGENIC"},
            {"AEP_ATTENTION", "AEP_ATTENTION"},
            {"AEP_STR_DOWN", "AEP_STR_DOWN"},
            {"AEP_DEX_DOWN", "AEP_DEX_DOWN"},
            {"AEP_PER_DOWN", "AEP_PER_DOWN"},
            {"AEP_INT_DOWN", "AEP_INT_DOWN"},
            {"AEP_ALL_DOWN", "AEP_ALL_DOWN"},
            {"AEP_SPEED_DOWN", "AEP_SPEED_DOWN"},
            {"AEP_FORCE_TELEPORT", "AEP_FORCE_TELEPORT"},
            {"AEP_MOVEMENT_NOISE", "AEP_MOVEMENT_NOISE"},
            {"AEP_BAD_WEATHER", "AEP_BAD_WEATHER"},
            {"AEP_SICK", "AEP_SICK"},
            {"AEP_CLAIRVOYANCE_PLUS", "AEP_CLAIRVOYANCE_PLUS"},
            {"NUM_AEPS", "NUM_AEPS"},
        },
    },
    artifact_natural_property = {
        cpp_name = "artifact_natural_property",
        values = {
            {"ARTPROP_NULL", "ARTPROP_NULL"},
            {"ARTPROP_WRIGGLING", "ARTPROP_WRIGGLING"},
            {"ARTPROP_GLOWING", "ARTPROP_GLOWING"},
            {"ARTPROP_HUMMING", "ARTPROP_HUMMING"},
            {"ARTPROP_MOVING", "ARTPROP_MOVING"},
            {"ARTPROP_WHISPERING", "ARTPROP_WHISPERING"},
            {"ARTPROP_BREATHING", "ARTPROP_BREATHING"},
            {"ARTPROP_DEAD", "ARTPROP_DEAD"},
            {"ARTPROP_ITCHY", "ARTPROP_ITCHY"},
            {"ARTPROP_GLITTERING", "ARTPROP_GLITTERING"},
            {"ARTPROP_ELECTRIC", "ARTPROP_ELECTRIC"},
            {"ARTPROP_SLIMY", "ARTPROP_SLIMY"},
            {"ARTPROP_ENGRAVED", "ARTPROP_ENGRAVED"},
            {"ARTPROP_CRACKLING", "ARTPROP_CRACKLING"},
            {"ARTPROP_WARM", "ARTPROP_WARM"},
            {"ARTPROP_RATTLING", "ARTPROP_RATTLING"},
            {"ARTPROP_SCALED", "ARTPROP_SCALED"},
            {"ARTPROP_FRACTAL", "ARTPROP_FRACTAL"},
            {"ARTPROP_MAX", "ARTPROP_MAX"},
        },
    },
    attempt_hint = {
        cpp_name = "repair_item_actor::attempt_hint",
        values = {
            {"AS_SUCCESS", "repair_item_actor::AS_SUCCESS"},
            {"AS_RETRY", "repair_item_actor::AS_RETRY"},
            {"AS_FAILURE", "repair_item_actor::AS_FAILURE"},
            {"AS_DESTROYED", "repair_item_actor::AS_DESTROYED"},
            {"AS_CANT", "repair_item_actor::AS_CANT"},
            {"AS_CANT_USE_TOOL", "repair_item_actor::AS_CANT_USE_TOOL"},
            {"AS_CANT_YET", "repair_item_actor::AS_CANT_YET"},
        },
    },
    Attitude = {
        cpp_name = "Creature::Attitude",
        values = {
            {"A_HOSTILE", "Creature::A_HOSTILE"},
            {"A_NEUTRAL", "Creature::A_NEUTRAL"},
            {"A_FRIENDLY", "Creature::A_FRIENDLY"},
            {"A_ANY", "Creature::A_ANY"},
        },
    },
    attitude_group = {
        cpp_name = "attitude_group",
        values = {
            {"neutral", "attitude_group::neutral"},
            {"hostile", "attitude_group::hostile"},
            {"fearful", "attitude_group::fearful"},
            {"friendly", "attitude_group::friendly"},
        },
    },
    available_status = {
        cpp_name = "available_status",
        values = {
            {"a_true", "a_true"},
            {"a_false", "a_false"},
            {"a_insufficent", "a_insufficent"},
        },
    },
    base_color = {
        cpp_name = "base_color",
        values = {
            {"black", "black"},
            {"red", "red"},
            {"green", "green"},
            {"yellow", "yellow"},
            {"blue", "blue"},
            {"magenta", "magenta"},
            {"cyan", "cyan"},
            {"white", "white"},
        },
    },
    based_on_type = {
        cpp_name = "based_on_type",
        values = {
            {"TIME", "based_on_type::TIME"},
            {"SPEED", "based_on_type::SPEED"},
            {"NEITHER", "based_on_type::NEITHER"},
        },
    },
    body_part = {
        cpp_name = "body_part",
        values = {
            {"bp_torso", "bp_torso"},
            {"bp_head", "bp_head"},
            {"bp_eyes", "bp_eyes"},
            {"bp_mouth", "bp_mouth"},
            {"bp_arm_l", "bp_arm_l"},
            {"bp_arm_r", "bp_arm_r"},
            {"bp_hand_l", "bp_hand_l"},
            {"bp_hand_r", "bp_hand_r"},
            {"bp_leg_l", "bp_leg_l"},
            {"bp_leg_r", "bp_leg_r"},
            {"bp_foot_l", "bp_foot_l"},
            {"bp_foot_r", "bp_foot_r"},
            {"num_bp", "num_bp"},
        },
    },
    butcher_type = {
        cpp_name = "butcher_type",
        values = {
            {"BUTCHER", "BUTCHER"},
            {"BUTCHER_FULL", "BUTCHER_FULL"},
            {"F_DRESS", "F_DRESS"},
            {"SKIN", "SKIN"},
            {"QUARTER", "QUARTER"},
            {"DISMEMBER", "DISMEMBER"},
            {"DISSECT", "DISSECT"},
        },
    },
    camp_tab_mode = {
        cpp_name = "camp_tab_mode",
        values = {
            {"TAB_MAIN", "TAB_MAIN"},
            {"TAB_N", "TAB_N"},
            {"TAB_NE", "TAB_NE"},
            {"TAB_E", "TAB_E"},
            {"TAB_SE", "TAB_SE"},
            {"TAB_S", "TAB_S"},
            {"TAB_SW", "TAB_SW"},
            {"TAB_W", "TAB_W"},
            {"TAB_NW", "TAB_NW"},
        },
    },
    caravan_category = {
        cpp_name = "caravan_category",
        values = {
            {"CARAVAN_CART", "CARAVAN_CART"},
            {"CARAVAN_MELEE", "CARAVAN_MELEE"},
            {"CARAVAN_RANGED", "CARAVAN_RANGED"},
            {"CARAVAN_AMMUNITION", "CARAVAN_AMMUNITION"},
            {"CARAVAN_COMPONENTS", "CARAVAN_COMPONENTS"},
            {"CARAVAN_FOOD", "CARAVAN_FOOD"},
            {"CARAVAN_CLOTHES", "CARAVAN_CLOTHES"},
            {"CARAVAN_TOOLS", "CARAVAN_TOOLS"},
            {"NUM_CARAVAN_CATEGORIES", "NUM_CARAVAN_CATEGORIES"},
        },
    },
    character_type = {
        cpp_name = "character_type",
        values = {
            {"PLTYPE_CUSTOM", "PLTYPE_CUSTOM"},
            {"PLTYPE_RANDOM", "PLTYPE_RANDOM"},
            {"PLTYPE_TEMPLATE", "PLTYPE_TEMPLATE"},
            {"PLTYPE_NOW", "PLTYPE_NOW"},
            {"PLTYPE_FULL_RANDOM", "PLTYPE_FULL_RANDOM"},
        },
    },
    clipped_align = {
        cpp_name = "clipped_align",
        values = {
            {"none", "clipped_align::none"},
            {"right", "clipped_align::right"},
        },
    },
    clipped_unit = {
        cpp_name = "clipped_unit",
        values = {
            {"forever", "clipped_unit::forever"},
            {"second", "clipped_unit::second"},
            {"minute", "clipped_unit::minute"},
            {"hour", "clipped_unit::hour"},
            {"day", "clipped_unit::day"},
            {"week", "clipped_unit::week"},
            {"season", "clipped_unit::season"},
            {"year", "clipped_unit::year"},
        },
    },
    color_id = {
        cpp_name = "color_id",
        values = {
            {"def_c_black", "def_c_black"},
            {"def_c_white", "def_c_white"},
            {"def_c_light_gray", "def_c_light_gray"},
            {"def_c_dark_gray", "def_c_dark_gray"},
            {"def_c_red", "def_c_red"},
            {"def_c_green", "def_c_green"},
            {"def_c_blue", "def_c_blue"},
            {"def_c_cyan", "def_c_cyan"},
            {"def_c_magenta", "def_c_magenta"},
            {"def_c_brown", "def_c_brown"},
            {"def_c_light_red", "def_c_light_red"},
            {"def_c_light_green", "def_c_light_green"},
            {"def_c_light_blue", "def_c_light_blue"},
            {"def_c_light_cyan", "def_c_light_cyan"},
            {"def_c_pink", "def_c_pink"},
            {"def_c_yellow", "def_c_yellow"},
            {"def_h_black", "def_h_black"},
            {"def_h_white", "def_h_white"},
            {"def_h_light_gray", "def_h_light_gray"},
            {"def_h_dark_gray", "def_h_dark_gray"},
            {"def_h_red", "def_h_red"},
            {"def_h_green", "def_h_green"},
            {"def_h_blue", "def_h_blue"},
            {"def_h_cyan", "def_h_cyan"},
            {"def_h_magenta", "def_h_magenta"},
            {"def_h_brown", "def_h_brown"},
            {"def_h_light_red", "def_h_light_red"},
            {"def_h_light_green", "def_h_light_green"},
            {"def_h_light_blue", "def_h_light_blue"},
            {"def_h_light_cyan", "def_h_light_cyan"},
            {"def_h_pink", "def_h_pink"},
            {"def_h_yellow", "def_h_yellow"},
            {"def_i_black", "def_i_black"},
            {"def_i_white", "def_i_white"},
            {"def_i_light_gray", "def_i_light_gray"},
            {"def_i_dark_gray", "def_i_dark_gray"},
            {"def_i_red", "def_i_red"},
            {"def_i_green", "def_i_green"},
            {"def_i_blue", "def_i_blue"},
            {"def_i_cyan", "def_i_cyan"},
            {"def_i_magenta", "def_i_magenta"},
            {"def_i_brown", "def_i_brown"},
            {"def_i_light_red", "def_i_light_red"},
            {"def_i_light_green", "def_i_light_green"},
            {"def_i_light_blue", "def_i_light_blue"},
            {"def_i_light_cyan", "def_i_light_cyan"},
            {"def_i_pink", "def_i_pink"},
            {"def_i_yellow", "def_i_yellow"},
            {"def_c_unset", "def_c_unset"},
            {"def_c_black_red", "def_c_black_red"},
            {"def_c_white_red", "def_c_white_red"},
            {"def_c_light_gray_red", "def_c_light_gray_red"},
            {"def_c_dark_gray_red", "def_c_dark_gray_red"},
            {"def_c_red_red", "def_c_red_red"},
            {"def_c_green_red", "def_c_green_red"},
            {"def_c_blue_red", "def_c_blue_red"},
            {"def_c_cyan_red", "def_c_cyan_red"},
            {"def_c_magenta_red", "def_c_magenta_red"},
            {"def_c_brown_red", "def_c_brown_red"},
            {"def_c_light_red_red", "def_c_light_red_red"},
            {"def_c_light_green_red", "def_c_light_green_red"},
            {"def_c_light_blue_red", "def_c_light_blue_red"},
            {"def_c_light_cyan_red", "def_c_light_cyan_red"},
            {"def_c_pink_red", "def_c_pink_red"},
            {"def_c_yellow_red", "def_c_yellow_red"},
            {"def_c_black_white", "def_c_black_white"},
            {"def_c_dark_gray_white", "def_c_dark_gray_white"},
            {"def_c_light_gray_white", "def_c_light_gray_white"},
            {"def_c_white_white", "def_c_white_white"},
            {"def_c_red_white", "def_c_red_white"},
            {"def_c_light_red_white", "def_c_light_red_white"},
            {"def_c_green_white", "def_c_green_white"},
            {"def_c_light_green_white", "def_c_light_green_white"},
            {"def_c_brown_white", "def_c_brown_white"},
            {"def_c_yellow_white", "def_c_yellow_white"},
            {"def_c_blue_white", "def_c_blue_white"},
            {"def_c_light_blue_white", "def_c_light_blue_white"},
            {"def_c_magenta_white", "def_c_magenta_white"},
            {"def_c_pink_white", "def_c_pink_white"},
            {"def_c_cyan_white", "def_c_cyan_white"},
            {"def_c_light_cyan_white", "def_c_light_cyan_white"},
            {"def_c_black_green", "def_c_black_green"},
            {"def_c_dark_gray_green", "def_c_dark_gray_green"},
            {"def_c_light_gray_green", "def_c_light_gray_green"},
            {"def_c_white_green", "def_c_white_green"},
            {"def_c_red_green", "def_c_red_green"},
            {"def_c_light_red_green", "def_c_light_red_green"},
            {"def_c_green_green", "def_c_green_green"},
            {"def_c_light_green_green", "def_c_light_green_green"},
            {"def_c_brown_green", "def_c_brown_green"},
            {"def_c_yellow_green", "def_c_yellow_green"},
            {"def_c_blue_green", "def_c_blue_green"},
            {"def_c_light_blue_green", "def_c_light_blue_green"},
            {"def_c_magenta_green", "def_c_magenta_green"},
            {"def_c_pink_green", "def_c_pink_green"},
            {"def_c_cyan_green", "def_c_cyan_green"},
            {"def_c_light_cyan_green", "def_c_light_cyan_green"},
            {"def_c_black_yellow", "def_c_black_yellow"},
            {"def_c_dark_gray_yellow", "def_c_dark_gray_yellow"},
            {"def_c_light_gray_yellow", "def_c_light_gray_yellow"},
            {"def_c_white_yellow", "def_c_white_yellow"},
            {"def_c_red_yellow", "def_c_red_yellow"},
            {"def_c_light_red_yellow", "def_c_light_red_yellow"},
            {"def_c_green_yellow", "def_c_green_yellow"},
            {"def_c_light_green_yellow", "def_c_light_green_yellow"},
            {"def_c_brown_yellow", "def_c_brown_yellow"},
            {"def_c_yellow_yellow", "def_c_yellow_yellow"},
            {"def_c_blue_yellow", "def_c_blue_yellow"},
            {"def_c_light_blue_yellow", "def_c_light_blue_yellow"},
            {"def_c_magenta_yellow", "def_c_magenta_yellow"},
            {"def_c_pink_yellow", "def_c_pink_yellow"},
            {"def_c_cyan_yellow", "def_c_cyan_yellow"},
            {"def_c_light_cyan_yellow", "def_c_light_cyan_yellow"},
            {"def_c_black_magenta", "def_c_black_magenta"},
            {"def_c_dark_gray_magenta", "def_c_dark_gray_magenta"},
            {"def_c_light_gray_magenta", "def_c_light_gray_magenta"},
            {"def_c_white_magenta", "def_c_white_magenta"},
            {"def_c_red_magenta", "def_c_red_magenta"},
            {"def_c_light_red_magenta", "def_c_light_red_magenta"},
            {"def_c_green_magenta", "def_c_green_magenta"},
            {"def_c_light_green_magenta", "def_c_light_green_magenta"},
            {"def_c_brown_magenta", "def_c_brown_magenta"},
            {"def_c_yellow_magenta", "def_c_yellow_magenta"},
            {"def_c_blue_magenta", "def_c_blue_magenta"},
            {"def_c_light_blue_magenta", "def_c_light_blue_magenta"},
            {"def_c_magenta_magenta", "def_c_magenta_magenta"},
            {"def_c_pink_magenta", "def_c_pink_magenta"},
            {"def_c_cyan_magenta", "def_c_cyan_magenta"},
            {"def_c_light_cyan_magenta", "def_c_light_cyan_magenta"},
            {"def_c_black_cyan", "def_c_black_cyan"},
            {"def_c_dark_gray_cyan", "def_c_dark_gray_cyan"},
            {"def_c_light_gray_cyan", "def_c_light_gray_cyan"},
            {"def_c_white_cyan", "def_c_white_cyan"},
            {"def_c_red_cyan", "def_c_red_cyan"},
            {"def_c_light_red_cyan", "def_c_light_red_cyan"},
            {"def_c_green_cyan", "def_c_green_cyan"},
            {"def_c_light_green_cyan", "def_c_light_green_cyan"},
            {"def_c_brown_cyan", "def_c_brown_cyan"},
            {"def_c_yellow_cyan", "def_c_yellow_cyan"},
            {"def_c_blue_cyan", "def_c_blue_cyan"},
            {"def_c_light_blue_cyan", "def_c_light_blue_cyan"},
            {"def_c_magenta_cyan", "def_c_magenta_cyan"},
            {"def_c_pink_cyan", "def_c_pink_cyan"},
            {"def_c_cyan_cyan", "def_c_cyan_cyan"},
            {"def_c_light_cyan_cyan", "def_c_light_cyan_cyan"},
            {"num_colors", "num_colors"},
        },
    },
    combat_engagement = {
        cpp_name = "combat_engagement",
        values = {
            {"ENGAGE_NONE", "ENGAGE_NONE"},
            {"ENGAGE_CLOSE", "ENGAGE_CLOSE"},
            {"ENGAGE_WEAK", "ENGAGE_WEAK"},
            {"ENGAGE_HIT", "ENGAGE_HIT"},
            {"ENGAGE_ALL", "ENGAGE_ALL"},
            {"ENGAGE_NO_MOVE", "ENGAGE_NO_MOVE"},
        },
    },
    comfort_level = {
        cpp_name = "comfort_level",
        values = {
            {"uncomfortable", "comfort_level::uncomfortable"},
            {"neutral", "comfort_level::neutral"},
            {"slightly_comfortable", "comfort_level::slightly_comfortable"},
            {"comfortable", "comfort_level::comfortable"},
            {"very_comfortable", "comfort_level::very_comfortable"},
        },
    },
    component_type = {
        cpp_name = "component_type",
        values = {
            {"COMPONENT_ITEM", "COMPONENT_ITEM"},
            {"COMPONENT_TOOL", "COMPONENT_TOOL"},
            {"COMPONENT_QUALITY", "COMPONENT_QUALITY"},
        },
    },
    computer_action = {
        cpp_name = "computer_action",
        values = {
            {"COMPACT_NULL", "COMPACT_NULL"},
            {"COMPACT_OPEN", "COMPACT_OPEN"},
            {"COMPACT_LOCK", "COMPACT_LOCK"},
            {"COMPACT_UNLOCK", "COMPACT_UNLOCK"},
            {"COMPACT_TOLL", "COMPACT_TOLL"},
            {"COMPACT_SAMPLE", "COMPACT_SAMPLE"},
            {"COMPACT_RELEASE", "COMPACT_RELEASE"},
            {"COMPACT_RELEASE_BIONICS", "COMPACT_RELEASE_BIONICS"},
            {"COMPACT_TERMINATE", "COMPACT_TERMINATE"},
            {"COMPACT_PORTAL", "COMPACT_PORTAL"},
            {"COMPACT_CASCADE", "COMPACT_CASCADE"},
            {"COMPACT_RESEARCH", "COMPACT_RESEARCH"},
            {"COMPACT_MAPS", "COMPACT_MAPS"},
            {"COMPACT_MAP_SEWER", "COMPACT_MAP_SEWER"},
            {"COMPACT_MAP_SUBWAY", "COMPACT_MAP_SUBWAY"},
            {"COMPACT_MISS_LAUNCH", "COMPACT_MISS_LAUNCH"},
            {"COMPACT_MISS_DISARM", "COMPACT_MISS_DISARM"},
            {"COMPACT_LIST_BIONICS", "COMPACT_LIST_BIONICS"},
            {"COMPACT_ELEVATOR_ON", "COMPACT_ELEVATOR_ON"},
            {"COMPACT_AMIGARA_LOG", "COMPACT_AMIGARA_LOG"},
            {"COMPACT_AMIGARA_START", "COMPACT_AMIGARA_START"},
            {"COMPACT_COMPLETE_DISABLE_EXTERNAL_POWER", "COMPACT_COMPLETE_DISABLE_EXTERNAL_POWER"},
            {"COMPACT_REPEATER_MOD", "COMPACT_REPEATER_MOD"},
            {"COMPACT_DOWNLOAD_SOFTWARE", "COMPACT_DOWNLOAD_SOFTWARE"},
            {"COMPACT_BLOOD_ANAL", "COMPACT_BLOOD_ANAL"},
            {"COMPACT_DATA_ANAL", "COMPACT_DATA_ANAL"},
            {"COMPACT_DISCONNECT", "COMPACT_DISCONNECT"},
            {"COMPACT_BONESETTING", "COMPACT_BONESETTING"},
            {"COMPACT_EMERG_MESS", "COMPACT_EMERG_MESS"},
            {"COMPACT_EMERG_REF_CENTER", "COMPACT_EMERG_REF_CENTER"},
            {"COMPACT_TOWER_UNRESPONSIVE", "COMPACT_TOWER_UNRESPONSIVE"},
            {"COMPACT_SR1_MESS", "COMPACT_SR1_MESS"},
            {"COMPACT_SR2_MESS", "COMPACT_SR2_MESS"},
            {"COMPACT_SR3_MESS", "COMPACT_SR3_MESS"},
            {"COMPACT_SR4_MESS", "COMPACT_SR4_MESS"},
            {"COMPACT_SRCF_1_MESS", "COMPACT_SRCF_1_MESS"},
            {"COMPACT_SRCF_2_MESS", "COMPACT_SRCF_2_MESS"},
            {"COMPACT_SRCF_3_MESS", "COMPACT_SRCF_3_MESS"},
            {"COMPACT_SRCF_SEAL_ORDER", "COMPACT_SRCF_SEAL_ORDER"},
            {"COMPACT_SRCF_SEAL", "COMPACT_SRCF_SEAL"},
            {"COMPACT_SRCF_ELEVATOR", "COMPACT_SRCF_ELEVATOR"},
            {"COMPACT_OPEN_DISARM", "COMPACT_OPEN_DISARM"},
            {"COMPACT_UNLOCK_DISARM", "COMPACT_UNLOCK_DISARM"},
            {"COMPACT_RELEASE_DISARM", "COMPACT_RELEASE_DISARM"},
            {"COMPACT_IRRADIATOR", "COMPACT_IRRADIATOR"},
            {"COMPACT_GEIGER", "COMPACT_GEIGER"},
            {"COMPACT_CONVEYOR", "COMPACT_CONVEYOR"},
            {"COMPACT_SHUTTERS", "COMPACT_SHUTTERS"},
            {"COMPACT_EXTRACT_RAD_SOURCE", "COMPACT_EXTRACT_RAD_SOURCE"},
            {"COMPACT_DEACTIVATE_SHOCK_VENT", "COMPACT_DEACTIVATE_SHOCK_VENT"},
            {"NUM_COMPUTER_ACTIONS", "NUM_COMPUTER_ACTIONS"},
        },
    },
    computer_failure_type = {
        cpp_name = "computer_failure_type",
        values = {
            {"COMPFAIL_NULL", "COMPFAIL_NULL"},
            {"COMPFAIL_SHUTDOWN", "COMPFAIL_SHUTDOWN"},
            {"COMPFAIL_ALARM", "COMPFAIL_ALARM"},
            {"COMPFAIL_MANHACKS", "COMPFAIL_MANHACKS"},
            {"COMPFAIL_SECUBOTS", "COMPFAIL_SECUBOTS"},
            {"COMPFAIL_DAMAGE", "COMPFAIL_DAMAGE"},
            {"COMPFAIL_PUMP_EXPLODE", "COMPFAIL_PUMP_EXPLODE"},
            {"COMPFAIL_PUMP_LEAK", "COMPFAIL_PUMP_LEAK"},
            {"COMPFAIL_AMIGARA", "COMPFAIL_AMIGARA"},
            {"COMPFAIL_DESTROY_BLOOD", "COMPFAIL_DESTROY_BLOOD"},
            {"COMPFAIL_DESTROY_DATA", "COMPFAIL_DESTROY_DATA"},
            {"NUM_COMPUTER_FAILURES", "NUM_COMPUTER_FAILURES"},
        },
    },
    copt_hide_t = {
        cpp_name = "options_manager::copt_hide_t",
        values = {
            {"COPT_NO_HIDE", "options_manager::COPT_NO_HIDE"},
            {"COPT_SDL_HIDE", "options_manager::COPT_SDL_HIDE"},
            {"COPT_CURSES_HIDE", "options_manager::COPT_CURSES_HIDE"},
            {"COPT_POSIX_CURSES_HIDE", "options_manager::COPT_POSIX_CURSES_HIDE"},
            {"COPT_NO_SOUND_HIDE", "options_manager::COPT_NO_SOUND_HIDE"},
            {"COPT_ALWAYS_HIDE", "options_manager::COPT_ALWAYS_HIDE"},
        },
    },
    COPT_VALUE_TYPE = {
        cpp_name = "options_manager::cOpt::COPT_VALUE_TYPE",
        values = {
            {"CVT_UNKNOWN", "options_manager::cOpt::CVT_UNKNOWN"},
            {"CVT_BOOL", "options_manager::cOpt::CVT_BOOL"},
            {"CVT_STRING", "options_manager::cOpt::CVT_STRING"},
            {"CVT_FLOAT", "options_manager::cOpt::CVT_FLOAT"},
            {"CVT_INT", "options_manager::cOpt::CVT_INT"},
            {"CVT_VOID", "options_manager::cOpt::CVT_VOID"},
        },
    },
    damage_type = {
        cpp_name = "damage_type",
        values = {
            {"DT_NULL", "DT_NULL"},
            {"DT_TRUE", "DT_TRUE"},
            {"DT_BIOLOGICAL", "DT_BIOLOGICAL"},
            {"DT_BASH", "DT_BASH"},
            {"DT_CUT", "DT_CUT"},
            {"DT_ACID", "DT_ACID"},
            {"DT_STAB", "DT_STAB"},
            {"DT_HEAT", "DT_HEAT"},
            {"DT_COLD", "DT_COLD"},
            {"DT_ELECTRIC", "DT_ELECTRIC"},
            {"NUM_DT", "NUM_DT"},
        },
    },
    DebugClass = {
        cpp_name = "DebugClass",
        values = {
            {"D_MAIN", "D_MAIN"},
            {"D_MAP", "D_MAP"},
            {"D_MAP_GEN", "D_MAP_GEN"},
            {"D_GAME", "D_GAME"},
            {"D_NPC", "D_NPC"},
            {"D_SDL", "D_SDL"},
            {"DC_ALL", "DC_ALL"},
        },
    },
    DebugLevel = {
        cpp_name = "DebugLevel",
        values = {
            {"D_INFO", "D_INFO"},
            {"D_WARNING", "D_WARNING"},
            {"D_ERROR", "D_ERROR"},
            {"D_PEDANTIC_INFO", "D_PEDANTIC_INFO"},
            {"DL_ALL", "DL_ALL"},
        },
    },
    DebugOutput = {
        cpp_name = "DebugOutput",
        values = {
            {"std_err", "DebugOutput::std_err"},
            {"file", "DebugOutput::file"},
        },
    },
    defense_location = {
        cpp_name = "defense_location",
        values = {
            {"DEFLOC_NULL", "DEFLOC_NULL"},
            {"DEFLOC_HOSPITAL", "DEFLOC_HOSPITAL"},
            {"DEFLOC_WORKS", "DEFLOC_WORKS"},
            {"DEFLOC_MALL", "DEFLOC_MALL"},
            {"DEFLOC_BAR", "DEFLOC_BAR"},
            {"DEFLOC_MANSION", "DEFLOC_MANSION"},
            {"NUM_DEFENSE_LOCATIONS", "NUM_DEFENSE_LOCATIONS"},
        },
    },
    defense_style = {
        cpp_name = "defense_style",
        values = {
            {"DEFENSE_CUSTOM", "DEFENSE_CUSTOM"},
            {"DEFENSE_EASY", "DEFENSE_EASY"},
            {"DEFENSE_MEDIUM", "DEFENSE_MEDIUM"},
            {"DEFENSE_HARD", "DEFENSE_HARD"},
            {"DEFENSE_SHAUN", "DEFENSE_SHAUN"},
            {"DEFENSE_DAWN", "DEFENSE_DAWN"},
            {"DEFENSE_SPIDERS", "DEFENSE_SPIDERS"},
            {"DEFENSE_TRIFFIDS", "DEFENSE_TRIFFIDS"},
            {"DEFENSE_SKYNET", "DEFENSE_SKYNET"},
            {"DEFENSE_LOVECRAFT", "DEFENSE_LOVECRAFT"},
            {"NUM_DEFENSE_STYLES", "NUM_DEFENSE_STYLES"},
        },
    },
    dialogue_consequence = {
        cpp_name = "dialogue_consequence",
        values = {
            {"none", "none"},
            {"hostile", "hostile"},
            {"helpless", "helpless"},
            {"action", "action"},
        },
    },
    direction = {
        cpp_name = "direction",
        values = {
            {"ABOVENORTHWEST", "ABOVENORTHWEST"},
            {"NORTHWEST", "NORTHWEST"},
            {"BELOWNORTHWEST", "BELOWNORTHWEST"},
            {"ABOVENORTH", "ABOVENORTH"},
            {"NORTH", "NORTH"},
            {"BELOWNORTH", "BELOWNORTH"},
            {"ABOVENORTHEAST", "ABOVENORTHEAST"},
            {"NORTHEAST", "NORTHEAST"},
            {"BELOWNORTHEAST", "BELOWNORTHEAST"},
            {"ABOVEWEST", "ABOVEWEST"},
            {"WEST", "WEST"},
            {"BELOWWEST", "BELOWWEST"},
            {"ABOVECENTER", "ABOVECENTER"},
            {"CENTER", "CENTER"},
            {"BELOWCENTER", "BELOWCENTER"},
            {"ABOVEEAST", "ABOVEEAST"},
            {"EAST", "EAST"},
            {"BELOWEAST", "BELOWEAST"},
            {"ABOVESOUTHWEST", "ABOVESOUTHWEST"},
            {"SOUTHWEST", "SOUTHWEST"},
            {"BELOWSOUTHWEST", "BELOWSOUTHWEST"},
            {"ABOVESOUTH", "ABOVESOUTH"},
            {"SOUTH", "SOUTH"},
            {"BELOWSOUTH", "BELOWSOUTH"},
            {"ABOVESOUTHEAST", "ABOVESOUTHEAST"},
            {"SOUTHEAST", "SOUTHEAST"},
            {"BELOWSOUTHEAST", "BELOWSOUTHEAST"},
        },
    },
    distraction_type = {
        cpp_name = "distraction_type",
        values = {
            {"noise", "distraction_type::noise"},
            {"pain", "distraction_type::pain"},
            {"attacked", "distraction_type::attacked"},
            {"hostile_spotted", "distraction_type::hostile_spotted"},
            {"talked_to", "distraction_type::talked_to"},
            {"asthma", "distraction_type::asthma"},
            {"motion_alarm", "distraction_type::motion_alarm"},
            {"weather_change", "distraction_type::weather_change"},
        },
    },
    dump_mode = {
        cpp_name = "dump_mode",
        values = {
            {"TSV", "dump_mode::TSV"},
            {"HTML", "dump_mode::HTML"},
        },
    },
    edible_rating = {
        cpp_name = "edible_rating",
        values = {
            {"EDIBLE", "EDIBLE"},
            {"INEDIBLE", "INEDIBLE"},
            {"INEDIBLE_MUTATION", "INEDIBLE_MUTATION"},
            {"ALLERGY", "ALLERGY"},
            {"ALLERGY_WEAK", "ALLERGY_WEAK"},
            {"CANNIBALISM", "CANNIBALISM"},
            {"ROTTEN", "ROTTEN"},
            {"NAUSEA", "NAUSEA"},
            {"TOO_FULL", "TOO_FULL"},
            {"NO_TOOL", "NO_TOOL"},
        },
    },
    effect_rating = {
        cpp_name = "effect_rating",
        values = {
            {"e_good", "e_good"},
            {"e_neutral", "e_neutral"},
            {"e_bad", "e_bad"},
            {"e_mixed", "e_mixed"},
        },
    },
    enumeration_conjunction = {
        cpp_name = "enumeration_conjunction",
        values = {
            {"none", "enumeration_conjunction::none"},
            {"and_", "enumeration_conjunction::and_"},
            {"or_", "enumeration_conjunction::or_"},
        },
    },
    event_type = {
        cpp_name = "event_type",
        values = {
            {"EVENT_NULL", "EVENT_NULL"},
            {"EVENT_HELP", "EVENT_HELP"},
            {"EVENT_WANTED", "EVENT_WANTED"},
            {"EVENT_ROBOT_ATTACK", "EVENT_ROBOT_ATTACK"},
            {"EVENT_SPAWN_WYRMS", "EVENT_SPAWN_WYRMS"},
            {"EVENT_AMIGARA", "EVENT_AMIGARA"},
            {"EVENT_ROOTS_DIE", "EVENT_ROOTS_DIE"},
            {"EVENT_TEMPLE_OPEN", "EVENT_TEMPLE_OPEN"},
            {"EVENT_TEMPLE_FLOOD", "EVENT_TEMPLE_FLOOD"},
            {"EVENT_TEMPLE_SPAWN", "EVENT_TEMPLE_SPAWN"},
            {"EVENT_DIM", "EVENT_DIM"},
            {"EVENT_ARTIFACT_LIGHT", "EVENT_ARTIFACT_LIGHT"},
            {"NUM_EVENT_TYPES", "NUM_EVENT_TYPES"},
        },
    },
    explosion_neighbors = {
        cpp_name = "explosion_neighbors",
        values = {
            {"N_NO_NEIGHBORS", "N_NO_NEIGHBORS"},
            {"N_NORTH", "N_NORTH"},
            {"N_SOUTH", "N_SOUTH"},
            {"N_NS", "N_NS"},
            {"N_WEST", "N_WEST"},
            {"N_NW", "N_NW"},
            {"N_SW", "N_SW"},
            {"N_NSW", "N_NSW"},
            {"N_EAST", "N_EAST"},
            {"N_NE", "N_NE"},
            {"N_SE", "N_SE"},
            {"N_NSE", "N_NSE"},
            {"N_WE", "N_WE"},
            {"N_NWE", "N_NWE"},
            {"N_SWE", "N_SWE"},
            {"N_NSWE", "N_NSWE"},
        },
    },
    face_type = {
        cpp_name = "face_type",
        values = {
            {"face_human", "face_human"},
            {"face_bird", "face_bird"},
            {"face_bear", "face_bear"},
            {"face_cat", "face_cat"},
            {"num_face_types", "num_face_types"},
        },
    },
    FacingDirection = {
        cpp_name = "FacingDirection",
        values = {
            {"FD_NONE", "FD_NONE"},
            {"FD_LEFT", "FD_LEFT"},
            {"FD_RIGHT", "FD_RIGHT"},
        },
    },
    farm_ops = {
        cpp_name = "farm_ops",
        values = {
            {"plow", "farm_ops::plow"},
            {"plant", "farm_ops::plant"},
            {"harvest", "farm_ops::harvest"},
        },
    },
    fatigue_levels = {
        cpp_name = "fatigue_levels",
        values = {
            {"TIRED", "TIRED"},
            {"DEAD_TIRED", "DEAD_TIRED"},
            {"EXHAUSTED", "EXHAUSTED"},
            {"MASSIVE_FATIGUE", "MASSIVE_FATIGUE"},
        },
    },
    field_id = {
        cpp_name = "field_id",
        values = {
            {"fd_null", "fd_null"},
            {"fd_blood", "fd_blood"},
            {"fd_bile", "fd_bile"},
            {"fd_gibs_flesh", "fd_gibs_flesh"},
            {"fd_gibs_veggy", "fd_gibs_veggy"},
            {"fd_web", "fd_web"},
            {"fd_slime", "fd_slime"},
            {"fd_acid", "fd_acid"},
            {"fd_sap", "fd_sap"},
            {"fd_sludge", "fd_sludge"},
            {"fd_fire", "fd_fire"},
            {"fd_rubble", "fd_rubble"},
            {"fd_smoke", "fd_smoke"},
            {"fd_toxic_gas", "fd_toxic_gas"},
            {"fd_tear_gas", "fd_tear_gas"},
            {"fd_nuke_gas", "fd_nuke_gas"},
            {"fd_gas_vent", "fd_gas_vent"},
            {"fd_fire_vent", "fd_fire_vent"},
            {"fd_flame_burst", "fd_flame_burst"},
            {"fd_electricity", "fd_electricity"},
            {"fd_fatigue", "fd_fatigue"},
            {"fd_push_items", "fd_push_items"},
            {"fd_shock_vent", "fd_shock_vent"},
            {"fd_acid_vent", "fd_acid_vent"},
            {"fd_plasma", "fd_plasma"},
            {"fd_laser", "fd_laser"},
            {"fd_spotlight", "fd_spotlight"},
            {"fd_dazzling", "fd_dazzling"},
            {"fd_blood_veggy", "fd_blood_veggy"},
            {"fd_blood_insect", "fd_blood_insect"},
            {"fd_blood_invertebrate", "fd_blood_invertebrate"},
            {"fd_gibs_insect", "fd_gibs_insect"},
            {"fd_gibs_invertebrate", "fd_gibs_invertebrate"},
            {"fd_cigsmoke", "fd_cigsmoke"},
            {"fd_weedsmoke", "fd_weedsmoke"},
            {"fd_cracksmoke", "fd_cracksmoke"},
            {"fd_methsmoke", "fd_methsmoke"},
            {"fd_bees", "fd_bees"},
            {"fd_incendiary", "fd_incendiary"},
            {"fd_relax_gas", "fd_relax_gas"},
            {"fd_fungal_haze", "fd_fungal_haze"},
            {"fd_hot_air1", "fd_hot_air1"},
            {"fd_hot_air2", "fd_hot_air2"},
            {"fd_hot_air3", "fd_hot_air3"},
            {"fd_hot_air4", "fd_hot_air4"},
            {"fd_fungicidal_gas", "fd_fungicidal_gas"},
            {"fd_smoke_vent", "fd_smoke_vent"},
            {"num_fields", "num_fields"},
        },
    },
    flag = {
        cpp_name = "overmap_connection::subtype::flag",
        values = {
            {"orthogonal", "overmap_connection::subtype::flag::orthogonal"},
        },
    },
    flags = {
        cpp_name = "iteminfo::flags",
        values = {
            {"no_flags", "iteminfo::no_flags"},
            {"is_decimal", "iteminfo::is_decimal"},
            {"no_newline", "iteminfo::no_newline"},
            {"lower_is_better", "iteminfo::lower_is_better"},
            {"no_name", "iteminfo::no_name"},
            {"show_plus", "iteminfo::show_plus"},
        },
    },
    from_where = {
        cpp_name = "from_where",
        values = {
            {"from_cargo", "from_cargo"},
            {"from_ground", "from_ground"},
            {"prompt", "prompt"},
        },
    },
    game_message_type = {
        cpp_name = "game_message_type",
        values = {
            {"m_good", "m_good"},
            {"m_bad", "m_bad"},
            {"m_mixed", "m_mixed"},
            {"m_warning", "m_warning"},
            {"m_info", "m_info"},
            {"m_neutral", "m_neutral"},
            {"m_debug", "m_debug"},
            {"m_headshot", "m_headshot"},
            {"m_critical", "m_critical"},
            {"m_grazing", "m_grazing"},
        },
    },
    hack_result = {
        cpp_name = "hack_result",
        values = {
            {"HACK_UNABLE", "HACK_UNABLE"},
            {"HACK_FAIL", "HACK_FAIL"},
            {"HACK_NOTHING", "HACK_NOTHING"},
            {"HACK_SUCCESS", "HACK_SUCCESS"},
        },
    },
    hint_rating = {
        cpp_name = "hint_rating",
        values = {
            {"HINT_CANT", "HINT_CANT"},
            {"HINT_IFFY", "HINT_IFFY"},
            {"HINT_GOOD", "HINT_GOOD"},
        },
    },
    hl_enum = {
        cpp_name = "hl_enum",
        values = {
            {"HL_BLUE", "HL_BLUE"},
            {"HL_RED", "HL_RED"},
            {"HL_WHITE", "HL_WHITE"},
            {"HL_GREEN", "HL_GREEN"},
            {"HL_YELLOW", "HL_YELLOW"},
            {"HL_MAGENTA", "HL_MAGENTA"},
            {"HL_CYAN", "HL_CYAN"},
            {"NUM_HL", "NUM_HL"},
        },
    },
    hp_part = {
        cpp_name = "hp_part",
        values = {
            {"hp_head", "hp_head"},
            {"hp_torso", "hp_torso"},
            {"hp_arm_l", "hp_arm_l"},
            {"hp_arm_r", "hp_arm_r"},
            {"hp_leg_l", "hp_leg_l"},
            {"hp_leg_r", "hp_leg_r"},
            {"num_hp_parts", "num_hp_parts"},
        },
    },
    input_event_t = {
        cpp_name = "input_event_t",
        values = {
            {"CATA_INPUT_ERROR", "CATA_INPUT_ERROR"},
            {"CATA_INPUT_TIMEOUT", "CATA_INPUT_TIMEOUT"},
            {"CATA_INPUT_KEYBOARD", "CATA_INPUT_KEYBOARD"},
            {"CATA_INPUT_GAMEPAD", "CATA_INPUT_GAMEPAD"},
            {"CATA_INPUT_MOUSE", "CATA_INPUT_MOUSE"},
        },
    },
    inventory_item_menu_positon = {
        cpp_name = "game::inventory_item_menu_positon",
        values = {
            {"RIGHT_TERMINAL_EDGE", "game::RIGHT_TERMINAL_EDGE"},
            {"LEFT_OF_INFO", "game::LEFT_OF_INFO"},
            {"RIGHT_OF_INFO", "game::RIGHT_OF_INFO"},
            {"LEFT_TERMINAL_EDGE", "game::LEFT_TERMINAL_EDGE"},
        },
    },
    item_drop_reason = {
        cpp_name = "item_drop_reason",
        values = {
            {"deliberate", "item_drop_reason::deliberate"},
            {"too_large", "item_drop_reason::too_large"},
            {"too_heavy", "item_drop_reason::too_heavy"},
            {"tumbling", "item_drop_reason::tumbling"},
        },
    },
    item_filter_type = {
        cpp_name = "item_filter_type",
        values = {
            {"FIRST", "item_filter_type::FIRST"},
            {"FILTER", "item_filter_type::FILTER"},
            {"LOW_PRIORITY", "item_filter_type::LOW_PRIORITY"},
            {"HIGH_PRIORITY", "item_filter_type::HIGH_PRIORITY"},
        },
    },
    iteminfo_parts = {
        cpp_name = "iteminfo_parts",
        values = {
            {"BASE_CATEGORY", "iteminfo_parts::BASE_CATEGORY"},
            {"BASE_PRICE", "iteminfo_parts::BASE_PRICE"},
            {"BASE_BARTER", "iteminfo_parts::BASE_BARTER"},
            {"BASE_VOLUME", "iteminfo_parts::BASE_VOLUME"},
            {"BASE_WEIGHT", "iteminfo_parts::BASE_WEIGHT"},
            {"BASE_RIGIDITY", "iteminfo_parts::BASE_RIGIDITY"},
            {"BASE_DAMAGE", "iteminfo_parts::BASE_DAMAGE"},
            {"BASE_TOHIT", "iteminfo_parts::BASE_TOHIT"},
            {"BASE_MOVES", "iteminfo_parts::BASE_MOVES"},
            {"BASE_REQUIREMENTS", "iteminfo_parts::BASE_REQUIREMENTS"},
            {"BASE_MATERIAL", "iteminfo_parts::BASE_MATERIAL"},
            {"BASE_CONTENTS", "iteminfo_parts::BASE_CONTENTS"},
            {"BASE_AMOUNT", "iteminfo_parts::BASE_AMOUNT"},
            {"BASE_DEBUG", "iteminfo_parts::BASE_DEBUG"},
            {"MED_JOY", "iteminfo_parts::MED_JOY"},
            {"MED_PORTIONS", "iteminfo_parts::MED_PORTIONS"},
            {"MED_STIMULATION", "iteminfo_parts::MED_STIMULATION"},
            {"MED_QUENCH", "iteminfo_parts::MED_QUENCH"},
            {"FOOD_NUTRITION", "iteminfo_parts::FOOD_NUTRITION"},
            {"FOOD_QUENCH", "iteminfo_parts::FOOD_QUENCH"},
            {"FOOD_JOY", "iteminfo_parts::FOOD_JOY"},
            {"FOOD_PORTIONS", "iteminfo_parts::FOOD_PORTIONS"},
            {"FOOD_SMELL", "iteminfo_parts::FOOD_SMELL"},
            {"FOOD_VITAMINS", "iteminfo_parts::FOOD_VITAMINS"},
            {"FOOD_CANNIBALISM", "iteminfo_parts::FOOD_CANNIBALISM"},
            {"FOOD_TAINT", "iteminfo_parts::FOOD_TAINT"},
            {"FOOD_POISON", "iteminfo_parts::FOOD_POISON"},
            {"FOOD_HALLUCINOGENIC", "iteminfo_parts::FOOD_HALLUCINOGENIC"},
            {"FOOD_ROT", "iteminfo_parts::FOOD_ROT"},
            {"MAGAZINE_CAPACITY", "iteminfo_parts::MAGAZINE_CAPACITY"},
            {"MAGAZINE_RELOAD", "iteminfo_parts::MAGAZINE_RELOAD"},
            {"AMMO_REMAINING_OR_TYPES", "iteminfo_parts::AMMO_REMAINING_OR_TYPES"},
            {"AMMO_DAMAGE_VALUE", "iteminfo_parts::AMMO_DAMAGE_VALUE"},
            {"AMMO_DAMAGE_PROPORTIONAL", "iteminfo_parts::AMMO_DAMAGE_PROPORTIONAL"},
            {"AMMO_DAMAGE_AP", "iteminfo_parts::AMMO_DAMAGE_AP"},
            {"AMMO_DAMAGE_RANGE", "iteminfo_parts::AMMO_DAMAGE_RANGE"},
            {"AMMO_DAMAGE_DISPERSION", "iteminfo_parts::AMMO_DAMAGE_DISPERSION"},
            {"AMMO_DAMAGE_RECOIL", "iteminfo_parts::AMMO_DAMAGE_RECOIL"},
            {"AMMO_FX_RECYCLED", "iteminfo_parts::AMMO_FX_RECYCLED"},
            {"AMMO_FX_CANTMISSFIRE", "iteminfo_parts::AMMO_FX_CANTMISSFIRE"},
            {"AMMO_FX_INDENDIARY", "iteminfo_parts::AMMO_FX_INDENDIARY"},
            {"DESCRIPTION_AUX_GUNMOD_HEADER", "iteminfo_parts::DESCRIPTION_AUX_GUNMOD_HEADER"},
            {"GUN_USEDSKILL", "iteminfo_parts::GUN_USEDSKILL"},
            {"GUN_CAPACITY", "iteminfo_parts::GUN_CAPACITY"},
            {"GUN_TYPE", "iteminfo_parts::GUN_TYPE"},
            {"GUN_MAGAZINE", "iteminfo_parts::GUN_MAGAZINE"},
            {"AMMO_REMAINING", "iteminfo_parts::AMMO_REMAINING"},
            {"AMMO_UPSCOST", "iteminfo_parts::AMMO_UPSCOST"},
            {"GUN_MAX_RANGE", "iteminfo_parts::GUN_MAX_RANGE"},
            {"GUN_AIMING_STATS", "iteminfo_parts::GUN_AIMING_STATS"},
            {"GUN_DAMAGE", "iteminfo_parts::GUN_DAMAGE"},
            {"GUN_DAMAGE_LOADEDAMMO", "iteminfo_parts::GUN_DAMAGE_LOADEDAMMO"},
            {"GUN_DAMAGE_TOTAL", "iteminfo_parts::GUN_DAMAGE_TOTAL"},
            {"GUN_DAMAGE_AMMOPROP", "iteminfo_parts::GUN_DAMAGE_AMMOPROP"},
            {"GUN_ARMORPIERCE", "iteminfo_parts::GUN_ARMORPIERCE"},
            {"GUN_ARMORPIERCE_LOADEDAMMO", "iteminfo_parts::GUN_ARMORPIERCE_LOADEDAMMO"},
            {"GUN_ARMORPIERCE_TOTAL", "iteminfo_parts::GUN_ARMORPIERCE_TOTAL"},
            {"GUN_DISPERSION", "iteminfo_parts::GUN_DISPERSION"},
            {"GUN_DISPERSION_LOADEDAMMO", "iteminfo_parts::GUN_DISPERSION_LOADEDAMMO"},
            {"GUN_DISPERSION_TOTAL", "iteminfo_parts::GUN_DISPERSION_TOTAL"},
            {"GUN_DISPERSION_SIGHT", "iteminfo_parts::GUN_DISPERSION_SIGHT"},
            {"GUN_RECOIL", "iteminfo_parts::GUN_RECOIL"},
            {"GUN_RECOIL_BIPOD", "iteminfo_parts::GUN_RECOIL_BIPOD"},
            {"GUN_RECOMMENDED_STRENGTH", "iteminfo_parts::GUN_RECOMMENDED_STRENGTH"},
            {"GUN_RELOAD_TIME", "iteminfo_parts::GUN_RELOAD_TIME"},
            {"GUN_FIRE_MODES", "iteminfo_parts::GUN_FIRE_MODES"},
            {"GUN_ALLOWED_MAGAZINES", "iteminfo_parts::GUN_ALLOWED_MAGAZINES"},
            {"DESCRIPTION_GUN_MODS", "iteminfo_parts::DESCRIPTION_GUN_MODS"},
            {"DESCRIPTION_GUN_CASINGS", "iteminfo_parts::DESCRIPTION_GUN_CASINGS"},
            {"DESCRIPTION_GUNMOD", "iteminfo_parts::DESCRIPTION_GUNMOD"},
            {"DESCRIPTION_GUNMOD_REACH", "iteminfo_parts::DESCRIPTION_GUNMOD_REACH"},
            {"GUNMOD_DISPERSION", "iteminfo_parts::GUNMOD_DISPERSION"},
            {"GUNMOD_DISPERSION_SIGHT", "iteminfo_parts::GUNMOD_DISPERSION_SIGHT"},
            {"GUNMOD_AIMSPEED", "iteminfo_parts::GUNMOD_AIMSPEED"},
            {"GUNMOD_DAMAGE", "iteminfo_parts::GUNMOD_DAMAGE"},
            {"GUNMOD_ARMORPIERCE", "iteminfo_parts::GUNMOD_ARMORPIERCE"},
            {"GUNMOD_HANDLING", "iteminfo_parts::GUNMOD_HANDLING"},
            {"GUNMOD_AMMO", "iteminfo_parts::GUNMOD_AMMO"},
            {"GUNMOD_RELOAD", "iteminfo_parts::GUNMOD_RELOAD"},
            {"GUNMOD_STRENGTH", "iteminfo_parts::GUNMOD_STRENGTH"},
            {"GUNMOD_ADD_MOD", "iteminfo_parts::GUNMOD_ADD_MOD"},
            {"GUNMOD_USEDON", "iteminfo_parts::GUNMOD_USEDON"},
            {"GUNMOD_LOCATION", "iteminfo_parts::GUNMOD_LOCATION"},
            {"GUNMOD_BLACKLIST_MOD", "iteminfo_parts::GUNMOD_BLACKLIST_MOD"},
            {"ARMOR_BODYPARTS", "iteminfo_parts::ARMOR_BODYPARTS"},
            {"ARMOR_LAYER", "iteminfo_parts::ARMOR_LAYER"},
            {"ARMOR_COVERAGE", "iteminfo_parts::ARMOR_COVERAGE"},
            {"ARMOR_WARMTH", "iteminfo_parts::ARMOR_WARMTH"},
            {"ARMOR_ENCUMBRANCE", "iteminfo_parts::ARMOR_ENCUMBRANCE"},
            {"ARMOR_STORAGE", "iteminfo_parts::ARMOR_STORAGE"},
            {"ARMOR_PROTECTION", "iteminfo_parts::ARMOR_PROTECTION"},
            {"BOOK_SUMMARY", "iteminfo_parts::BOOK_SUMMARY"},
            {"BOOK_REQUIREMENTS_BEGINNER", "iteminfo_parts::BOOK_REQUIREMENTS_BEGINNER"},
            {"BOOK_SKILLRANGE_MAX", "iteminfo_parts::BOOK_SKILLRANGE_MAX"},
            {"BOOK_SKILLRANGE_MIN", "iteminfo_parts::BOOK_SKILLRANGE_MIN"},
            {"BOOK_REQUIREMENTS_INT", "iteminfo_parts::BOOK_REQUIREMENTS_INT"},
            {"BOOK_MORALECHANGE", "iteminfo_parts::BOOK_MORALECHANGE"},
            {"BOOK_TIMEPERCHAPTER", "iteminfo_parts::BOOK_TIMEPERCHAPTER"},
            {"BOOK_NUMUNREADCHAPTERS", "iteminfo_parts::BOOK_NUMUNREADCHAPTERS"},
            {"DESCRIPTION_BOOK_RECIPES", "iteminfo_parts::DESCRIPTION_BOOK_RECIPES"},
            {"DESCRIPTION_BOOK_ADDITIONAL_RECIPES", "iteminfo_parts::DESCRIPTION_BOOK_ADDITIONAL_RECIPES"},
            {"BOOK_UNREAD", "iteminfo_parts::BOOK_UNREAD"},
            {"CONTAINER_DETAILS", "iteminfo_parts::CONTAINER_DETAILS"},
            {"TOOL_CHARGES", "iteminfo_parts::TOOL_CHARGES"},
            {"TOOL_MAGAZINE_CURRENT", "iteminfo_parts::TOOL_MAGAZINE_CURRENT"},
            {"TOOL_MAGAZINE_COMPATIBLE", "iteminfo_parts::TOOL_MAGAZINE_COMPATIBLE"},
            {"TOOL_CAPACITY", "iteminfo_parts::TOOL_CAPACITY"},
            {"DESCRIPTION_COMPONENTS_MADEFROM", "iteminfo_parts::DESCRIPTION_COMPONENTS_MADEFROM"},
            {"DESCRIPTION_COMPONENTS_DISASSEMBLE", "iteminfo_parts::DESCRIPTION_COMPONENTS_DISASSEMBLE"},
            {"QUALITIES", "iteminfo_parts::QUALITIES"},
            {"QUALITIES_CONTAINED", "iteminfo_parts::QUALITIES_CONTAINED"},
            {"DESCRIPTION", "iteminfo_parts::DESCRIPTION"},
            {"DESCRIPTION_TECHNIQUES", "iteminfo_parts::DESCRIPTION_TECHNIQUES"},
            {"DESCRIPTION_GUNMOD_ADDREACHATTACK", "iteminfo_parts::DESCRIPTION_GUNMOD_ADDREACHATTACK"},
            {"DESCRIPTION_MELEEDMG", "iteminfo_parts::DESCRIPTION_MELEEDMG"},
            {"DESCRIPTION_MELEEDMG_CRIT", "iteminfo_parts::DESCRIPTION_MELEEDMG_CRIT"},
            {"DESCRIPTION_MELEEDMG_BASH", "iteminfo_parts::DESCRIPTION_MELEEDMG_BASH"},
            {"DESCRIPTION_MELEEDMG_CUT", "iteminfo_parts::DESCRIPTION_MELEEDMG_CUT"},
            {"DESCRIPTION_MELEEDMG_PIERCE", "iteminfo_parts::DESCRIPTION_MELEEDMG_PIERCE"},
            {"DESCRIPTION_MELEEDMG_MOVES", "iteminfo_parts::DESCRIPTION_MELEEDMG_MOVES"},
            {"DESCRIPTION_APPLICABLEMARTIALARTS", "iteminfo_parts::DESCRIPTION_APPLICABLEMARTIALARTS"},
            {"DESCRIPTION_USE_METHODS", "iteminfo_parts::DESCRIPTION_USE_METHODS"},
            {"DESCRIPTION_REPAIREDWITH", "iteminfo_parts::DESCRIPTION_REPAIREDWITH"},
            {"DESCRIPTION_CONDUCTIVITY", "iteminfo_parts::DESCRIPTION_CONDUCTIVITY"},
            {"DESCRIPTION_FLAGS", "iteminfo_parts::DESCRIPTION_FLAGS"},
            {"DESCRIPTION_FLAGS_HELMETCOMPAT", "iteminfo_parts::DESCRIPTION_FLAGS_HELMETCOMPAT"},
            {"DESCRIPTION_FLAGS_FITS", "iteminfo_parts::DESCRIPTION_FLAGS_FITS"},
            {"DESCRIPTION_FLAGS_VARSIZE", "iteminfo_parts::DESCRIPTION_FLAGS_VARSIZE"},
            {"DESCRIPTION_FLAGS_SIDED", "iteminfo_parts::DESCRIPTION_FLAGS_SIDED"},
            {"DESCRIPTION_FLAGS_POWERARMOR", "iteminfo_parts::DESCRIPTION_FLAGS_POWERARMOR"},
            {"DESCRIPTION_FLAGS_POWERARMOR_RADIATIONHINT", "iteminfo_parts::DESCRIPTION_FLAGS_POWERARMOR_RADIATIONHINT"},
            {"DESCRIPTION_IRRIDATION", "iteminfo_parts::DESCRIPTION_IRRIDATION"},
            {"DESCRIPTION_RECHARGE_UPSMODDED", "iteminfo_parts::DESCRIPTION_RECHARGE_UPSMODDED"},
            {"DESCRIPTION_RECHARGE_NORELOAD", "iteminfo_parts::DESCRIPTION_RECHARGE_NORELOAD"},
            {"DESCRIPTION_RECHARGE_UPSCAPABLE", "iteminfo_parts::DESCRIPTION_RECHARGE_UPSCAPABLE"},
            {"DESCRIPTION_RADIO_ACTIVATION", "iteminfo_parts::DESCRIPTION_RADIO_ACTIVATION"},
            {"DESCRIPTION_RADIO_ACTIVATION_CHANNEL", "iteminfo_parts::DESCRIPTION_RADIO_ACTIVATION_CHANNEL"},
            {"DESCRIPTION_RADIO_ACTIVATION_PROC", "iteminfo_parts::DESCRIPTION_RADIO_ACTIVATION_PROC"},
            {"DESCRIPTION_CBM_SLOTS", "iteminfo_parts::DESCRIPTION_CBM_SLOTS"},
            {"DESCRIPTION_TWOHANDED", "iteminfo_parts::DESCRIPTION_TWOHANDED"},
            {"DESCRIPTION_GUNMOD_DISABLESSIGHTS", "iteminfo_parts::DESCRIPTION_GUNMOD_DISABLESSIGHTS"},
            {"DESCRIPTION_GUNMOD_CONSUMABLE", "iteminfo_parts::DESCRIPTION_GUNMOD_CONSUMABLE"},
            {"DESCRIPTION_RADIOACTIVITY_DAMAGED", "iteminfo_parts::DESCRIPTION_RADIOACTIVITY_DAMAGED"},
            {"DESCRIPTION_RADIOACTIVITY_ALWAYS", "iteminfo_parts::DESCRIPTION_RADIOACTIVITY_ALWAYS"},
            {"DESCRIPTION_BREWABLE_DURATION", "iteminfo_parts::DESCRIPTION_BREWABLE_DURATION"},
            {"DESCRIPTION_BREWABLE_PRODUCTS", "iteminfo_parts::DESCRIPTION_BREWABLE_PRODUCTS"},
            {"DESCRIPTION_FAULTS", "iteminfo_parts::DESCRIPTION_FAULTS"},
            {"DESCRIPTION_HOLSTERS", "iteminfo_parts::DESCRIPTION_HOLSTERS"},
            {"DESCRIPTION_ACTIVATABLE_TRANSFORMATION", "iteminfo_parts::DESCRIPTION_ACTIVATABLE_TRANSFORMATION"},
            {"DESCRIPTION_NOTES", "iteminfo_parts::DESCRIPTION_NOTES"},
            {"DESCRIPTION_CONTENTS", "iteminfo_parts::DESCRIPTION_CONTENTS"},
            {"DESCRIPTION_APPLICABLE_RECIPES", "iteminfo_parts::DESCRIPTION_APPLICABLE_RECIPES"},
            {"DESCRIPTION_MED_ADDICTING", "iteminfo_parts::DESCRIPTION_MED_ADDICTING"},
            {"NUM_VALUES", "iteminfo_parts::NUM_VALUES"},
        },
    },
    jmapgen_setmap_op = {
        cpp_name = "jmapgen_setmap_op",
        values = {
            {"JMAPGEN_SETMAP_OPTYPE_POINT", "JMAPGEN_SETMAP_OPTYPE_POINT"},
            {"JMAPGEN_SETMAP_TER", "JMAPGEN_SETMAP_TER"},
            {"JMAPGEN_SETMAP_FURN", "JMAPGEN_SETMAP_FURN"},
            {"JMAPGEN_SETMAP_TRAP", "JMAPGEN_SETMAP_TRAP"},
            {"JMAPGEN_SETMAP_RADIATION", "JMAPGEN_SETMAP_RADIATION"},
            {"JMAPGEN_SETMAP_BASH", "JMAPGEN_SETMAP_BASH"},
            {"JMAPGEN_SETMAP_OPTYPE_LINE", "JMAPGEN_SETMAP_OPTYPE_LINE"},
            {"JMAPGEN_SETMAP_LINE_TER", "JMAPGEN_SETMAP_LINE_TER"},
            {"JMAPGEN_SETMAP_LINE_FURN", "JMAPGEN_SETMAP_LINE_FURN"},
            {"JMAPGEN_SETMAP_LINE_TRAP", "JMAPGEN_SETMAP_LINE_TRAP"},
            {"JMAPGEN_SETMAP_LINE_RADIATION", "JMAPGEN_SETMAP_LINE_RADIATION"},
            {"JMAPGEN_SETMAP_OPTYPE_SQUARE", "JMAPGEN_SETMAP_OPTYPE_SQUARE"},
            {"JMAPGEN_SETMAP_SQUARE_TER", "JMAPGEN_SETMAP_SQUARE_TER"},
            {"JMAPGEN_SETMAP_SQUARE_FURN", "JMAPGEN_SETMAP_SQUARE_FURN"},
            {"JMAPGEN_SETMAP_SQUARE_TRAP", "JMAPGEN_SETMAP_SQUARE_TRAP"},
            {"JMAPGEN_SETMAP_SQUARE_RADIATION", "JMAPGEN_SETMAP_SQUARE_RADIATION"},
        },
    },
    layer_level = {
        cpp_name = "layer_level",
        values = {
            {"UNDERWEAR", "UNDERWEAR"},
            {"REGULAR_LAYER", "REGULAR_LAYER"},
            {"WAIST_LAYER", "WAIST_LAYER"},
            {"OUTER_LAYER", "OUTER_LAYER"},
            {"BELTED_LAYER", "BELTED_LAYER"},
            {"MAX_CLOTHING_LAYER", "MAX_CLOTHING_LAYER"},
        },
    },
    liquid_dest = {
        cpp_name = "liquid_dest",
        values = {
            {"LD_NULL", "LD_NULL"},
            {"LD_CONSUME", "LD_CONSUME"},
            {"LD_ITEM", "LD_ITEM"},
            {"LD_VEH", "LD_VEH"},
            {"LD_KEG", "LD_KEG"},
            {"LD_GROUND", "LD_GROUND"},
        },
    },
    lit_level = {
        cpp_name = "lit_level",
        values = {
            {"LL_DARK", "LL_DARK"},
            {"LL_LOW", "LL_LOW"},
            {"LL_BRIGHT_ONLY", "LL_BRIGHT_ONLY"},
            {"LL_LIT", "LL_LIT"},
            {"LL_BRIGHT", "LL_BRIGHT"},
            {"LL_MEMORIZED", "LL_MEMORIZED"},
            {"LL_BLANK", "LL_BLANK"},
        },
    },
    m_flag = {
        cpp_name = "m_flag",
        values = {
            {"MF_SEES", "MF_SEES"},
            {"MF_HEARS", "MF_HEARS"},
            {"MF_GOODHEARING", "MF_GOODHEARING"},
            {"MF_SMELLS", "MF_SMELLS"},
            {"MF_KEENNOSE", "MF_KEENNOSE"},
            {"MF_STUMBLES", "MF_STUMBLES"},
            {"MF_WARM", "MF_WARM"},
            {"MF_NOHEAD", "MF_NOHEAD"},
            {"MF_HARDTOSHOOT", "MF_HARDTOSHOOT"},
            {"MF_GRABS", "MF_GRABS"},
            {"MF_BASHES", "MF_BASHES"},
            {"MF_DESTROYS", "MF_DESTROYS"},
            {"MF_BORES", "MF_BORES"},
            {"MF_POISON", "MF_POISON"},
            {"MF_VENOM", "MF_VENOM"},
            {"MF_BADVENOM", "MF_BADVENOM"},
            {"MF_PARALYZE", "MF_PARALYZE"},
            {"MF_BLEED", "MF_BLEED"},
            {"MF_WEBWALK", "MF_WEBWALK"},
            {"MF_DIGS", "MF_DIGS"},
            {"MF_CAN_DIG", "MF_CAN_DIG"},
            {"MF_FLIES", "MF_FLIES"},
            {"MF_AQUATIC", "MF_AQUATIC"},
            {"MF_SWIMS", "MF_SWIMS"},
            {"MF_ATTACKMON", "MF_ATTACKMON"},
            {"MF_ANIMAL", "MF_ANIMAL"},
            {"MF_PLASTIC", "MF_PLASTIC"},
            {"MF_SUNDEATH", "MF_SUNDEATH"},
            {"MF_ELECTRIC", "MF_ELECTRIC"},
            {"MF_ACIDPROOF", "MF_ACIDPROOF"},
            {"MF_ACIDTRAIL", "MF_ACIDTRAIL"},
            {"MF_SHORTACIDTRAIL", "MF_SHORTACIDTRAIL"},
            {"MF_FIREPROOF", "MF_FIREPROOF"},
            {"MF_SLUDGEPROOF", "MF_SLUDGEPROOF"},
            {"MF_SLUDGETRAIL", "MF_SLUDGETRAIL"},
            {"MF_FIREY", "MF_FIREY"},
            {"MF_QUEEN", "MF_QUEEN"},
            {"MF_ELECTRONIC", "MF_ELECTRONIC"},
            {"MF_FUR", "MF_FUR"},
            {"MF_LEATHER", "MF_LEATHER"},
            {"MF_WOOL", "MF_WOOL"},
            {"MF_FEATHER", "MF_FEATHER"},
            {"MF_BONES", "MF_BONES"},
            {"MF_FAT", "MF_FAT"},
            {"MF_IMMOBILE", "MF_IMMOBILE"},
            {"MF_HIT_AND_RUN", "MF_HIT_AND_RUN"},
            {"MF_GUILT", "MF_GUILT"},
            {"MF_HUMAN", "MF_HUMAN"},
            {"MF_NO_BREATHE", "MF_NO_BREATHE"},
            {"MF_REGENERATES_50", "MF_REGENERATES_50"},
            {"MF_REGENERATES_10", "MF_REGENERATES_10"},
            {"MF_REGENERATES_IN_DARK", "MF_REGENERATES_IN_DARK"},
            {"MF_FLAMMABLE", "MF_FLAMMABLE"},
            {"MF_REVIVES", "MF_REVIVES"},
            {"MF_CHITIN", "MF_CHITIN"},
            {"MF_VERMIN", "MF_VERMIN"},
            {"MF_NOGIB", "MF_NOGIB"},
            {"MF_LARVA", "MF_LARVA"},
            {"MF_ARTHROPOD_BLOOD", "MF_ARTHROPOD_BLOOD"},
            {"MF_ACID_BLOOD", "MF_ACID_BLOOD"},
            {"MF_BILE_BLOOD", "MF_BILE_BLOOD"},
            {"MF_ABSORBS", "MF_ABSORBS"},
            {"MF_ABSORBS_SPLITS", "MF_ABSORBS_SPLITS"},
            {"MF_REGENMORALE", "MF_REGENMORALE"},
            {"MF_CBM_CIV", "MF_CBM_CIV"},
            {"MF_CBM_POWER", "MF_CBM_POWER"},
            {"MF_CBM_SCI", "MF_CBM_SCI"},
            {"MF_CBM_OP", "MF_CBM_OP"},
            {"MF_CBM_TECH", "MF_CBM_TECH"},
            {"MF_CBM_SUBS", "MF_CBM_SUBS"},
            {"MF_FILTHY", "MF_FILTHY"},
            {"MF_FISHABLE", "MF_FISHABLE"},
            {"MF_GROUP_BASH", "MF_GROUP_BASH"},
            {"MF_SWARMS", "MF_SWARMS"},
            {"MF_GROUP_MORALE", "MF_GROUP_MORALE"},
            {"MF_INTERIOR_AMMO", "MF_INTERIOR_AMMO"},
            {"MF_CLIMBS", "MF_CLIMBS"},
            {"MF_PUSH_MON", "MF_PUSH_MON"},
            {"MF_PUSH_VEH", "MF_PUSH_VEH"},
            {"MF_NIGHT_INVISIBILITY", "MF_NIGHT_INVISIBILITY"},
            {"MF_REVIVES_HEALTHY", "MF_REVIVES_HEALTHY"},
            {"MF_NO_NECRO", "MF_NO_NECRO"},
            {"MF_AVOID_DANGER_1", "MF_AVOID_DANGER_1"},
            {"MF_AVOID_DANGER_2", "MF_AVOID_DANGER_2"},
            {"MF_PRIORITIZE_TARGETS", "MF_PRIORITIZE_TARGETS"},
            {"MF_NOT_HALLU", "MF_NOT_HALLU"},
            {"MF_CATFOOD", "MF_CATFOOD"},
            {"MF_CATTLEFODDER", "MF_CATTLEFODDER"},
            {"MF_BIRDFOOD", "MF_BIRDFOOD"},
            {"MF_DOGFOOD", "MF_DOGFOOD"},
            {"MF_MILKABLE", "MF_MILKABLE"},
            {"MF_NO_BREED", "MF_NO_BREED"},
            {"MF_PET_WONT_FOLLOW", "MF_PET_WONT_FOLLOW"},
            {"MF_DRIPS_NAPALM", "MF_DRIPS_NAPALM"},
            {"MF_DRIPS_GASOLINE", "MF_DRIPS_GASOLINE"},
            {"MF_ELECTRIC_FIELD", "MF_ELECTRIC_FIELD"},
            {"MF_LOUDMOVES", "MF_LOUDMOVES"},
            {"MF_CAN_OPEN_DOORS", "MF_CAN_OPEN_DOORS"},
            {"MF_MAX", "MF_MAX"},
        },
    },
    m_size = {
        cpp_name = "m_size",
        values = {
            {"MS_TINY", "MS_TINY"},
            {"MS_SMALL", "MS_SMALL"},
            {"MS_MEDIUM", "MS_MEDIUM"},
            {"MS_LARGE", "MS_LARGE"},
            {"MS_HUGE", "MS_HUGE"},
        },
    },
    mf_attitude = {
        cpp_name = "mf_attitude",
        values = {
            {"MFA_BY_MOOD", "MFA_BY_MOOD"},
            {"MFA_NEUTRAL", "MFA_NEUTRAL"},
            {"MFA_FRIENDLY", "MFA_FRIENDLY"},
        },
    },
    mission_goal = {
        cpp_name = "mission_goal",
        values = {
            {"MGOAL_NULL", "MGOAL_NULL"},
            {"MGOAL_GO_TO", "MGOAL_GO_TO"},
            {"MGOAL_GO_TO_TYPE", "MGOAL_GO_TO_TYPE"},
            {"MGOAL_FIND_ITEM", "MGOAL_FIND_ITEM"},
            {"MGOAL_FIND_ANY_ITEM", "MGOAL_FIND_ANY_ITEM"},
            {"MGOAL_FIND_ITEM_GROUP", "MGOAL_FIND_ITEM_GROUP"},
            {"MGOAL_FIND_MONSTER", "MGOAL_FIND_MONSTER"},
            {"MGOAL_FIND_NPC", "MGOAL_FIND_NPC"},
            {"MGOAL_ASSASSINATE", "MGOAL_ASSASSINATE"},
            {"MGOAL_KILL_MONSTER", "MGOAL_KILL_MONSTER"},
            {"MGOAL_KILL_MONSTER_TYPE", "MGOAL_KILL_MONSTER_TYPE"},
            {"MGOAL_RECRUIT_NPC", "MGOAL_RECRUIT_NPC"},
            {"MGOAL_RECRUIT_NPC_CLASS", "MGOAL_RECRUIT_NPC_CLASS"},
            {"MGOAL_COMPUTER_TOGGLE", "MGOAL_COMPUTER_TOGGLE"},
            {"MGOAL_KILL_MONSTER_SPEC", "MGOAL_KILL_MONSTER_SPEC"},
            {"NUM_MGOAL", "NUM_MGOAL"},
        },
    },
    mission_origin = {
        cpp_name = "mission_origin",
        values = {
            {"ORIGIN_NULL", "ORIGIN_NULL"},
            {"ORIGIN_GAME_START", "ORIGIN_GAME_START"},
            {"ORIGIN_OPENER_NPC", "ORIGIN_OPENER_NPC"},
            {"ORIGIN_ANY_NPC", "ORIGIN_ANY_NPC"},
            {"ORIGIN_SECONDARY", "ORIGIN_SECONDARY"},
            {"ORIGIN_COMPUTER", "ORIGIN_COMPUTER"},
            {"NUM_ORIGIN", "NUM_ORIGIN"},
        },
    },
    mission_status = {
        cpp_name = "mission::mission_status",
        values = {
            {"yet_to_start", "mission::mission_status::yet_to_start"},
            {"in_progress", "mission::mission_status::in_progress"},
            {"success", "mission::mission_status::success"},
            {"failure", "mission::mission_status::failure"},
        },
    },
    mon_trigger = {
        cpp_name = "mon_trigger",
        values = {
            {"STALK", "mon_trigger::STALK"},
            {"MEAT", "mon_trigger::MEAT"},
            {"HOSTILE_WEAK", "mon_trigger::HOSTILE_WEAK"},
            {"HOSTILE_CLOSE", "mon_trigger::HOSTILE_CLOSE"},
            {"HURT", "mon_trigger::HURT"},
            {"FIRE", "mon_trigger::FIRE"},
            {"FRIEND_DIED", "mon_trigger::FRIEND_DIED"},
            {"FRIEND_ATTACKED", "mon_trigger::FRIEND_ATTACKED"},
            {"SOUND", "mon_trigger::SOUND"},
            {"PLAYER_NEAR_BABY", "mon_trigger::PLAYER_NEAR_BABY"},
            {"MATING_SEASON", "mon_trigger::MATING_SEASON"},
            {"_LAST", "mon_trigger::_LAST"},
        },
    },
    monster_attitude = {
        cpp_name = "monster_attitude",
        values = {
            {"MATT_NULL", "MATT_NULL"},
            {"MATT_FRIEND", "MATT_FRIEND"},
            {"MATT_FPASSIVE", "MATT_FPASSIVE"},
            {"MATT_FLEE", "MATT_FLEE"},
            {"MATT_IGNORE", "MATT_IGNORE"},
            {"MATT_FOLLOW", "MATT_FOLLOW"},
            {"MATT_ATTACK", "MATT_ATTACK"},
            {"MATT_ZLAVE", "MATT_ZLAVE"},
            {"NUM_MONSTER_ATTITUDES", "NUM_MONSTER_ATTITUDES"},
        },
    },
    monster_effect_cache_fields = {
        cpp_name = "monster_effect_cache_fields",
        values = {
            {"MOVEMENT_IMPAIRED", "MOVEMENT_IMPAIRED"},
            {"FLEEING", "FLEEING"},
            {"NUM_MEFF", "NUM_MEFF"},
        },
    },
    monster_horde_attraction = {
        cpp_name = "monster_horde_attraction",
        values = {
            {"MHA_NULL", "MHA_NULL"},
            {"MHA_ALWAYS", "MHA_ALWAYS"},
            {"MHA_LARGE", "MHA_LARGE"},
            {"MHA_OUTDOORS", "MHA_OUTDOORS"},
            {"MHA_OUTDOORS_AND_LARGE", "MHA_OUTDOORS_AND_LARGE"},
            {"MHA_NEVER", "MHA_NEVER"},
            {"NUM_MONSTER_HORDE_ATTRACTION", "NUM_MONSTER_HORDE_ATTRACTION"},
        },
    },
    moon_phase = {
        cpp_name = "moon_phase",
        values = {
            {"MOON_NEW", "MOON_NEW"},
            {"MOON_WAXING_CRESCENT", "MOON_WAXING_CRESCENT"},
            {"MOON_HALF_MOON_WAXING", "MOON_HALF_MOON_WAXING"},
            {"MOON_WAXING_GIBBOUS", "MOON_WAXING_GIBBOUS"},
            {"MOON_FULL", "MOON_FULL"},
            {"MOON_WANING_GIBBOUS", "MOON_WANING_GIBBOUS"},
            {"MOON_HALF_MOON_WANING", "MOON_HALF_MOON_WANING"},
            {"MOON_WANING_CRESCENT", "MOON_WANING_CRESCENT"},
            {"MOON_PHASE_MAX", "MOON_PHASE_MAX"},
        },
    },
    mouse_buttons = {
        cpp_name = "mouse_buttons",
        values = {
            {"MOUSE_BUTTON_LEFT", "MOUSE_BUTTON_LEFT"},
            {"MOUSE_BUTTON_RIGHT", "MOUSE_BUTTON_RIGHT"},
            {"SCROLLWHEEL_UP", "SCROLLWHEEL_UP"},
            {"SCROLLWHEEL_DOWN", "SCROLLWHEEL_DOWN"},
            {"MOUSE_MOVE", "MOUSE_MOVE"},
        },
    },
    MULTITILE_TYPE = {
        cpp_name = "MULTITILE_TYPE",
        values = {
            {"center", "center"},
            {"corner", "corner"},
            {"edge", "edge"},
            {"t_connection", "t_connection"},
            {"end_piece", "end_piece"},
            {"unconnected", "unconnected"},
            {"open_", "open_"},
            {"broken", "broken"},
            {"num_multitile_types", "num_multitile_types"},
        },
    },
    mutagen_rejection = {
        cpp_name = "mutagen_rejection",
        values = {
            {"accepted", "mutagen_rejection::accepted"},
            {"rejected", "mutagen_rejection::rejected"},
            {"destroyed", "mutagen_rejection::destroyed"},
        },
    },
    nameFlags = {
        cpp_name = "nameFlags",
        values = {
            {"nameIsMaleName", "nameIsMaleName"},
            {"nameIsFemaleName", "nameIsFemaleName"},
            {"nameIsUnisexName", "nameIsUnisexName"},
            {"nameIsGivenName", "nameIsGivenName"},
            {"nameIsFamilyName", "nameIsFamilyName"},
            {"nameIsNickName", "nameIsNickName"},
            {"nameIsTownName", "nameIsTownName"},
            {"nameIsFullName", "nameIsFullName"},
            {"nameIsWorldName", "nameIsWorldName"},
        },
    },
    navigation_mode = {
        cpp_name = "navigation_mode",
        values = {
            {"ITEM", "navigation_mode::ITEM"},
            {"CATEGORY", "navigation_mode::CATEGORY"},
        },
    },
    NODE_ERROR_TYPE = {
        cpp_name = "NODE_ERROR_TYPE",
        values = {
            {"DEPENDENCY", "DEPENDENCY"},
            {"CYCLIC", "CYCLIC"},
            {"OTHER", "OTHER"},
        },
    },
    npc_attitude = {
        cpp_name = "npc_attitude",
        values = {
            {"NPCATT_NULL", "NPCATT_NULL"},
            {"NPCATT_TALK", "NPCATT_TALK"},
            {"NPCATT_LEGACY_1", "NPCATT_LEGACY_1"},
            {"NPCATT_FOLLOW", "NPCATT_FOLLOW"},
            {"NPCATT_LEGACY_2", "NPCATT_LEGACY_2"},
            {"NPCATT_LEAD", "NPCATT_LEAD"},
            {"NPCATT_WAIT", "NPCATT_WAIT"},
            {"NPCATT_LEGACY_6", "NPCATT_LEGACY_6"},
            {"NPCATT_MUG", "NPCATT_MUG"},
            {"NPCATT_WAIT_FOR_LEAVE", "NPCATT_WAIT_FOR_LEAVE"},
            {"NPCATT_KILL", "NPCATT_KILL"},
            {"NPCATT_FLEE", "NPCATT_FLEE"},
            {"NPCATT_LEGACY_3", "NPCATT_LEGACY_3"},
            {"NPCATT_HEAL", "NPCATT_HEAL"},
            {"NPCATT_LEGACY_4", "NPCATT_LEGACY_4"},
            {"NPCATT_LEGACY_5", "NPCATT_LEGACY_5"},
            {"NPCATT_ACTIVITY", "NPCATT_ACTIVITY"},
            {"NPCATT_FLEE_TEMP", "NPCATT_FLEE_TEMP"},
            {"NPCATT_END", "NPCATT_END"},
        },
    },
    npc_favor_type = {
        cpp_name = "npc_favor_type",
        values = {
            {"FAVOR_NULL", "FAVOR_NULL"},
            {"FAVOR_GENERAL", "FAVOR_GENERAL"},
            {"FAVOR_CASH", "FAVOR_CASH"},
            {"FAVOR_ITEM", "FAVOR_ITEM"},
            {"FAVOR_TRAINING", "FAVOR_TRAINING"},
            {"NUM_FAVOR_TYPES", "NUM_FAVOR_TYPES"},
        },
    },
    npc_mission = {
        cpp_name = "npc_mission",
        values = {
            {"NPC_MISSION_NULL", "NPC_MISSION_NULL"},
            {"NPC_MISSION_LEGACY_1", "NPC_MISSION_LEGACY_1"},
            {"NPC_MISSION_SHELTER", "NPC_MISSION_SHELTER"},
            {"NPC_MISSION_SHOPKEEP", "NPC_MISSION_SHOPKEEP"},
            {"NPC_MISSION_LEGACY_2", "NPC_MISSION_LEGACY_2"},
            {"NPC_MISSION_LEGACY_3", "NPC_MISSION_LEGACY_3"},
            {"NPC_MISSION_GUARD_ALLY", "NPC_MISSION_GUARD_ALLY"},
            {"NPC_MISSION_GUARD", "NPC_MISSION_GUARD"},
            {"NPC_MISSION_GUARD_PATROL", "NPC_MISSION_GUARD_PATROL"},
            {"NPC_MISSION_ACTIVITY", "NPC_MISSION_ACTIVITY"},
            {"NPC_MISSION_TRAVELLING", "NPC_MISSION_TRAVELLING"},
        },
    },
    npc_need = {
        cpp_name = "npc_need",
        values = {
            {"need_none", "need_none"},
            {"need_ammo", "need_ammo"},
            {"need_weapon", "need_weapon"},
            {"need_gun", "need_gun"},
            {"need_food", "need_food"},
            {"need_drink", "need_drink"},
            {"num_needs", "num_needs"},
        },
    },
    npc_personality_type = {
        cpp_name = "npc_personality_type",
        values = {
            {"NPE_AGGRESSION", "NPE_AGGRESSION"},
            {"NPE_BRAVERY", "NPE_BRAVERY"},
            {"NPE_COLLECTOR", "NPE_COLLECTOR"},
            {"NPE_ALTRUISM", "NPE_ALTRUISM"},
            {"NUM_NPE", "NUM_NPE"},
        },
    },
    object_type = {
        cpp_name = "object_type",
        values = {
            {"OBJECT_NONE", "OBJECT_NONE"},
            {"OBJECT_ITEM", "OBJECT_ITEM"},
            {"OBJECT_ACTOR", "OBJECT_ACTOR"},
            {"OBJECT_PLAYER", "OBJECT_PLAYER"},
            {"OBJECT_NPC", "OBJECT_NPC"},
            {"OBJECT_MONSTER", "OBJECT_MONSTER"},
            {"OBJECT_VEHICLE", "OBJECT_VEHICLE"},
            {"OBJECT_TRAP", "OBJECT_TRAP"},
            {"OBJECT_FIELD", "OBJECT_FIELD"},
            {"OBJECT_TERRAIN", "OBJECT_TERRAIN"},
            {"OBJECT_FURNITURE", "OBJECT_FURNITURE"},
            {"NUM_OBJECTS", "NUM_OBJECTS"},
        },
    },
    oter_flags = {
        cpp_name = "oter_flags",
        values = {
            {"known_down", "known_down"},
            {"known_up", "known_up"},
            {"no_rotate", "no_rotate"},
            {"river_tile", "river_tile"},
            {"has_sidewalk", "has_sidewalk"},
            {"line_drawing", "line_drawing"},
            {"subway_connection", "subway_connection"},
            {"num_oter_flags", "num_oter_flags"},
        },
    },
    part_status_flag = {
        cpp_name = "part_status_flag",
        values = {
            {"any", "part_status_flag::any"},
            {"working", "part_status_flag::working"},
            {"available", "part_status_flag::available"},
            {"enabled", "part_status_flag::enabled"},
        },
    },
    peek_act = {
        cpp_name = "peek_act",
        values = {
            {"PA_BLIND_THROW", "PA_BLIND_THROW"},
        },
    },
    pf_special = {
        cpp_name = "pf_special",
        values = {
            {"PF_NORMAL", "PF_NORMAL"},
            {"PF_SLOW", "PF_SLOW"},
            {"PF_WALL", "PF_WALL"},
            {"PF_VEHICLE", "PF_VEHICLE"},
            {"PF_FIELD", "PF_FIELD"},
            {"PF_TRAP", "PF_TRAP"},
            {"PF_UPDOWN", "PF_UPDOWN"},
            {"PF_CLIMBABLE", "PF_CLIMBABLE"},
        },
    },
    phase_id = {
        cpp_name = "phase_id",
        values = {
            {"PNULL", "PNULL"},
            {"SOLID", "SOLID"},
            {"LIQUID", "LIQUID"},
            {"GAS", "GAS"},
            {"PLASMA", "PLASMA"},
        },
    },
    PopupFlags = {
        cpp_name = "PopupFlags",
        values = {
            {"PF_NONE", "PF_NONE"},
            {"PF_GET_KEY", "PF_GET_KEY"},
            {"PF_NO_WAIT", "PF_NO_WAIT"},
            {"PF_ON_TOP", "PF_ON_TOP"},
            {"PF_FULLSCREEN", "PF_FULLSCREEN"},
            {"PF_NO_WAIT_ON_TOP", "PF_NO_WAIT_ON_TOP"},
        },
    },
    quadrant = {
        cpp_name = "quadrant",
        values = {
            {"NE", "quadrant::NE"},
            {"SE", "quadrant::SE"},
            {"SW", "quadrant::SW"},
            {"NW", "quadrant::NW"},
            {"default_", "quadrant::default_"},
        },
    },
    quit_status = {
        cpp_name = "quit_status",
        values = {
            {"QUIT_NO", "QUIT_NO"},
            {"QUIT_SUICIDE", "QUIT_SUICIDE"},
            {"QUIT_SAVED", "QUIT_SAVED"},
            {"QUIT_NOSAVED", "QUIT_NOSAVED"},
            {"QUIT_DIED", "QUIT_DIED"},
            {"QUIT_WATCH", "QUIT_WATCH"},
        },
    },
    radio_type = {
        cpp_name = "radio_type",
        values = {
            {"MESSAGE_BROADCAST", "MESSAGE_BROADCAST"},
            {"WEATHER_RADIO", "WEATHER_RADIO"},
        },
    },
    rechargeable_cbm = {
        cpp_name = "rechargeable_cbm",
        values = {
            {"none", "rechargeable_cbm::none"},
            {"battery", "rechargeable_cbm::battery"},
            {"reactor", "rechargeable_cbm::reactor"},
            {"furnace", "rechargeable_cbm::furnace"},
        },
    },
    repair_type = {
        cpp_name = "repair_item_actor::repair_type",
        values = {
            {"RT_NOTHING", "repair_item_actor::RT_NOTHING"},
            {"RT_REPAIR", "repair_item_actor::RT_REPAIR"},
            {"RT_REFIT", "repair_item_actor::RT_REFIT"},
            {"RT_REINFORCE", "repair_item_actor::RT_REINFORCE"},
            {"RT_PRACTICE", "repair_item_actor::RT_PRACTICE"},
            {"NUM_REPAIR_TYPES", "repair_item_actor::NUM_REPAIR_TYPES"},
        },
    },
    room_type = {
        cpp_name = "room_type",
        values = {
            {"room_null", "room_null"},
            {"room_closet", "room_closet"},
            {"room_lobby", "room_lobby"},
            {"room_chemistry", "room_chemistry"},
            {"room_teleport", "room_teleport"},
            {"room_goo", "room_goo"},
            {"room_cloning", "room_cloning"},
            {"room_vivisect", "room_vivisect"},
            {"room_bionics", "room_bionics"},
            {"room_dorm", "room_dorm"},
            {"room_living", "room_living"},
            {"room_bathroom", "room_bathroom"},
            {"room_kitchen", "room_kitchen"},
            {"room_bedroom", "room_bedroom"},
            {"room_backyard", "room_backyard"},
            {"room_study", "room_study"},
            {"room_mine_shaft", "room_mine_shaft"},
            {"room_mine_office", "room_mine_office"},
            {"room_mine_storage", "room_mine_storage"},
            {"room_mine_fuel", "room_mine_fuel"},
            {"room_mine_housing", "room_mine_housing"},
            {"room_split", "room_split"},
        },
    },
    rule_state = {
        cpp_name = "rule_state",
        values = {
            {"RULE_NONE", "RULE_NONE"},
            {"RULE_WHITELISTED", "RULE_WHITELISTED"},
            {"RULE_BLACKLISTED", "RULE_BLACKLISTED"},
        },
    },
    safe_mode_type = {
        cpp_name = "safe_mode_type",
        values = {
            {"SAFE_MODE_OFF", "SAFE_MODE_OFF"},
            {"SAFE_MODE_ON", "SAFE_MODE_ON"},
            {"SAFE_MODE_STOP", "SAFE_MODE_STOP"},
        },
    },
    scaling_stat = {
        cpp_name = "scaling_stat",
        values = {
            {"STAT_NULL", "STAT_NULL"},
            {"STAT_STR", "STAT_STR"},
            {"STAT_DEX", "STAT_DEX"},
            {"STAT_INT", "STAT_INT"},
            {"STAT_PER", "STAT_PER"},
            {"NUM_STATS", "NUM_STATS"},
        },
    },
    scroll_direction = {
        cpp_name = "scroll_direction",
        values = {
            {"FORWARD", "scroll_direction::FORWARD"},
            {"BACKWARD", "scroll_direction::BACKWARD"},
        },
    },
    search_type = {
        cpp_name = "recipe_subset::search_type",
        values = {
            {"name", "recipe_subset::search_type::name"},
            {"skill", "recipe_subset::search_type::skill"},
            {"primary_skill", "recipe_subset::search_type::primary_skill"},
            {"component", "recipe_subset::search_type::component"},
            {"tool", "recipe_subset::search_type::tool"},
            {"quality", "recipe_subset::search_type::quality"},
            {"quality_result", "recipe_subset::search_type::quality_result"},
            {"description_result", "recipe_subset::search_type::description_result"},
        },
    },
    season_type = {
        cpp_name = "season_type",
        values = {
            {"SPRING", "SPRING"},
            {"SUMMER", "SUMMER"},
            {"AUTUMN", "AUTUMN"},
            {"WINTER", "WINTER"},
        },
    },
    shapetype = {
        cpp_name = "shapetype",
        values = {
            {"editmap_rect", "editmap_rect"},
            {"editmap_rect_filled", "editmap_rect_filled"},
            {"editmap_line", "editmap_line"},
            {"editmap_circle", "editmap_circle"},
        },
    },
    side = {
        cpp_name = "side",
        values = {
            {"BOTH", "side::BOTH"},
            {"LEFT", "side::LEFT"},
            {"RIGHT", "side::RIGHT"},
        },
    },
    sleep_deprivation_levels = {
        cpp_name = "sleep_deprivation_levels",
        values = {
            {"SLEEP_DEPRIVATION_HARMLESS", "SLEEP_DEPRIVATION_HARMLESS"},
            {"SLEEP_DEPRIVATION_MINOR", "SLEEP_DEPRIVATION_MINOR"},
            {"SLEEP_DEPRIVATION_SERIOUS", "SLEEP_DEPRIVATION_SERIOUS"},
            {"SLEEP_DEPRIVATION_MAJOR", "SLEEP_DEPRIVATION_MAJOR"},
            {"SLEEP_DEPRIVATION_MASSIVE", "SLEEP_DEPRIVATION_MASSIVE"},
        },
    },
    sound_t = {
        cpp_name = "sound_t",
        values = {
            {"background", "sound_t::background"},
            {"weather", "sound_t::weather"},
            {"music", "sound_t::music"},
            {"movement", "sound_t::movement"},
            {"speech", "sound_t::speech"},
            {"activity", "sound_t::activity"},
            {"destructive_activity", "sound_t::destructive_activity"},
            {"alarm", "sound_t::alarm"},
            {"combat", "sound_t::combat"},
            {"alert", "sound_t::alert"},
            {"order", "sound_t::order"},
        },
    },
    special_game_id = {
        cpp_name = "special_game_id",
        values = {
            {"SGAME_NULL", "SGAME_NULL"},
            {"SGAME_TUTORIAL", "SGAME_TUTORIAL"},
            {"SGAME_DEFENSE", "SGAME_DEFENSE"},
            {"NUM_SPECIAL_GAMES", "NUM_SPECIAL_GAMES"},
        },
    },
    status = {
        cpp_name = "turret_data::status",
        values = {
            {"invalid", "turret_data::status::invalid"},
            {"no_ammo", "turret_data::status::no_ammo"},
            {"no_power", "turret_data::status::no_power"},
            {"ready", "turret_data::status::ready"},
        },
    },
    tag_type = {
        cpp_name = "color_tag_parse_result::tag_type",
        values = {
            {"open_color_tag", "color_tag_parse_result::open_color_tag"},
            {"close_color_tag", "color_tag_parse_result::close_color_tag"},
            {"non_color_tag", "color_tag_parse_result::non_color_tag"},
        },
    },
    talk_topic_enum = {
        cpp_name = "talk_topic_enum",
        values = {
            {"TALK_NONE", "TALK_NONE"},
            {"TALK_DONE", "TALK_DONE"},
            {"TALK_GUARD", "TALK_GUARD"},
            {"TALK_MISSION_LIST", "TALK_MISSION_LIST"},
            {"TALK_MISSION_LIST_ASSIGNED", "TALK_MISSION_LIST_ASSIGNED"},
            {"TALK_MISSION_START", "TALK_MISSION_START"},
            {"TALK_MISSION_DESCRIBE", "TALK_MISSION_DESCRIBE"},
            {"TALK_MISSION_OFFER", "TALK_MISSION_OFFER"},
            {"TALK_MISSION_ACCEPTED", "TALK_MISSION_ACCEPTED"},
            {"TALK_MISSION_REJECTED", "TALK_MISSION_REJECTED"},
            {"TALK_MISSION_ADVICE", "TALK_MISSION_ADVICE"},
            {"TALK_MISSION_INQUIRE", "TALK_MISSION_INQUIRE"},
            {"TALK_MISSION_SUCCESS", "TALK_MISSION_SUCCESS"},
            {"TALK_MISSION_SUCCESS_LIE", "TALK_MISSION_SUCCESS_LIE"},
            {"TALK_MISSION_FAILURE", "TALK_MISSION_FAILURE"},
            {"TALK_MISSION_END", "TALK_MISSION_END"},
            {"TALK_MISSION_REWARD", "TALK_MISSION_REWARD"},
            {"TALK_EVAC_MERCHANT", "TALK_EVAC_MERCHANT"},
            {"TALK_EVAC_MERCHANT_NEW", "TALK_EVAC_MERCHANT_NEW"},
            {"TALK_EVAC_MERCHANT_PLANS", "TALK_EVAC_MERCHANT_PLANS"},
            {"TALK_EVAC_MERCHANT_PLANS2", "TALK_EVAC_MERCHANT_PLANS2"},
            {"TALK_EVAC_MERCHANT_PLANS3", "TALK_EVAC_MERCHANT_PLANS3"},
            {"TALK_EVAC_MERCHANT_WORLD", "TALK_EVAC_MERCHANT_WORLD"},
            {"TALK_EVAC_MERCHANT_HORDES", "TALK_EVAC_MERCHANT_HORDES"},
            {"TALK_EVAC_MERCHANT_PRIME_LOOT", "TALK_EVAC_MERCHANT_PRIME_LOOT"},
            {"TALK_EVAC_MERCHANT_ASK_JOIN", "TALK_EVAC_MERCHANT_ASK_JOIN"},
            {"TALK_EVAC_MERCHANT_NO", "TALK_EVAC_MERCHANT_NO"},
            {"TALK_EVAC_MERCHANT_HELL_NO", "TALK_EVAC_MERCHANT_HELL_NO"},
            {"TALK_FREE_MERCHANT_STOCKS", "TALK_FREE_MERCHANT_STOCKS"},
            {"TALK_FREE_MERCHANT_STOCKS_NEW", "TALK_FREE_MERCHANT_STOCKS_NEW"},
            {"TALK_FREE_MERCHANT_STOCKS_WHY", "TALK_FREE_MERCHANT_STOCKS_WHY"},
            {"TALK_FREE_MERCHANT_STOCKS_ALL", "TALK_FREE_MERCHANT_STOCKS_ALL"},
            {"TALK_FREE_MERCHANT_STOCKS_JERKY", "TALK_FREE_MERCHANT_STOCKS_JERKY"},
            {"TALK_FREE_MERCHANT_STOCKS_CORNMEAL", "TALK_FREE_MERCHANT_STOCKS_CORNMEAL"},
            {"TALK_FREE_MERCHANT_STOCKS_FLOUR", "TALK_FREE_MERCHANT_STOCKS_FLOUR"},
            {"TALK_FREE_MERCHANT_STOCKS_SUGAR", "TALK_FREE_MERCHANT_STOCKS_SUGAR"},
            {"TALK_FREE_MERCHANT_STOCKS_WINE", "TALK_FREE_MERCHANT_STOCKS_WINE"},
            {"TALK_FREE_MERCHANT_STOCKS_BEER", "TALK_FREE_MERCHANT_STOCKS_BEER"},
            {"TALK_FREE_MERCHANT_STOCKS_SMMEAT", "TALK_FREE_MERCHANT_STOCKS_SMMEAT"},
            {"TALK_FREE_MERCHANT_STOCKS_SMFISH", "TALK_FREE_MERCHANT_STOCKS_SMFISH"},
            {"TALK_FREE_MERCHANT_STOCKS_OIL", "TALK_FREE_MERCHANT_STOCKS_OIL"},
            {"TALK_FREE_MERCHANT_STOCKS_DELIVERED", "TALK_FREE_MERCHANT_STOCKS_DELIVERED"},
            {"TALK_EVAC_GUARD1", "TALK_EVAC_GUARD1"},
            {"TALK_EVAC_GUARD1_PLACE", "TALK_EVAC_GUARD1_PLACE"},
            {"TALK_EVAC_GUARD1_GOVERNMENT", "TALK_EVAC_GUARD1_GOVERNMENT"},
            {"TALK_EVAC_GUARD1_TRADE", "TALK_EVAC_GUARD1_TRADE"},
            {"TALK_EVAC_GUARD1_JOIN", "TALK_EVAC_GUARD1_JOIN"},
            {"TALK_EVAC_GUARD1_JOIN2", "TALK_EVAC_GUARD1_JOIN2"},
            {"TALK_EVAC_GUARD1_JOIN3", "TALK_EVAC_GUARD1_JOIN3"},
            {"TALK_EVAC_GUARD1_ATTITUDE", "TALK_EVAC_GUARD1_ATTITUDE"},
            {"TALK_EVAC_GUARD1_JOB", "TALK_EVAC_GUARD1_JOB"},
            {"TALK_EVAC_GUARD1_OLDGUARD", "TALK_EVAC_GUARD1_OLDGUARD"},
            {"TALK_EVAC_GUARD1_BYE", "TALK_EVAC_GUARD1_BYE"},
            {"TALK_EVAC_GUARD2", "TALK_EVAC_GUARD2"},
            {"TALK_EVAC_GUARD2_NEW", "TALK_EVAC_GUARD2_NEW"},
            {"TALK_EVAC_GUARD2_RULES", "TALK_EVAC_GUARD2_RULES"},
            {"TALK_EVAC_GUARD2_RULES_BASEMENT", "TALK_EVAC_GUARD2_RULES_BASEMENT"},
            {"TALK_EVAC_GUARD2_WHO", "TALK_EVAC_GUARD2_WHO"},
            {"TALK_EVAC_GUARD2_TRADE", "TALK_EVAC_GUARD2_TRADE"},
            {"TALK_EVAC_GUARD3", "TALK_EVAC_GUARD3"},
            {"TALK_EVAC_GUARD3_NEW", "TALK_EVAC_GUARD3_NEW"},
            {"TALK_EVAC_GUARD3_RULES", "TALK_EVAC_GUARD3_RULES"},
            {"TALK_EVAC_GUARD3_HIDE1", "TALK_EVAC_GUARD3_HIDE1"},
            {"TALK_EVAC_GUARD3_HIDE2", "TALK_EVAC_GUARD3_HIDE2"},
            {"TALK_EVAC_GUARD3_WASTE", "TALK_EVAC_GUARD3_WASTE"},
            {"TALK_EVAC_GUARD3_DEAD", "TALK_EVAC_GUARD3_DEAD"},
            {"TALK_EVAC_GUARD3_HOSTILE", "TALK_EVAC_GUARD3_HOSTILE"},
            {"TALK_EVAC_GUARD3_INSULT", "TALK_EVAC_GUARD3_INSULT"},
            {"TALK_EVAC_HUNTER", "TALK_EVAC_HUNTER"},
            {"TALK_EVAC_HUNTER_SMELL", "TALK_EVAC_HUNTER_SMELL"},
            {"TALK_EVAC_HUNTER_DO", "TALK_EVAC_HUNTER_DO"},
            {"TALK_EVAC_HUNTER_LIFE", "TALK_EVAC_HUNTER_LIFE"},
            {"TALK_EVAC_HUNTER_HUNT", "TALK_EVAC_HUNTER_HUNT"},
            {"TALK_EVAC_HUNTER_SALE", "TALK_EVAC_HUNTER_SALE"},
            {"TALK_EVAC_HUNTER_ADVICE", "TALK_EVAC_HUNTER_ADVICE"},
            {"TALK_EVAC_HUNTER_BYE", "TALK_EVAC_HUNTER_BYE"},
            {"TALK_OLD_GUARD_REP", "TALK_OLD_GUARD_REP"},
            {"TALK_OLD_GUARD_REP_NEW", "TALK_OLD_GUARD_REP_NEW"},
            {"TALK_OLD_GUARD_REP_NEW_DOING", "TALK_OLD_GUARD_REP_NEW_DOING"},
            {"TALK_OLD_GUARD_REP_NEW_DOWNSIDE", "TALK_OLD_GUARD_REP_NEW_DOWNSIDE"},
            {"TALK_OLD_GUARD_REP_WORLD", "TALK_OLD_GUARD_REP_WORLD"},
            {"TALK_OLD_GUARD_REP_WORLD_2NDFLEET", "TALK_OLD_GUARD_REP_WORLD_2NDFLEET"},
            {"TALK_OLD_GUARD_REP_WORLD_FOOTHOLDS", "TALK_OLD_GUARD_REP_WORLD_FOOTHOLDS"},
            {"TALK_OLD_GUARD_REP_ASK_JOIN", "TALK_OLD_GUARD_REP_ASK_JOIN"},
            {"TALK_ARSONIST", "TALK_ARSONIST"},
            {"TALK_ARSONIST_NEW", "TALK_ARSONIST_NEW"},
            {"TALK_ARSONIST_DOING", "TALK_ARSONIST_DOING"},
            {"TALK_ARSONIST_DOING_REBAR", "TALK_ARSONIST_DOING_REBAR"},
            {"TALK_ARSONIST_WORLD", "TALK_ARSONIST_WORLD"},
            {"TALK_ARSONIST_WORLD_OPTIMISTIC", "TALK_ARSONIST_WORLD_OPTIMISTIC"},
            {"TALK_ARSONIST_JOIN", "TALK_ARSONIST_JOIN"},
            {"TALK_ARSONIST_MUTATION", "TALK_ARSONIST_MUTATION"},
            {"TALK_ARSONIST_MUTATION_INSULT", "TALK_ARSONIST_MUTATION_INSULT"},
            {"TALK_SCAVENGER_MERC", "TALK_SCAVENGER_MERC"},
            {"TALK_SCAVENGER_MERC_NEW", "TALK_SCAVENGER_MERC_NEW"},
            {"TALK_SCAVENGER_MERC_TIPS", "TALK_SCAVENGER_MERC_TIPS"},
            {"TALK_SCAVENGER_MERC_HIRE", "TALK_SCAVENGER_MERC_HIRE"},
            {"TALK_SCAVENGER_MERC_HIRE_SUCCESS", "TALK_SCAVENGER_MERC_HIRE_SUCCESS"},
            {"TALK_SHELTER", "TALK_SHELTER"},
            {"TALK_SHELTER_PLANS", "TALK_SHELTER_PLANS"},
            {"TALK_SHARE_EQUIPMENT", "TALK_SHARE_EQUIPMENT"},
            {"TALK_GIVE_EQUIPMENT", "TALK_GIVE_EQUIPMENT"},
            {"TALK_DENY_EQUIPMENT", "TALK_DENY_EQUIPMENT"},
            {"TALK_TRAIN", "TALK_TRAIN"},
            {"TALK_TRAIN_START", "TALK_TRAIN_START"},
            {"TALK_TRAIN_FORCE", "TALK_TRAIN_FORCE"},
            {"TALK_SUGGEST_FOLLOW", "TALK_SUGGEST_FOLLOW"},
            {"TALK_AGREE_FOLLOW", "TALK_AGREE_FOLLOW"},
            {"TALK_DENY_FOLLOW", "TALK_DENY_FOLLOW"},
            {"TALK_SHOPKEEP", "TALK_SHOPKEEP"},
            {"TALK_LEADER", "TALK_LEADER"},
            {"TALK_LEAVE", "TALK_LEAVE"},
            {"TALK_PLAYER_LEADS", "TALK_PLAYER_LEADS"},
            {"TALK_LEADER_STAYS", "TALK_LEADER_STAYS"},
            {"TALK_HOW_MUCH_FURTHER", "TALK_HOW_MUCH_FURTHER"},
            {"TALK_FRIEND", "TALK_FRIEND"},
            {"TALK_FRIEND_GUARD", "TALK_FRIEND_GUARD"},
            {"TALK_DENY_GUARD", "TALK_DENY_GUARD"},
            {"TALK_DENY_TRAIN", "TALK_DENY_TRAIN"},
            {"TALK_DENY_PERSONAL", "TALK_DENY_PERSONAL"},
            {"TALK_FRIEND_UNCOMFORTABLE", "TALK_FRIEND_UNCOMFORTABLE"},
            {"TALK_COMBAT_COMMANDS", "TALK_COMBAT_COMMANDS"},
            {"TALK_COMBAT_ENGAGEMENT", "TALK_COMBAT_ENGAGEMENT"},
            {"TALK_STRANGER_NEUTRAL", "TALK_STRANGER_NEUTRAL"},
            {"TALK_STRANGER_WARY", "TALK_STRANGER_WARY"},
            {"TALK_STRANGER_SCARED", "TALK_STRANGER_SCARED"},
            {"TALK_STRANGER_FRIENDLY", "TALK_STRANGER_FRIENDLY"},
            {"TALK_STRANGER_AGGRESSIVE", "TALK_STRANGER_AGGRESSIVE"},
            {"TALK_MUG", "TALK_MUG"},
            {"TALK_DESCRIBE_MISSION", "TALK_DESCRIBE_MISSION"},
            {"TALK_WEAPON_DROPPED", "TALK_WEAPON_DROPPED"},
            {"TALK_DEMAND_LEAVE", "TALK_DEMAND_LEAVE"},
            {"TALK_SIZE_UP", "TALK_SIZE_UP"},
            {"TALK_LOOK_AT", "TALK_LOOK_AT"},
            {"TALK_OPINION", "TALK_OPINION"},
            {"NUM_TALK_TOPICS", "NUM_TALK_TOPICS"},
        },
    },
    talk_trial_type = {
        cpp_name = "talk_trial_type",
        values = {
            {"TALK_TRIAL_NONE", "TALK_TRIAL_NONE"},
            {"TALK_TRIAL_LIE", "TALK_TRIAL_LIE"},
            {"TALK_TRIAL_PERSUADE", "TALK_TRIAL_PERSUADE"},
            {"TALK_TRIAL_INTIMIDATE", "TALK_TRIAL_INTIMIDATE"},
            {"TALK_TRIAL_CONDITION", "TALK_TRIAL_CONDITION"},
            {"NUM_TALK_TRIALS", "NUM_TALK_TRIALS"},
        },
    },
    target_mode = {
        cpp_name = "target_mode",
        values = {
            {"TARGET_MODE_FIRE", "TARGET_MODE_FIRE"},
            {"TARGET_MODE_THROW", "TARGET_MODE_THROW"},
            {"TARGET_MODE_TURRET", "TARGET_MODE_TURRET"},
            {"TARGET_MODE_TURRET_MANUAL", "TARGET_MODE_TURRET_MANUAL"},
            {"TARGET_MODE_REACH", "TARGET_MODE_REACH"},
            {"TARGET_MODE_THROW_BLIND", "TARGET_MODE_THROW_BLIND"},
        },
    },
    task_reason = {
        cpp_name = "task_reason",
        values = {
            {"UNKNOWN_TASK", "UNKNOWN_TASK"},
            {"CAN_DO", "CAN_DO"},
            {"INVALID_TARGET", "INVALID_TARGET"},
            {"LACK_TOOLS", "LACK_TOOLS"},
            {"NOT_FREE", "NOT_FREE"},
            {"LACK_SKILL", "LACK_SKILL"},
            {"MOVING_VEHICLE", "MOVING_VEHICLE"},
            {"LOW_MORALE", "LOW_MORALE"},
        },
    },
    ter_bitflags = {
        cpp_name = "ter_bitflags",
        values = {
            {"TFLAG_TRANSPARENT", "TFLAG_TRANSPARENT"},
            {"TFLAG_FLAMMABLE", "TFLAG_FLAMMABLE"},
            {"TFLAG_REDUCE_SCENT", "TFLAG_REDUCE_SCENT"},
            {"TFLAG_SWIMMABLE", "TFLAG_SWIMMABLE"},
            {"TFLAG_SUPPORTS_ROOF", "TFLAG_SUPPORTS_ROOF"},
            {"TFLAG_MINEABLE", "TFLAG_MINEABLE"},
            {"TFLAG_NOITEM", "TFLAG_NOITEM"},
            {"TFLAG_NO_SIGHT", "TFLAG_NO_SIGHT"},
            {"TFLAG_SEALED", "TFLAG_SEALED"},
            {"TFLAG_ALLOW_FIELD_EFFECT", "TFLAG_ALLOW_FIELD_EFFECT"},
            {"TFLAG_LIQUID", "TFLAG_LIQUID"},
            {"TFLAG_COLLAPSES", "TFLAG_COLLAPSES"},
            {"TFLAG_FLAMMABLE_ASH", "TFLAG_FLAMMABLE_ASH"},
            {"TFLAG_DESTROY_ITEM", "TFLAG_DESTROY_ITEM"},
            {"TFLAG_INDOORS", "TFLAG_INDOORS"},
            {"TFLAG_LIQUIDCONT", "TFLAG_LIQUIDCONT"},
            {"TFLAG_FIRE_CONTAINER", "TFLAG_FIRE_CONTAINER"},
            {"TFLAG_FLAMMABLE_HARD", "TFLAG_FLAMMABLE_HARD"},
            {"TFLAG_SUPPRESS_SMOKE", "TFLAG_SUPPRESS_SMOKE"},
            {"TFLAG_SHARP", "TFLAG_SHARP"},
            {"TFLAG_DIGGABLE", "TFLAG_DIGGABLE"},
            {"TFLAG_ROUGH", "TFLAG_ROUGH"},
            {"TFLAG_UNSTABLE", "TFLAG_UNSTABLE"},
            {"TFLAG_WALL", "TFLAG_WALL"},
            {"TFLAG_DEEP_WATER", "TFLAG_DEEP_WATER"},
            {"TFLAG_CURRENT", "TFLAG_CURRENT"},
            {"TFLAG_HARVESTED", "TFLAG_HARVESTED"},
            {"TFLAG_PERMEABLE", "TFLAG_PERMEABLE"},
            {"TFLAG_AUTO_WALL_SYMBOL", "TFLAG_AUTO_WALL_SYMBOL"},
            {"TFLAG_CONNECT_TO_WALL", "TFLAG_CONNECT_TO_WALL"},
            {"TFLAG_CLIMBABLE", "TFLAG_CLIMBABLE"},
            {"TFLAG_GOES_DOWN", "TFLAG_GOES_DOWN"},
            {"TFLAG_GOES_UP", "TFLAG_GOES_UP"},
            {"TFLAG_NO_FLOOR", "TFLAG_NO_FLOOR"},
            {"TFLAG_SEEN_FROM_ABOVE", "TFLAG_SEEN_FROM_ABOVE"},
            {"TFLAG_RAMP", "TFLAG_RAMP"},
            {"TFLAG_HIDE_PLACE", "TFLAG_HIDE_PLACE"},
            {"TFLAG_BLOCK_WIND", "TFLAG_BLOCK_WIND"},
            {"TFLAG_FLAT", "TFLAG_FLAT"},
            {"NUM_TERFLAGS", "NUM_TERFLAGS"},
        },
    },
    ter_connects = {
        cpp_name = "ter_connects",
        values = {
            {"TERCONN_NONE", "TERCONN_NONE"},
            {"TERCONN_WALL", "TERCONN_WALL"},
            {"TERCONN_CHAINFENCE", "TERCONN_CHAINFENCE"},
            {"TERCONN_WOODFENCE", "TERCONN_WOODFENCE"},
            {"TERCONN_RAILING", "TERCONN_RAILING"},
            {"TERCONN_WATER", "TERCONN_WATER"},
            {"TERCONN_PAVEMENT", "TERCONN_PAVEMENT"},
            {"TERCONN_RAIL", "TERCONN_RAIL"},
        },
    },
    text_alignment = {
        cpp_name = "text_alignment",
        values = {
            {"TEXT_ALIGNMENT_LEFT", "TEXT_ALIGNMENT_LEFT"},
            {"TEXT_ALIGNMENT_CENTER", "TEXT_ALIGNMENT_CENTER"},
            {"TEXT_ALIGNMENT_RIGHT", "TEXT_ALIGNMENT_RIGHT"},
        },
    },
    TILE_CATEGORY = {
        cpp_name = "TILE_CATEGORY",
        values = {
            {"C_NONE", "C_NONE"},
            {"C_VEHICLE_PART", "C_VEHICLE_PART"},
            {"C_TERRAIN", "C_TERRAIN"},
            {"C_ITEM", "C_ITEM"},
            {"C_FURNITURE", "C_FURNITURE"},
            {"C_TRAP", "C_TRAP"},
            {"C_FIELD", "C_FIELD"},
            {"C_LIGHTING", "C_LIGHTING"},
            {"C_MONSTER", "C_MONSTER"},
            {"C_BULLET", "C_BULLET"},
            {"C_HIT_ENTITY", "C_HIT_ENTITY"},
            {"C_WEATHER", "C_WEATHER"},
        },
    },
    tut_lesson = {
        cpp_name = "tut_lesson",
        values = {
            {"LESSON_INTRO", "LESSON_INTRO"},
            {"LESSON_MOVE", "LESSON_MOVE"},
            {"LESSON_LOOK", "LESSON_LOOK"},
            {"LESSON_OPEN", "LESSON_OPEN"},
            {"LESSON_CLOSE", "LESSON_CLOSE"},
            {"LESSON_SMASH", "LESSON_SMASH"},
            {"LESSON_WINDOW", "LESSON_WINDOW"},
            {"LESSON_PICKUP", "LESSON_PICKUP"},
            {"LESSON_EXAMINE", "LESSON_EXAMINE"},
            {"LESSON_INTERACT", "LESSON_INTERACT"},
            {"LESSON_FULL_INV", "LESSON_FULL_INV"},
            {"LESSON_WIELD_NO_SPACE", "LESSON_WIELD_NO_SPACE"},
            {"LESSON_AUTOWIELD", "LESSON_AUTOWIELD"},
            {"LESSON_ITEM_INTO_INV", "LESSON_ITEM_INTO_INV"},
            {"LESSON_GOT_ARMOR", "LESSON_GOT_ARMOR"},
            {"LESSON_GOT_WEAPON", "LESSON_GOT_WEAPON"},
            {"LESSON_GOT_FOOD", "LESSON_GOT_FOOD"},
            {"LESSON_GOT_TOOL", "LESSON_GOT_TOOL"},
            {"LESSON_GOT_GUN", "LESSON_GOT_GUN"},
            {"LESSON_GOT_AMMO", "LESSON_GOT_AMMO"},
            {"LESSON_WORE_ARMOR", "LESSON_WORE_ARMOR"},
            {"LESSON_WORE_STORAGE", "LESSON_WORE_STORAGE"},
            {"LESSON_WORE_MASK", "LESSON_WORE_MASK"},
            {"LESSON_WEAPON_INFO", "LESSON_WEAPON_INFO"},
            {"LESSON_HIT_MONSTER", "LESSON_HIT_MONSTER"},
            {"LESSON_PAIN", "LESSON_PAIN"},
            {"LESSON_BUTCHER", "LESSON_BUTCHER"},
            {"LESSON_TOOK_PAINKILLER", "LESSON_TOOK_PAINKILLER"},
            {"LESSON_TOOK_CIG", "LESSON_TOOK_CIG"},
            {"LESSON_DRANK_WATER", "LESSON_DRANK_WATER"},
            {"LESSON_ACT_GRENADE", "LESSON_ACT_GRENADE"},
            {"LESSON_ACT_BUBBLEWRAP", "LESSON_ACT_BUBBLEWRAP"},
            {"LESSON_OVERLOADED", "LESSON_OVERLOADED"},
            {"LESSON_GUN_LOAD", "LESSON_GUN_LOAD"},
            {"LESSON_GUN_FIRE", "LESSON_GUN_FIRE"},
            {"LESSON_RECOIL", "LESSON_RECOIL"},
            {"LESSON_STAIRS", "LESSON_STAIRS"},
            {"LESSON_DARK_NO_FLASH", "LESSON_DARK_NO_FLASH"},
            {"LESSON_DARK", "LESSON_DARK"},
            {"LESSON_PICKUP_WATER", "LESSON_PICKUP_WATER"},
            {"NUM_LESSONS", "NUM_LESSONS"},
        },
    },
    Type = {
        cpp_name = "Item_group::Type",
        values = {
            {"G_COLLECTION", "Item_group::G_COLLECTION"},
            {"G_DISTRIBUTION", "Item_group::G_DISTRIBUTION"},
        },
    },
    type = {
        cpp_name = "item_location::type",
        values = {
            {"invalid", "item_location::type::invalid"},
            {"character", "item_location::type::character"},
            {"map", "item_location::type::map"},
            {"vehicle", "item_location::type::vehicle"},
        },
    },
    Type = {
        cpp_name = "Single_item_creator::Type",
        values = {
            {"S_ITEM_GROUP", "Single_item_creator::S_ITEM_GROUP"},
            {"S_ITEM", "Single_item_creator::S_ITEM"},
            {"S_NONE", "Single_item_creator::S_NONE"},
        },
    },
    type = {
        cpp_name = "type",
        values = {
            {"invalid", "type::invalid"},
            {"none", "type::none"},
            {"north", "type::north"},
            {"east", "type::east"},
            {"south", "type::south"},
            {"west", "type::west"},
        },
    },
    units_type = {
        cpp_name = "units_type",
        values = {
            {"VU_VEHICLE", "VU_VEHICLE"},
            {"VU_WIND", "VU_WIND"},
        },
    },
    usage = {
        cpp_name = "usage",
        values = {
            {"use_from_map", "use_from_map"},
            {"use_from_player", "use_from_player"},
            {"use_from_both", "use_from_both"},
            {"use_from_none", "use_from_none"},
            {"cancel", "cancel"},
        },
    },
    veh_coll_type = {
        cpp_name = "veh_coll_type",
        values = {
            {"veh_coll_nothing", "veh_coll_nothing"},
            {"veh_coll_body", "veh_coll_body"},
            {"veh_coll_veh", "veh_coll_veh"},
            {"veh_coll_bashable", "veh_coll_bashable"},
            {"veh_coll_other", "veh_coll_other"},
            {"num_veh_coll_types", "num_veh_coll_types"},
        },
    },
    visibility_type = {
        cpp_name = "visibility_type",
        values = {
            {"VIS_HIDDEN", "VIS_HIDDEN"},
            {"VIS_CLEAR", "VIS_CLEAR"},
            {"VIS_LIT", "VIS_LIT"},
            {"VIS_BOOMER", "VIS_BOOMER"},
            {"VIS_DARK", "VIS_DARK"},
            {"VIS_BOOMER_DARK", "VIS_BOOMER_DARK"},
        },
    },
    vision_modes = {
        cpp_name = "vision_modes",
        values = {
            {"DEBUG_NIGHTVISION", "DEBUG_NIGHTVISION"},
            {"NV_GOGGLES", "NV_GOGGLES"},
            {"NIGHTVISION_1", "NIGHTVISION_1"},
            {"NIGHTVISION_2", "NIGHTVISION_2"},
            {"NIGHTVISION_3", "NIGHTVISION_3"},
            {"FULL_ELFA_VISION", "FULL_ELFA_VISION"},
            {"ELFA_VISION", "ELFA_VISION"},
            {"CEPH_VISION", "CEPH_VISION"},
            {"FELINE_VISION", "FELINE_VISION"},
            {"BIRD_EYE", "BIRD_EYE"},
            {"URSINE_VISION", "URSINE_VISION"},
            {"BOOMERED", "BOOMERED"},
            {"DARKNESS", "DARKNESS"},
            {"IR_VISION", "IR_VISION"},
            {"VISION_CLAIRVOYANCE", "VISION_CLAIRVOYANCE"},
            {"VISION_CLAIRVOYANCE_PLUS", "VISION_CLAIRVOYANCE_PLUS"},
            {"VISION_CLAIRVOYANCE_SUPER", "VISION_CLAIRVOYANCE_SUPER"},
            {"NUM_VISION_MODES", "NUM_VISION_MODES"},
        },
    },
    VisitResponse = {
        cpp_name = "VisitResponse",
        values = {
            {"ABORT", "VisitResponse::ABORT"},
            {"NEXT", "VisitResponse::NEXT"},
            {"SKIP", "VisitResponse::SKIP"},
        },
    },
    vpart_bitflags = {
        cpp_name = "vpart_bitflags",
        values = {
            {"VPFLAG_ARMOR", "VPFLAG_ARMOR"},
            {"VPFLAG_EVENTURN", "VPFLAG_EVENTURN"},
            {"VPFLAG_ODDTURN", "VPFLAG_ODDTURN"},
            {"VPFLAG_CONE_LIGHT", "VPFLAG_CONE_LIGHT"},
            {"VPFLAG_WIDE_CONE_LIGHT", "VPFLAG_WIDE_CONE_LIGHT"},
            {"VPFLAG_HALF_CIRCLE_LIGHT", "VPFLAG_HALF_CIRCLE_LIGHT"},
            {"VPFLAG_CIRCLE_LIGHT", "VPFLAG_CIRCLE_LIGHT"},
            {"VPFLAG_BOARDABLE", "VPFLAG_BOARDABLE"},
            {"VPFLAG_AISLE", "VPFLAG_AISLE"},
            {"VPFLAG_CONTROLS", "VPFLAG_CONTROLS"},
            {"VPFLAG_OBSTACLE", "VPFLAG_OBSTACLE"},
            {"VPFLAG_OPAQUE", "VPFLAG_OPAQUE"},
            {"VPFLAG_OPENABLE", "VPFLAG_OPENABLE"},
            {"VPFLAG_SEATBELT", "VPFLAG_SEATBELT"},
            {"VPFLAG_SPACE_HEATER", "VPFLAG_SPACE_HEATER"},
            {"VPFLAG_WHEEL", "VPFLAG_WHEEL"},
            {"VPFLAG_MOUNTABLE", "VPFLAG_MOUNTABLE"},
            {"VPFLAG_FLOATS", "VPFLAG_FLOATS"},
            {"VPFLAG_DOME_LIGHT", "VPFLAG_DOME_LIGHT"},
            {"VPFLAG_AISLE_LIGHT", "VPFLAG_AISLE_LIGHT"},
            {"VPFLAG_ATOMIC_LIGHT", "VPFLAG_ATOMIC_LIGHT"},
            {"VPFLAG_ALTERNATOR", "VPFLAG_ALTERNATOR"},
            {"VPFLAG_ENGINE", "VPFLAG_ENGINE"},
            {"VPFLAG_FRIDGE", "VPFLAG_FRIDGE"},
            {"VPFLAG_FREEZER", "VPFLAG_FREEZER"},
            {"VPFLAG_LIGHT", "VPFLAG_LIGHT"},
            {"VPFLAG_WINDOW", "VPFLAG_WINDOW"},
            {"VPFLAG_CURTAIN", "VPFLAG_CURTAIN"},
            {"VPFLAG_CARGO", "VPFLAG_CARGO"},
            {"VPFLAG_INTERNAL", "VPFLAG_INTERNAL"},
            {"VPFLAG_SOLAR_PANEL", "VPFLAG_SOLAR_PANEL"},
            {"VPFLAG_WATER_WHEEL", "VPFLAG_WATER_WHEEL"},
            {"VPFLAG_WIND_TURBINE", "VPFLAG_WIND_TURBINE"},
            {"VPFLAG_RECHARGE", "VPFLAG_RECHARGE"},
            {"VPFLAG_EXTENDS_VISION", "VPFLAG_EXTENDS_VISION"},
            {"VPFLAG_ENABLED_DRAINS_EPOWER", "VPFLAG_ENABLED_DRAINS_EPOWER"},
            {"VPFLAG_WASHING_MACHINE", "VPFLAG_WASHING_MACHINE"},
            {"VPFLAG_FLUIDTANK", "VPFLAG_FLUIDTANK"},
            {"VPFLAG_REACTOR", "VPFLAG_REACTOR"},
            {"NUM_VPFLAGS", "NUM_VPFLAGS"},
        },
    },
    water_tolerance = {
        cpp_name = "player::water_tolerance",
        values = {
            {"WT_IGNORED", "player::WT_IGNORED"},
            {"WT_NEUTRAL", "player::WT_NEUTRAL"},
            {"WT_GOOD", "player::WT_GOOD"},
            {"NUM_WATER_TOLERANCE", "player::NUM_WATER_TOLERANCE"},
        },
    },
    weather_type = {
        cpp_name = "weather_type",
        values = {
            {"WEATHER_NULL", "WEATHER_NULL"},
            {"WEATHER_CLEAR", "WEATHER_CLEAR"},
            {"WEATHER_SUNNY", "WEATHER_SUNNY"},
            {"WEATHER_CLOUDY", "WEATHER_CLOUDY"},
            {"WEATHER_DRIZZLE", "WEATHER_DRIZZLE"},
            {"WEATHER_RAINY", "WEATHER_RAINY"},
            {"WEATHER_THUNDER", "WEATHER_THUNDER"},
            {"WEATHER_LIGHTNING", "WEATHER_LIGHTNING"},
            {"WEATHER_ACID_DRIZZLE", "WEATHER_ACID_DRIZZLE"},
            {"WEATHER_ACID_RAIN", "WEATHER_ACID_RAIN"},
            {"WEATHER_FLURRIES", "WEATHER_FLURRIES"},
            {"WEATHER_SNOW", "WEATHER_SNOW"},
            {"WEATHER_SNOWSTORM", "WEATHER_SNOWSTORM"},
            {"NUM_WEATHER_TYPES", "NUM_WEATHER_TYPES"},
        },
    },
    weekdays = {
        cpp_name = "weekdays",
        values = {
            {"SUNDAY", "weekdays::SUNDAY"},
            {"MONDAY", "weekdays::MONDAY"},
            {"TUESDAY", "weekdays::TUESDAY"},
            {"WEDNESDAY", "weekdays::WEDNESDAY"},
            {"THURSDAY", "weekdays::THURSDAY"},
            {"FRIDAY", "weekdays::FRIDAY"},
            {"SATURDAY", "weekdays::SATURDAY"},
        },
    },
}
